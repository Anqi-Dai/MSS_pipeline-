filter(!is.na(gender))
ptb <- read_csv('../data/OPBG_clinicaldata_w_prior_lines_11-30-2020 edited.csv') %>%
clean_names() %>%
mutate(pid = str_replace(pt_id_de_identified, 'N$',''),
pid = str_replace(pid, '4-B','4B'),
pid = str_replace(pid, '13-B','13')) %>%
select(pid, age_at_infusion, gender, disease, disease_class, car_construct, cr_y_n, orr_y_n, toxicity_y_n, cytokine_release_syndrome_y_n,crs_grade) %>%
rename(crs = cytokine_release_syndrome_y_n,
cr = cr_y_n,
orr = orr_y_n,
toxicity = toxicity_y_n) %>%
# remove three patients cuz they are on sponsored trial
filter(!is.na(gender))
ptb <- read_csv('../data/OPBG_clinicaldata_w_prior_lines_11-30-2020 edited.csv') %>%
clean_names() %>%
mutate(pid = str_replace(pt_id_de_identified, 'N$',''),
pid = str_replace(pid, '4-B','4B'),
pid = str_replace(pid, '13-B','13')) %>%
select(pid, age_at_infusion, gender, disease, disease_class, car_construct, cr_y_n, orr_y_n, toxicity_y_n, cytokine_release_syndrome_y_n,crs_grade) %>%
rename(crs = cytokine_release_syndrome_y_n,
cr = cr_y_n,
orr = orr_y_n,
toxicity = toxicity_y_n) %>%
# remove three patients cuz they are on sponsored trial
filter(!is.na(gender))
ptb <- read_csv('../data/OPBG_clinicaldata_w_prior_lines_11-30-2020 edited.csv') %>%
clean_names() %>%
mutate(pid = str_replace(pt_id_de_identified, 'N$',''),
pid = str_replace(pid, '4-B','4B'),
pid = str_replace(pid, '13-B','13')) %>%
select(pid, age_at_infusion, gender, disease, disease_class, car_construct, cr_y_n, orr_y_n, toxicity_y_n, cytokine_release_syndrome_y_n,crs_grade) %>%
rename(crs = cytokine_release_syndrome_y_n,
cr = cr_y_n,
orr = orr_y_n,
toxicity = toxicity_y_n) %>%
# remove three patients cuz they are on sponsored trial
filter(!is.na(gender))
View(ptb)
View(ptb)
View(ptb)
View(ptb)
ptb <- read_csv('../data/OPBG_clinicaldata_w_prior_lines_11-30-2020 edited.csv') %>%
clean_names() %>%
mutate(pid = str_replace(pt_id_de_identified, 'N$',''),
pid = str_replace(pid, '4-B','4B'),
pid = str_replace(pid, '13-B','13')) %>%
select(pid, age_at_infusion, gender, disease, disease_class, car_construct, cr_y_n, orr_y_n, toxicity_y_n, cytokine_release_syndrome_y_n,crs_grade) %>%
rename(crs = cytokine_release_syndrome_y_n,
cr = cr_y_n,
orr = orr_y_n,
toxicity = toxicity_y_n) %>%
# remove three patients cuz they are on sponsored trial
filter(!is.na(gender))
# eligible baseline stool sample before day 0 or close to day 0
stools <- stb_new %>%
filter(pid %in% ptb$pid)
View(stools)
# eligible baseline stool sample before day 0 or close to day 0
stools <- stb_new %>%
filter(pid %in% ptb$pid)
# eligible baseline stool sample before day 0 or close to day 0
stools <- stb_new %>%
filter(pid %in% ptb$pid)
View(stools)
stools <- stb_new %>%
filter(pid %in% ptb$pid)
# eligible baseline stool sample before day 0 or close to day 0
stools <- stb_new %>%
filter(pid %in% ptb$pid)
stools %>% write_csv('../data/002_STB.csv')
stools
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day)
View(baseline)
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day)
baseline <- stools %>%
group_by(pid) %>%
arrange(day)
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day)
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day)
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day)
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day)
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day)
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day)
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2)
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026')
taxa
# calculate all of the alpha diversity
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
library(vegan)
# calculate all of the alpha diversity
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
# calculate all of the alpha diversity
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
div <- diversity(cts, index = 'inv') %>%
enframe(name = 'fid', value = 'inv')
View(div)
# calculate all of the alpha diversity
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
div <- diversity(cts, index = 'inv') %>%
enframe(name = 'fid', value = 'inv')
# calculate all of the alpha diversity
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
div <- diversity(cts, index = 'inv') %>%
enframe(name = 'fid', value = 'inv')
# calculate all of the alpha diversity
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
div <- diversity(cts, index = 'inv') %>%
enframe(name = 'fid', value = 'inv')
# calculate all of the alpha diversity
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
div <- diversity(cts, index = 'inv') %>%
enframe(name = 'fid', value = 'inv')
# calculate all of the alpha diversity
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
div <- diversity(cts, index = 'inv') %>%
enframe(name = 'fid', value = 'inv')
# calculate all of the alpha diversity
cts <- taxa %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('fid')
div <- diversity(cts, index = 'inv') %>%
enframe(name = 'fid', value = 'inv')
View(div)
div %>% write_csv('../data/001_alpha_div.csv')
alpha <- read_csv('../data/001_alpha_div.csv')
View(alpha)
alpha <- read_csv('../data/001_alpha_div.csv')
alpha <- read_csv('../data/001_alpha_div.csv')
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026') %>%
inner_join(alpha)
alpha <- read_csv('../data/001_alpha_div.csv')
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026') %>%
inner_join(alpha) %>% inner_join(ptb)
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026') %>%
inner_join(alpha)
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026') %>%
inner_join(alpha)
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026') %>%
inner_join(alpha)
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026') %>%
inner_join(alpha) %>% inner_join(ptb)
View(baseline)
View(ptb)
removedisease <- ptb %>%
count(disease)
removedisease <- ptb %>%
count(disease, sort = T)
View(removedisease)
removedisease <- ptb %>%
count(disease, sort = T) %>%
filter(n == 1)
removedisease <- ptb %>%
count(disease, sort = T) %>%
filter(n == 1) %>%
pull(disease)
removedisease
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026') %>%
inner_join(alpha) %>%
inner_join(ptb) %>%
# remove three diseases that there are only one patient
filter(!disease %in% removedisease) %>%
# remove the sample from CMT004B
filter(pid != 'CMT004B')
View(baseline)
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026') %>%
inner_join(alpha) %>%
inner_join(ptb) %>%
# remove three diseases that there are only one patient
filter(!disease %in% removedisease) %>%
# remove the sample from CMT004B
filter(pid != 'CMT004B')
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026') %>%
inner_join(alpha) %>%
inner_join(ptb) %>%
# remove three diseases that there are only one patient
filter(!disease %in% removedisease) %>%
# remove the sample from CMT004B
filter(pid != 'CMT004B')
baseline
# finally I can look at within each disease
baseline %>%
split(.$disease) %>%
map(function(df){
df %>%
ggboxplot(x = 'toxicity', y =='inv')
})
baseline
baseline %>%
split(.$disease) %>%
map(function(df){
df %>%
ggboxplot(x = 'toxicity', y =='inv')
})
baseline %>%
split(.$disease)
# finally I can look at within each disease
baseline %>%
split(.$disease) %>%
map(function(df){
df %>%
ggboxplot(x = 'toxicity', y =='inv')
})
baseline %>% ggboxplot(x = 'toxicity', y =='inv')
baseline %>% ggboxplot(x = 'toxicity', y =='inv')
library(ggpubr)
baseline %>% ggboxplot(x = 'toxicity', y ='inv')
# finally I can look at within each disease
baseline %>%
split(.$disease) %>%
map(function(df){
df %>%
ggboxplot(x = 'toxicity', y ='inv')
})
# finally I can look at within each disease
baseline %>%
split(.$disease) %>%
map(function(df){
df %>%
ggboxplot(x = 'toxicity', y ='inv') +
stat_compare_means(comparisons= list(c('Y', 'N')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
})
# finally I can look at within each disease
baseline %>%
split(.$disease) %>%
map(function(df){
df %>%
ggboxplot(x = 'toxicity', y ='inv', add = 'dotplot') +
stat_compare_means(comparisons= list(c('Y', 'N')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
})
# finally I can look at within each disease
baseline %>%
split(.$disease) %>%
map(function(df){
df %>%
ggboxplot(x = 'toxicity', y ='inv', add = 'dotplot', ylab = 'alpha diversity') +
stat_compare_means(comparisons= list(c('Y', 'N')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
})
.x %>%
ggboxplot(x = 'toxicity', y ='inv', add = 'dotplot', ylab = 'alpha diversity', title = str_glue('disease: {.y}')) +
stat_compare_means(comparisons= list(c('Y', 'N')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
# finally I can look at within each disease
baseline %>%
split(.$disease) %>%
imap(function(.x, .y){
.x %>%
ggboxplot(x = 'toxicity', y ='inv', add = 'dotplot', ylab = 'alpha diversity', title = str_glue('disease: {.y}')) +
stat_compare_means(comparisons= list(c('Y', 'N')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
})
# finally I can look at within each disease
baseline %>%
split(.$disease) %>%
imap(function(.x, .y){
.x %>%
ggboxplot(x = 'toxicity', y ='inv', add = 'dotplot', ylab = 'alpha diversity', title = str_glue('disease: {.y}')) +
stat_compare_means(comparisons= list(c('Y', 'N')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
ggsave(str_glue('../data/002_alpha_{.y}.pdf'), width = 4, height = 4)
})
# finally I can look at within each disease
baseline %>%
split(.$disease) %>%
imap(function(.x, .y){
.x %>%
ggboxplot(x = 'toxicity', y ='inv', add = 'dotplot', ylab = 'alpha diversity', title = str_glue('disease: {.y}')) +
stat_compare_means(comparisons= list(c('Y', 'N')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
ggsave(str_glue('../data/002_alpha_tox_{.y}.pdf'), width = 4, height = 4)
})
baseline
baseline %>%
split(.$disease) %>%
imap(function(.x, .y){
.x %>%
ggboxplot(x = 'cr', y ='inv', add = 'dotplot', ylab = 'alpha diversity', title = str_glue('disease: {.y}')) +
stat_compare_means(comparisons= list(c('Y', 'N')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
ggsave(str_glue('../data/002_alpha_cr_{.y}.pdf'), width = 4, height = 4)
})
ptb <- read_csv('../data/OPBG_clinicaldata_w_prior_lines_11-30-2020 edited.csv') %>%
clean_names() %>%
mutate(pid = str_replace(pt_id_de_identified, 'N$',''),
pid = str_replace(pid, '4-B','4B'),
pid = str_replace(pid, '13-B','13')) %>%
select(pid, age_at_infusion, gender, disease, disease_class, car_construct, cr_y_n, orr_y_n, toxicity_y_n, cytokine_release_syndrome_y_n,crs_grade) %>%
rename(crs = cytokine_release_syndrome_y_n,
cr = cr_y_n,
orr = orr_y_n,
toxicity = toxicity_y_n) %>%
# remove three patients cuz they are on sponsored trial
filter(!is.na(gender)) %>%
mutate(cr = if_else(cr == 'y', 'Y', cr))
# find the baseline samples that I'm gonna use
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026') %>%
inner_join(alpha) %>%
inner_join(ptb) %>%
# remove three diseases that there are only one patient
filter(!disease %in% removedisease) %>%
# remove the sample from CMT004B
filter(pid != 'CMT004B')
baseline %>%
split(.$disease) %>%
imap(function(.x, .y){
.x %>%
ggboxplot(x = 'cr', y ='inv', add = 'dotplot', ylab = 'alpha diversity', title = str_glue('disease: {.y}')) +
stat_compare_means(comparisons= list(c('Y', 'N')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
ggsave(str_glue('../data/002_alpha_cr_{.y}.pdf'), width = 4, height = 4)
})
baseline %>%
split(.$disease) %>%
imap(function(.x, .y){
.x %>%
ggboxplot(x = 'cr', y ='inv', add = 'dotplot', ylab = 'alpha diversity', title = str_glue('disease: {.y}')) +
stat_compare_means(comparisons= list(c('Y', 'N')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
ggsave(str_glue('../data/002_alpha_cr_{.y}.pdf'), width = 4, height = 4)
})
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day)
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2) %>%
# remove the patient CMT026 for now
filter(pid != 'CMT026')
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day)
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day) %>%
# the baseline sample need to be close to day 0
filter(day < 2)
baseline <- stools %>%
group_by(pid) %>%
arrange(day) %>%
slice_min(day)
