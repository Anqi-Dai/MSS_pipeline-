)  +
annotate("text", x = 100, y = 0, label = str_glue("paste(italic(p), \" = {pvals[[i]]}\")"), parse = TRUE)
}
}
library(gridExtra)
n <- length(dfs)
nCol <- 6
all <- do.call("grid.arrange", c(panels, ncol=nCol))
ggsave('../figs/paper/S2_sameday_macronutrients_microbiome_089.pdf',
width = 190,
units = c("mm"),
plot = all)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.2,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",
label.sep = "\n",
label.x.npc = "middle",
label.y.npc = "top",
size = 3,
color = 'red')) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_bw(base_size = 11) +
theme(aspect.ratio = 1,
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.2,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",
label.sep = "\n",
label.x.npc = "middle",
label.y.npc = "top",
size = 3,
color = 'red')) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",
label.sep = "\n",
label.x.npc = "middle",
label.y.npc = "top",
size = 3,
color = 'red')) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "lightblue"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray99"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "lightblue"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray99"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray79"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray89"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "darkgray"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray89"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray99"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray89"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray69"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray89"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray89"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis) +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray89"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray89"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
macro_facets <- macro_panel %>%
ggscatter(x = 'number', y = 'value', alpha = 0.05,xlab = '', ylab = '',size = 1.2,
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
facet_grid(yaxis ~ xaxis, scales = 'free') +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray89"),
panel.grid.major = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
panel.grid.minor = element_blank()
)
ggsave('../figs/paper/S2_sameday_macronutrients_microbiome_089.pdf',
width = 190,
units = c("mm"),
plot = macro_facets)
ggsave('../figs/paper/S2_sameday_macronutrients_microbiome_089_2.pdf',
width = 190,
units = c("mm"),
plot = all)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# 172
rob <- readxl::read_excel('../data/rob/jenq_454_lookup.xlsx') %>%
filter(Directory.16S != 'NA' & Directory.16S != 'attempted') %>%
distinct(Sample.ID, .keep_all = T)
nrow(rob)
# are all these samples in the biosamples
length(intersect(rob$Sample.ID, total$BioSample.name))
total <- read_csv('../data/save/all_biosample_table_20220226.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
total <- read_csv('../data/save/all_biosample_table_20220226.csv')
# 172
rob <- readxl::read_excel('../data/rob/jenq_454_lookup.xlsx') %>%
filter(Directory.16S != 'NA' & Directory.16S != 'attempted') %>%
distinct(Sample.ID, .keep_all = T)
nrow(rob)
# are all these samples in the biosamples
length(intersect(rob$Sample.ID, total$BioSample.name))
# some don't have biosamples yet: 11
add_bios <- setdiff(rob$Sample.ID, total$BioSample.name)
# how many files can I find
fs <- rob %>%
rename(sampleid = Sample.ID) %>%
inner_join(asv_alpha_diversity_ag)
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
total <- read_csv('../data/save/all_biosample_table_20220226.csv')
# 172
rob <- readxl::read_excel('../data/rob/jenq_454_lookup.xlsx') %>%
filter(Directory.16S != 'NA' & Directory.16S != 'attempted') %>%
distinct(Sample.ID, .keep_all = T)
nrow(rob)
# are all these samples in the biosamples
length(intersect(rob$Sample.ID, total$BioSample.name))
# some don't have biosamples yet: 11
add_bios <- setdiff(rob$Sample.ID, total$BioSample.name)
# how many files can I find
fs <- rob %>%
rename(sampleid = Sample.ID) %>%
inner_join(asv_alpha_diversity_ag)
# the 4 that can't find the sequencing data
# need to run the pools
missing <- rob %>%
rename(sampleid = Sample.ID) %>%
filter(!sampleid %in% asv_alpha_diversity_ag$sampleid)
# are all the other fastqs fine
need <- fs %>%
filter(!sampleid %in% cleaned_sra$sampleid)
cleaned_sra <- read_csv('../data/save/human_cleaned_sra_20220226.csv')
total <- read_csv('../data/save/all_biosample_table_20220226.csv')
cleaned_sra <- read_csv('../data/save/human_cleaned_sra_20220226.csv')
# 172
rob <- readxl::read_excel('../data/rob/jenq_454_lookup.xlsx') %>%
filter(Directory.16S != 'NA' & Directory.16S != 'attempted') %>%
distinct(Sample.ID, .keep_all = T)
nrow(rob)
# are all these samples in the biosamples
length(intersect(rob$Sample.ID, total$BioSample.name))
# some don't have biosamples yet: 11
add_bios <- setdiff(rob$Sample.ID, total$BioSample.name)
# how many files can I find
fs <- rob %>%
rename(sampleid = Sample.ID) %>%
inner_join(asv_alpha_diversity_ag)
# the 4 that can't find the sequencing data
# need to run the pools
missing <- rob %>%
rename(sampleid = Sample.ID) %>%
filter(!sampleid %in% asv_alpha_diversity_ag$sampleid)
# are all the other fastqs fine
need <- fs %>%
filter(!sampleid %in% cleaned_sra$sampleid)
# the 161 already has cleaned sra
already_rob <- cleaned_sra %>%
inner_join(fs) %>%
inner_join(sra)
sra <- read_csv('../data/save/all_sra_table_20220226.csv')
total <- read_csv('../data/save/all_biosample_table_20220226.csv')
cleaned_sra <- read_csv('../data/save/human_cleaned_sra_20220226.csv')
sra <- read_csv('../data/save/all_sra_table_20220226.csv')
# 172
rob <- readxl::read_excel('../data/rob/jenq_454_lookup.xlsx') %>%
filter(Directory.16S != 'NA' & Directory.16S != 'attempted') %>%
distinct(Sample.ID, .keep_all = T)
nrow(rob)
# are all these samples in the biosamples
length(intersect(rob$Sample.ID, total$BioSample.name))
# some don't have biosamples yet: 11
add_bios <- setdiff(rob$Sample.ID, total$BioSample.name)
# how many files can I find
fs <- rob %>%
rename(sampleid = Sample.ID) %>%
inner_join(asv_alpha_diversity_ag)
# the 4 that can't find the sequencing data
# need to run the pools
missing <- rob %>%
rename(sampleid = Sample.ID) %>%
filter(!sampleid %in% asv_alpha_diversity_ag$sampleid)
# are all the other fastqs fine
need <- fs %>%
filter(!sampleid %in% cleaned_sra$sampleid)
# the 161 already has cleaned sra
already_rob <- cleaned_sra %>%
inner_join(fs) %>%
inner_join(sra)
already_rob %>%
select(Accession, sampleid) %>%
write_csv('../data/rob/already_161.csv')
View(already_rob)
View(missing)
View(asv_alpha_diversity_ag)
View(need)
View(rob)
get_table_from_database('samples_castori_ag')
View(samples_castori_ag)
get_table_from_database('patient_allo_ag')
patient_allo_ag
# the 11 that need to create biosamples and also upload files
# calculate the day relative to transplant for these samples
ptb <- patient_allo_ag %>%
arrange(mrn, hct)
# the 11 that need to create biosamples and also upload files
# calculate the day relative to transplant for these samples
ptb <- patient_allo_ag %>%
arrange(mrn, hct) %>%
distinct(mrn, hct)
View(ptb)
s11 <- bind_rows(need %>% select(sampleid))
View(s11)
s11 <- bind_rows(need %>% select(sampleid),missing %>% select(sampleid) )
View(s11)
s11 <- bind_rows(need %>% select(sampleid),missing %>% select(sampleid) ) %>%
inner_join(samples_castori_ag %>% select(sampleid, mrn, datecollection))
s11 <- bind_rows(need %>% select(sampleid),missing %>% select(sampleid) )
s11
s11 <- bind_rows(need %>% select(sampleid),missing %>% select(sampleid) )  %>%
mutate(pid = str_replace(sampleid, '[:upper]$',''))
s11 <- bind_rows(need %>% select(sampleid),missing %>% select(sampleid) )  %>%
mutate(pid = str_replace(sampleid, 'A|B|C|D',''))
r_s <- tibble(
Sample_name = s11$sampleid,
Organism = 'human gut metagenome',
host = 'Homo sapiens',
isolation_source = 'stool',
collection_date = 'not applicable',
geo_loc_name = 'USA: New York',
lat_lon = '40.7641 N 73.9568 W',
patient_id = s11$pid
)
r_s %>%
write_tsv('../data/rob/biosample_att.tsv')
rfiles <- asv_alpha_diversity_ag %>%
filter(sampleid %in% s11$sampleid)
View(rfiles)
View(asv_alpha_diversity_ag)
get_table_from_database('asv_alpha_diversity_ag')
View(missing)
View(missing)
# there are problems with 4 samples
missing %>%
write_csv('../da/rob/missing4.csv')
# there are problems with 4 samples
missing %>%
write_csv('../data/rob/missing4.csv')
rfiles <- asv_alpha_diversity_ag %>%
filter(sampleid %in% s11$sampleid)
View(rfiles)
rfiles <- asv_alpha_diversity_ag %>%
filter(sampleid %in% s11$sampleid) %>%
distinct(sampleid, .keep_all = T)
rfiles <- asv_alpha_diversity_ag %>%
filter(sampleid %in% s11$sampleid) %>%
distinct(sampleid, .keep_all = T) %>%
mutate(R1 = str_glue('{oligos_id}_R1.fastq.gz'),
R2 = str_glue('{oligos_id}_R2.fastq.gz')) %>%
mutate(p1 = str_glue('{path_pool}/{R1}'),
p2 = str_glue('{path_pool}/{R2}'))
rfiles %>%
select(p1, p2) %>%
gather() %>%
mutate(cmd = str_glue('scp daia1@lilac.mskcc.org:{value} .')) %>%
select(cmd) %>%
write_csv('../data/dl_r7.sh', col_names = F)
# the sra table
sra_r <- tibble(
sample_name = rfiles$sampleid,
library_ID = rfiles$sampleid,
title = 'Stool sample of allo-HCT patient',
library_strategy = 'amplicon',
library_source = 'GENOMIC',
library_selection = 'PCR',
library_layout ='paired',
platform= 'ILLUMINA',
instrument_model= 'Illumina MiSeq',
design_description='PCR amplification of 16S V4-V5 regions; Bead-beating, phenol chloroform DNA extraction',
filetype= 'fastq',
filename=rfiles$R1,
filename2=rfiles$R2
)
sra_r %>%
write_tsv('../data/rob/r_sra.tsv')
s11 <- bind_rows(need %>% select(sampleid),missing %>% select(sampleid) )  %>%
mutate(pid = str_replace(sampleid, 'A|B|C|D','')) %>%
filter(! sampleid %in% missing$sampleid)
View(s11)
s11 <- bind_rows(need %>% select(sampleid),missing %>% select(sampleid) )  %>%
mutate(pid = str_replace(sampleid, 'A|B|C|D','')) %>%
filter(! sampleid %in% missing$sampleid) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection))
r_s <- tibble(
Sample_name = s11$sampleid,
Organism = 'human gut metagenome',
host = 'Homo sapiens',
isolation_source = 'stool',
collection_date = s11$datecollection,
geo_loc_name = 'USA: New York',
lat_lon = '40.7641 N 73.9568 W',
patient_id = s11$pid
)
r_s %>%
write_tsv('../data/rob/biosample_att.tsv')
