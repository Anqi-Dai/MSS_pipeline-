# plot the above model post coeff
post_coeff <- read_csv('../data/090_model_alpha_macro_fat_post.csv') %>%
select(starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = case_when(
item ==  'fiber' ~ 'Fibers',
item == 'fat' ~ 'Fat',
TRUE ~ item
))  %>%
mutate(item = fct_reorder(item, coeff, .fun=median, .desc = F))
macronutrients_alpha_main <- post_coeff %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Coefficients',
y = 'Macronutrients',
title = expression(Microbiome~alpha~diversity)) +
xlim(-1.5, 1.1) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
macronutrients_alpha_main %>%
write_rds('../data/090_macronutrients_alpha_main.rds')
# get the value of the actual 66% and 95% CI
post_coeff %>%
group_by(item) %>%
median_qi(coeff, .width = c(.66, .95)) %>%
distinct()
macronutrients_alpha_main
# plot the above model post coeff
post_coeff <- read_csv('../data/090_model_alpha_macro_fat_post.csv') %>%
select(starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = case_when(
item ==  'fiber' ~ 'Fibers',
item == 'fat' ~ 'Fat',
TRUE ~ item
))  %>%
mutate(item = fct_reorder(item, coeff, .fun=median, .desc = F))
macronutrients_alpha_main <- post_coeff %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Coefficients',
y = 'Macronutrients',
title = expression(Microbiome~alpha~diversity)) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
macronutrients_alpha_main %>%
write_rds('../data/090_macronutrients_alpha_main.rds')
# get the value of the actual 66% and 95% CI
post_coeff %>%
group_by(item) %>%
median_qi(coeff, .width = c(.66, .95)) %>%
distinct()
macronutrients_alpha_main
coeff_bi <- read_csv('../data/090_model_alpha_macro_fat_post.csv')   %>%
select(starts_with('b_')) %>%
select(!starts_with('b_ave'))
View(coeff_bi)
# the binary vars
coeff_bi <- read_csv('../data/090_model_alpha_macro_fat_post.csv')   %>%
select(starts_with('b_')) %>%
select(!starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
coeff_bi <- read_csv('../data/090_model_alpha_macro_fat_post.csv')   %>%
select(starts_with('b_')) %>%
select(!starts_with('b_ave'))
# the binary vars
coeff_bi <- read_csv('../data/090_model_alpha_macro_fat_post.csv')   %>%
select(starts_with('b_')) %>%
select(!starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
macronutrients_alpha_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = expression(Microbiome~alpha~diversity)) +
theme_classic() +
theme(legend.position = 'none',
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
macronutrients_alpha_factor %>%
write_rds('../data/090_macronutrients_alpha_factor.rds')
coeff_bi %>%
group_by(item) %>%
median_qi(coeff, .width = c(.66, .95))
macronutrients_alpha_factor
priors_genus_macro_fat <- c(
# for the macro nutrients
prior(normal(0, 0.4), class = 'b', coef = "ave_fiber"),
prior(normal(0, 0.4), class = 'b', coef = "ave_fat"),
prior(normal(0, 0.4), class = 'b', coef = "ave_Sugars"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(-3, 1), class = 'b', coef = "intensityreduced"),
prior(normal(-3, 1), class = 'b', coef = "intensityablative"),
prior(normal(-3, 1), class = 'b', coef = "intensitynonablative"))
priors_genus_macro_fat
ret_genus_macro_fat <- target_genera %>%
set_names(target_genera) %>%
purrr::map(function(genus) {
mod =  brm( as.formula(str_glue('{genus}  ~
0 +
ave_fiber +
ave_fat +
ave_Sugars +
intensity +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)')),
data = full,
warmup = 1000, iter = 3000,
prior = priors_genus_macro_fat,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 456, sample_prior = T)
})
# save the data
prior_df <- ret_genus_macro_fat %>%
imap(~ prior_draws(.x) ) %>%
bind_rows(.id = 'genus')
prior_df %>%
write_csv('../data/078_genus_macro_fat_model_prior.csv')
post_df <- ret_genus_macro_fat %>%
imap(~ (suppressWarnings(posterior_samples(.x))))  %>%
bind_rows(.id = 'genus')
post_df %>%
write_csv('../data/078_genus_macro_fat_model_post.csv')
?read_csv
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv', col_select = c('b_ave_fiber','b_ave_fat','b_ave_Sugars'))
View(post_df)
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv', col_select = c('genus','b_ave_fiber','b_ave_fat','b_ave_Sugars'))
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv', col_select = c('genus','b_ave_fiber','b_ave_fat','b_ave_Sugars'))
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = if_else(item == 'Fiber', 'Fibers', item))
genus_macro_fat_main <- ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_pubr() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
legend.title = element_blank() ,
#panel.grid.major = element_line( colour = "gray50"),
#panel.grid.minor = element_line( colour = "gray50"),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background=element_rect(colour="black"))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_macro_fat_main <- ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_pubr() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
legend.title = element_blank() ,
#panel.grid.major = element_line( colour = "gray50"),
#panel.grid.minor = element_line( colour = "gray50"),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background=element_rect(colour="black"))
genus_macro_fat_main %>% write_rds('../data/090_genus_macro_fat_main.rds')
genus_macro_fat_main
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv', col_select = c('genus','b_ave_fiber','b_ave_fat','b_ave_Sugars'))
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = if_else(item == 'Fiber', 'Fibers', item))
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv', col_select = c('genus','b_ave_fiber','b_ave_fat','b_ave_Sugars'))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_macro_fat_main <- ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_pubr() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
legend.title = element_blank() ,
#panel.grid.major = element_line( colour = "gray50"),
#panel.grid.minor = element_line( colour = "gray50"),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background=element_rect(colour="black"))
genus_macro_fat_main %>% write_rds('../data/090_genus_macro_fat_main.rds')
genus_macro_fat_main
mean_macro <-  full %>%
select(starts_with('ave_')) %>%
summarise_all(funs(mean))
## look at the all genera priors
valid_interval_perc <- ret_genus_macro_fat %>%
imap(~ prior_draws(.x) %>%
mutate(mean_genera =
b_ave_fiber * mean_macro$ave_fiber+
b_ave_fat * mean_macro$ave_fat+
b_ave_Sugars * mean_macro$ave_Sugars+
b_intensityreduced ) %>%
select(mean_genera) %>%
mutate(grp = 'ave_each') %>%
rename(prior_res = mean_genera) %>%
select(grp, prior_res) %>%
count(prior_res > -5 & prior_res < 0) %>%
mutate(perc = n/sum(n)*100) %>%
select(perc) %>%
slice(2) %>%
pull(perc) %>%
round(1) ) %>%
bind_rows(.id = .y) %>%
gather('genus','within_interval_perc')
# looks ok to me
View(valid_interval_perc)
genus_macro_fat_main
View(coeff_bi)
coeff_bi %>%
distinct(item)
coeff_bi %>%
distinct(item)
# the factor variables for the genus macro fat
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv', col_select = c('genus','b_intensityablative','b_intensitynonablative','b_intensityreduced', 'b_ENTRUE', 'b_TPNTRUE', 'b_empiricalTRUE'))
View(post_df)
# the factor variables for the genus macro fat
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv', col_select = c('genus','b_intensityablative','b_intensitynonablative','b_intensityreduced', 'b_ENTRUE', 'b_TPNTRUE', 'b_empiricalTRUE'))
post_bi_res <- post_df %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
))
genus_macro_fat_factor <- ggplot(post_bi_res, aes(x = genus, y = item_name)) +
geom_tile(aes(fill = color,  x = genus, y =  item_name), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item_name),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative','75% CI > 0 positive')) +
theme_pubr() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_rect(colour="black"))
genus_macro_fat_factor %>%
write_rds('../data/090_genus_macro_fat_factor.rds')
genus_macro_fat_factor
# the factor variables for the genus macro fat
# doesn't need to include the intensity ones since they are the intercepts
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv', col_select = c('genus', 'b_ENTRUE', 'b_TPNTRUE', 'b_empiricalTRUE'))
# the factor variables for the genus macro fat
# doesn't need to include the intensity ones since they are the intercepts
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv', col_select = c('genus', 'b_ENTRUE', 'b_TPNTRUE', 'b_empiricalTRUE'))
post_bi_res <- post_df %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item_name = case_when(
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
))
genus_macro_fat_factor <- ggplot(post_bi_res, aes(x = genus, y = item_name)) +
geom_tile(aes(fill = color,  x = genus, y =  item_name), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item_name),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative','75% CI > 0 positive')) +
theme_pubr() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_rect(colour="black"))
genus_macro_fat_factor %>%
write_rds('../data/090_genus_macro_fat_factor.rds')
genus_macro_fat_factor
# the factor variables for the genus macro fat
# doesn't need to include the intensity ones since they are the intercepts
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv', col_select = c('genus', 'b_ENTRUE', 'b_TPNTRUE', 'b_empiricalTRUE'))
post_bi_res <- post_df %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item_name = case_when(
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
))
genus_macro_fat_factor <- ggplot(post_bi_res, aes(x = genus, y = item_name)) +
geom_tile(aes(fill = color,  x = genus, y =  item_name), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item_name),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative','75% CI > 0 positive')) +
theme_pubr() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_rect(colour="black"))
genus_macro_fat_factor %>%
write_rds('../data/090_genus_macro_fat_factor.rds')
genus_macro_fat_factor
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(cowplot)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(cowplot)
fat_cal_cor <- read_rds('../data/090_fat_cal_cor.rds')
corr <- read_rds('../data/090_fat_pro_cor.rds')
alpha_main <- read_rds('../data/090_macronutrients_alpha_main.rds')
alpha_factor <- read_rds('../data/090_macronutrients_alpha_factor.rds')
alpha <-  plot_grid(corr, fat_cal_cor,  alpha_main,alpha_factor,
nrow = 2, labels = c('A','B', 'C', "D"),  align = 'hv', axis = 'tblr')
alpha
genus_main <- read_rds('../data/090_genus_macro_fat_main.rds')
genus_factor <- read_rds('../data/090_genus_macro_fat_factor.rds')
genus <-  plot_grid(  genus_main,genus_factor,
nrow = 2, labels = c('E','F'),
rel_heights  = c(1, 1),
align = 'v', axis = 'lb')
genus
macro <- plot_grid(  alpha, genus,
nrow = 2,
rel_heights  = c(1, 2),
align = 'v', axis = 'tblr')
ggsave('../figs/paper/S4_macronutrients_alpha_and_genus_093.pdf',
width = 240,
height = 350,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf')
ggsave('../figs/paper/S4_macronutrients_alpha_and_genus_093.jpg',
width = 240,
height = 350,
#height = 60,
units = c("mm"),
dpi = 400, device = 'jpg')
macro <- plot_grid(  alpha, genus,
nrow = 2,
rel_heights  = c(1, 2),
align = 'v', axis = 'tblr')
ggsave('../figs/paper/S3_macronutrients_alpha_and_genus_093.pdf',
width = 240,
height = 350,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf')
ggsave('../figs/paper/S3_macronutrients_alpha_and_genus_093.jpg',
width = 240,
height = 350,
#height = 60,
units = c("mm"),
dpi = 400, device = 'jpg')
