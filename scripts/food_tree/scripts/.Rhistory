add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
#facet_grid_sc(rows = vars(yaxis), cols = vars(xaxis), scales = list(y = scales_y, x = scales_x)) +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray97"),
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
})
res = summary(lm(value ~ number, data = df ))
pval = round(res$coefficients[2, 'Pr(>|t|)'], 3)
small_panel_split_each_fig <- small_panel_split_each %>%
imap(function(.x, .y){
ggscatter(data = .x,x = 'number', y = 'value', alpha = 0.05, xlab ='',
ylab = '',size = 1.2, pch = 19, title =  str_glue('{.y} {pval}'),
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
#facet_grid_sc(rows = vars(yaxis), cols = vars(xaxis), scales = list(y = scales_y, x = scales_x)) +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray97"),
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
})
small_panel_split_each_fig
small_panel_split_each
View(small_panel_split_each[["Calorie.log(Simpson reciprocal)"]])
small_panel_split_each_fig <- small_panel_split_each %>%
imap(function(.x, .y){
res = summary(lm(value ~ number, data = .x ))
pval = round(res$coefficients[2, 'Pr(>|t|)'], 3)
ggscatter(data = .x,x = 'number', y = 'value', alpha = 0.05, xlab ='',
ylab = '',size = 1.2, pch = 19, title =  str_glue('{.y}\nP-val: {pval}'),
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
#facet_grid_sc(rows = vars(yaxis), cols = vars(xaxis), scales = list(y = scales_y, x = scales_x)) +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray97"),
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
})
})
small_panel_split_each_fig <- small_panel_split_each %>%
imap(function(.x, .y){
res = summary(lm(value ~ number, data = .x ))
pval = round(res$coefficients[2, 'Pr(>|t|)'], 3)
ggscatter(data = .x,x = 'number', y = 'value', alpha = 0.05, xlab ='',
ylab = '',size = 1.2, pch = 19, title =  str_glue('{.y}\nP-val: {pval}'),
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
#facet_grid_sc(rows = vars(yaxis), cols = vars(xaxis), scales = list(y = scales_y, x = scales_x)) +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray97"),
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
})
small_panel_split_each_fig
split3 <- byday_original %>%
split(.$intensity) %>%
map(function(small_df){
small_panel <- small_df %>%
mutate(simpson_reciprocal_nlog  = log(simpson_reciprocal)) %>%
rename(`log10(Blautia)` = Blautia,
`log10(Enterococcus)` = Enterococcus,
`log(Simpson reciprocal)` = simpson_reciprocal_nlog) %>%
dplyr::select(`log(Simpson reciprocal)`, `log10(Blautia)`, `log10(Enterococcus)`,  daycal:d_sugar ) %>%
mutate(daycal = daycal/1000) %>%  # now divide the value by 1000 to save some space in x axis text!!!
gather('yaxis', 'value', `log(Simpson reciprocal)`:`log10(Enterococcus)`) %>%
mutate(yaxis = factor(yaxis, levels = c('log(Simpson reciprocal)','log10(Blautia)','log10(Enterococcus)'))) %>%
gather('xaxis', 'number', daycal:d_sugar) %>%
mutate(xaxis = factor(xaxis, levels = c('daycal','d_carb','d_sugar','d_fiber','d_protein','d_fat'))) %>%
mutate(xaxis = if_else(str_detect(xaxis, '^d_'), str_replace(xaxis, 'd_',''), str_replace(xaxis, '^day','')),
xaxis = if_else(str_detect(xaxis, 'cal'), str_replace(xaxis, 'cal','calorie'), xaxis),
xaxis = str_to_title(xaxis),
xaxis = str_glue('{xaxis}')) %>%
mutate(xaxis = factor(xaxis, levels = c('Calorie','Carb','Sugar','Fiber','Protein','Fat')))
small_panel_split_each <- small_panel %>%  split(., list(.$xaxis, .$yaxis))
small_panel_split_each_fig <- small_panel_split_each %>%
imap(function(.x, .y){
res = summary(lm(value ~ number, data = .x ))
pval = round(res$coefficients[2, 'Pr(>|t|)'], 3)
ggscatter(data = .x,x = 'number', y = 'value', alpha = 0.05, xlab ='',
ylab = '',size = 1.2, pch = 19, title =  str_glue('{.y}\nP-val: {pval}'),
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
#facet_grid_sc(rows = vars(yaxis), cols = vars(xaxis), scales = list(y = scales_y, x = scales_x)) +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray97"),
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
})
})
split3
split3 <- byday_original %>%
split(.$intensity) %>%
map(function(small_df){
small_panel <- small_df %>%
mutate(simpson_reciprocal_nlog  = log(simpson_reciprocal)) %>%
rename(`log10(Blautia)` = Blautia,
`log10(Enterococcus)` = Enterococcus,
`log(Simpson reciprocal)` = simpson_reciprocal_nlog) %>%
dplyr::select(`log(Simpson reciprocal)`, `log10(Blautia)`, `log10(Enterococcus)`,  daycal:d_sugar ) %>%
mutate(daycal = daycal/1000) %>%  # now divide the value by 1000 to save some space in x axis text!!!
gather('yaxis', 'value', `log(Simpson reciprocal)`:`log10(Enterococcus)`) %>%
mutate(yaxis = factor(yaxis, levels = c('log(Simpson reciprocal)','log10(Blautia)','log10(Enterococcus)'))) %>%
gather('xaxis', 'number', daycal:d_sugar) %>%
mutate(xaxis = factor(xaxis, levels = c('daycal','d_carb','d_sugar','d_fiber','d_protein','d_fat'))) %>%
mutate(xaxis = if_else(str_detect(xaxis, '^d_'), str_replace(xaxis, 'd_',''), str_replace(xaxis, '^day','')),
xaxis = if_else(str_detect(xaxis, 'cal'), str_replace(xaxis, 'cal','calorie'), xaxis),
xaxis = str_to_title(xaxis),
xaxis = str_glue('{xaxis}')) %>%
mutate(xaxis = factor(xaxis, levels = c('Calorie','Carb','Sugar','Fiber','Protein','Fat')))
small_panel_split_each <- small_panel %>%  split(., list(.$xaxis, .$yaxis))
small_panel_split_each_fig <- small_panel_split_each %>%
imap(function(.x, .y){
res = summary(lm(value ~ number, data = .x ))
pval = round(res$coefficients[2, 'Pr(>|t|)'], 3)
ggscatter(data = .x,x = 'number', y = 'value', alpha = 0.3, xlab ='',
ylab = '',size = 1.2, pch = 19, title =  str_glue('{.y}\nP-val: {pval}'),
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
#facet_grid_sc(rows = vars(yaxis), cols = vars(xaxis), scales = list(y = scales_y, x = scales_x)) +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray97"),
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
})
})
split3
View(split3)
g <- plot_grid(split3 %>% pluck('ablative'),
ncol = 6,
o = 'hv',
#labels = 'AUTO',
axis = 'bltr') +
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 5, height = 10, dpi = 300)
g <- cowplot::plot_grid(split3 %>% pluck('ablative'),
ncol = 6,
o = 'hv',
#labels = 'AUTO',
axis = 'bltr') +
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 5, height = 10, dpi = 300)
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 5, height = 10, dpi = 300, plot = g)
g <- cowplot::plot_grid(split3 %>% pluck('ablative'),
ncol = 6,
o = 'hv',
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 5, height = 10, dpi = 300, plot = g)
split3 %>% pluck('ablative')
cowplot::plot_grid(split3 %>% pluck('ablative'),
ncol = 6,
o = 'hv',
#labels = 'AUTO',
axis = 'bltr')
split3 %>% pluck('ablative')
ablatives <- split3 %>% pluck('ablative') %>% pluck('`Carb.log10(Blautia)`')
ablatives
ablatives <- split3 %>% pluck('ablative') %>% pluck('Carb.log10(Blautia)')
ablatives
ablatives <- split3 %>% pluck('ablative') %>% pluck('1')
ablatives
ablatives <- split3 %>% pluck('ablative')[[1]]
ablatives <- split3[['ablative']][[1]]
ablatives
ablatives <- split3[['ablative']][[1]]
ablatives <- split3[['ablative']]
g <- cowplot::plot_grid(ablatives[[1]],ablatives[[2]],ablatives[[3]],ablatives[[4]],ablatives[[5]],ablatives[[6]],ablatives[[7]],ablatives[[8]],ablatives[[9]],ablatives[[10]],ablatives[[11]],ablatives[[12]],ablatives[[13]],ablatives[[14]],ablatives[[15]],ablatives[[16]],ablatives[[17]],ablatives[[18]],
ncol = 6,
o = 'hv',
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 5, height = 10, dpi = 300, plot = g)
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 12, height = 8, dpi = 300, plot = g)
?plot_grid
cowplot::plot_grid(plotlist = ablatives,
ncol = 6,
o = 'hv',
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 15, height = 8, dpi = 300, plot = g)
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 12, height = 8, dpi = 300, plot = g)
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 12, height = 6, dpi = 300, plot = g)
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 12, height = 9, dpi = 300, plot = g)
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 12, height = 8, dpi = 300, plot = g)
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 12, height = 8,  plot = g)
ablatives <- split3[['ablative']]
g <- cowplot::plot_grid(ablatives[[1]],ablatives[[2]],ablatives[[3]],ablatives[[4]],ablatives[[5]],ablatives[[6]],ablatives[[7]],ablatives[[8]],ablatives[[9]],ablatives[[10]],ablatives[[11]],ablatives[[12]],ablatives[[13]],ablatives[[14]],ablatives[[15]],ablatives[[16]],ablatives[[17]],ablatives[[18]],
ncol = 6,
o = 'hv',labels = 'Ablative',
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 12, height = 8,  plot = g)
ablatives <- split3[['ablative']]
g <- cowplot::plot_grid(ablatives[[1]],ablatives[[2]],ablatives[[3]],ablatives[[4]],ablatives[[5]],ablatives[[6]],ablatives[[7]],ablatives[[8]],ablatives[[9]],ablatives[[10]],ablatives[[11]],ablatives[[12]],ablatives[[13]],ablatives[[14]],ablatives[[15]],ablatives[[16]],ablatives[[17]],ablatives[[18]],
ncol = 6,
o = 'hv',labels = 'Ablative',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 12, height = 8,  plot = g)
ablatives <- split3[['ablative']]
g <- cowplot::plot_grid(ablatives[[1]],ablatives[[2]],ablatives[[3]],ablatives[[4]],ablatives[[5]],ablatives[[6]],ablatives[[7]],ablatives[[8]],ablatives[[9]],ablatives[[10]],ablatives[[11]],ablatives[[12]],ablatives[[13]],ablatives[[14]],ablatives[[15]],ablatives[[16]],ablatives[[17]],ablatives[[18]],
ncol = 6,
o = 'hv',labels = 'Ablative',label_y = 2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 12, height = 8,  plot = g)
split3
nonablative <- split3[['nonablative']]
g <- cowplot::plot_grid(nonablative[[1]],nonablative[[2]],nonablative[[3]],nonablative[[4]],nonablative[[5]],nonablative[[6]],nonablative[[7]],nonablative[[8]],nonablative[[9]],nonablative[[10]],nonablative[[11]],nonablative[[12]],nonablative[[13]],nonablative[[14]],nonablative[[15]],nonablative[[16]],nonablative[[17]],nonablative[[18]],
ncol = 6,
o = 'hv',labels = 'Nonablative',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/150_sameday_b2_conditioning_nonablative.jpg'), width = 12, height = 8,  plot = g)
reduced <- split3[['reduced']]
g <- cowplot::plot_grid(plotlist = reduced,
ncol = 6,
o = 'hv',labels = 'reduced',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/150_sameday_b2_conditioning_reduced.jpg'), width = 12, height = 8,  plot = g)
reduced <- split3[['reduced']]
g <- cowplot::plot_grid(plotlist = reduced[[-1]],
ncol = 6,
o = 'hv',labels = 'reduced',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
reduced[[1]]
reduced <- split3[['reduced']]
g <- cowplot::plot_grid(reduced[[1]],reduced[[2]],reduced[[3]],reduced[[4]],reduced[[5]],reduced[[6]],reduced[[7]],reduced[[8]],reduced[[9]],reduced[[10]],reduced[[11]],reduced[[12]],reduced[[13]],reduced[[14]],reduced[[15]],reduced[[16]],reduced[[17]],reduced[[18]],
ncol = 6,
o = 'hv',labels = 'reduced',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/150_sameday_b2_conditioning_reduced.jpg'), width = 12, height = 8,  plot = g)
ablatives <- split3[['ablative']]
g <- cowplot::plot_grid(ablatives[[1]],ablatives[[2]],ablatives[[3]],ablatives[[4]],ablatives[[5]],ablatives[[6]],ablatives[[7]],ablatives[[8]],ablatives[[9]],ablatives[[10]],ablatives[[11]],ablatives[[12]],ablatives[[13]],ablatives[[14]],ablatives[[15]],ablatives[[16]],ablatives[[17]],ablatives[[18]],
ncol = 6,
o = 'hv',labels = 'Ablative',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/150_sameday_b2_conditioning_ablative.jpg'), width = 12, height = 8,  plot = g)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
stb2 <- read_rds('../data/137_stb.rds')
dtb2 <- read_csv('../data/149_finalized_dtb2.csv')
# get the genus counts
library(vdbR)
connect_database()
get_table_from_database('asv_annotation_blast_ag')
cts <- get_counts_subset(stb2$sampleid)
cts_genus <- cts %>%
inner_join(asv_annotation_blast_ag %>%  select(asv_key, genus), by  = 'asv_key') %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative))
cts_spread <- cts_genus %>%
spread('genus', 'relab', fill = 0)
cts_genus %>%
write_csv('../data/150_b2_stool_samples_genus_counts.csv')
# log10 transform the genus counts
zero_transform <- log10(0 + 2*10^-6)
genus <- cts_genus %>%
mutate(relablog = log10(relab + 2*10^-6)) %>%
select(sampleid, genus, relablog) %>%
spread('genus', 'relablog', fill = zero_transform)
genus %>%
write_csv('../data/150_b2_genus_relab_log10_wide.csv')
byday_original2 <- dtb2 %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal),
d_protein = sum(Protein_g),
d_fat = sum(Fat_g),
d_carb = sum(Carbohydrates_g),
d_fiber = sum(Fibers_g),
d_sugar = sum(Sugars_g)) %>%
rename(drt = fdrt) %>%
inner_join(genus %>%
inner_join(stb2 %>% select(sampleid, drt = sdrt, mrn, simpson_reciprocal, intensity)),
by = c("mrn", "drt")) %>%
ungroup()
knitr::opts_chunk$set(echo = TRUE)
dtb1 <- read_csv('../data/149_finalized_dtb1.csv')
full <- read_csv('../data/090_all_samples_meta_p2d_fg9_dietall_genera34.csv')
byday_original <- dtb1 %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal),
d_protein = sum(Protein_g),
d_fat = sum(Fat_g),
d_carb = sum(Carbohydrates_g),
d_fiber = sum(Fibers_g),
d_sugar = sum(Sugars_g)) %>%
rename(drt = fdrt) %>%
inner_join(full %>%
rename(drt = sdrt) %>%
select(mrn,drt, simpson_reciprocal,  Blautia, Enterococcus, intensity), by = c("mrn", "drt")) %>%
ungroup()
byday_original1 <- dtb1 %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal),
d_protein = sum(Protein_g),
d_fat = sum(Fat_g),
d_carb = sum(Carbohydrates_g),
d_fiber = sum(Fibers_g),
d_sugar = sum(Sugars_g)) %>%
rename(drt = fdrt) %>%
inner_join(full %>%
rename(drt = sdrt) %>%
select(mrn,drt, simpson_reciprocal,  Blautia, Enterococcus, intensity), by = c("mrn", "drt")) %>%
ungroup()
byday_original <- bind_rows(byday_original1, byday_original2)
View(byday_original)
macro_panel <- byday_original %>%
mutate(simpson_reciprocal_nlog  = log(simpson_reciprocal)) %>%
rename(`log10(Blautia)` = Blautia,
`log10(Enterococcus)` = Enterococcus,
`log(Simpson reciprocal)` = simpson_reciprocal_nlog) %>%
dplyr::select(`log(Simpson reciprocal)`, `log10(Blautia)`, `log10(Enterococcus)`,  daycal:d_sugar ) %>%
mutate(daycal = daycal/1000) %>%  # now divide the value by 1000 to save some space in x axis text!!!
gather('yaxis', 'value', `log(Simpson reciprocal)`:`log10(Enterococcus)`) %>%
mutate(yaxis = factor(yaxis, levels = c('log(Simpson reciprocal)','log10(Blautia)','log10(Enterococcus)'))) %>%
gather('xaxis', 'number', daycal:d_sugar) %>%
mutate(xaxis = factor(xaxis, levels = c('daycal','d_carb','d_sugar','d_fiber','d_protein','d_fat'))) %>%
mutate(xaxis = if_else(str_detect(xaxis, '^d_'), str_replace(xaxis, 'd_',''), str_replace(xaxis, '^day','')),
xaxis = if_else(str_detect(xaxis, 'cal'), str_replace(xaxis, 'cal','calorie'), xaxis),
xaxis = str_to_title(xaxis),
xaxis = str_glue('{xaxis}')) %>%
mutate(xaxis = factor(xaxis, levels = c('Calorie','Carb','Sugar','Fiber','Protein','Fat')))
library(facetscales)
Blautia_lim <- floor(min(byday_original$Blautia))
entero_lim <- floor(min(byday_original$Enterococcus))
simpson_reciprocal_nlog_lim <- max(log(byday_original$simpson_reciprocal))
scales_y <- list(
`log(Simpson reciprocal)` = scale_y_continuous(limits = c(0, simpson_reciprocal_nlog_lim), breaks = seq(0, simpson_reciprocal_nlog_lim, 1)),
`log10(Blautia)` = scale_y_continuous(limits = c(Blautia_lim, 0), breaks = seq(Blautia_lim, 0, 2)),
`log10(Enterococcus)` = scale_y_continuous(limits = c(entero_lim, 0), breaks = seq(entero_lim, 0, 2))
)
# to use the max observed in the data
cal_lim <- max(byday_original$daycal)/1000
protein_lim <- max(byday_original$d_protein)
d_fat_lim <- max(byday_original$d_fat)
d_carb_lim <- max(byday_original$d_carb)
d_fiber_lim <- max(byday_original$d_fiber)
d_sugar_lim <- max(byday_original$d_sugar)
scales_x <- list(
`Calorie` = scale_x_continuous(limits = c(0, cal_lim), breaks = seq(0, cal_lim, 1)),
`Protein` = scale_x_continuous(limits = c(0, protein_lim), breaks = seq(0, protein_lim, 50)),
`Fat` = scale_x_continuous(limits = c(0, d_fat_lim), breaks = seq(0, d_fat_lim, 50)),
`Carb` = scale_x_continuous(limits = c(0, d_carb_lim), breaks = seq(0, d_carb_lim, 250)),
`Fiber` = scale_x_continuous(limits = c(0,d_fiber_lim), breaks = seq(0, d_fiber_lim, 20)),
`Sugar` = scale_x_continuous(limits = c(0, d_sugar_lim), breaks = seq(0, d_sugar_lim, 100) )
)
split3 <- byday_original %>%
split(.$intensity) %>%
map(function(small_df){
small_panel <- small_df %>%
mutate(simpson_reciprocal_nlog  = log(simpson_reciprocal)) %>%
rename(`log10(Blautia)` = Blautia,
`log10(Enterococcus)` = Enterococcus,
`log(Simpson reciprocal)` = simpson_reciprocal_nlog) %>%
dplyr::select(`log(Simpson reciprocal)`, `log10(Blautia)`, `log10(Enterococcus)`,  daycal:d_sugar ) %>%
mutate(daycal = daycal/1000) %>%  # now divide the value by 1000 to save some space in x axis text!!!
gather('yaxis', 'value', `log(Simpson reciprocal)`:`log10(Enterococcus)`) %>%
mutate(yaxis = factor(yaxis, levels = c('log(Simpson reciprocal)','log10(Blautia)','log10(Enterococcus)'))) %>%
gather('xaxis', 'number', daycal:d_sugar) %>%
mutate(xaxis = factor(xaxis, levels = c('daycal','d_carb','d_sugar','d_fiber','d_protein','d_fat'))) %>%
mutate(xaxis = if_else(str_detect(xaxis, '^d_'), str_replace(xaxis, 'd_',''), str_replace(xaxis, '^day','')),
xaxis = if_else(str_detect(xaxis, 'cal'), str_replace(xaxis, 'cal','calorie'), xaxis),
xaxis = str_to_title(xaxis),
xaxis = str_glue('{xaxis}')) %>%
mutate(xaxis = factor(xaxis, levels = c('Calorie','Carb','Sugar','Fiber','Protein','Fat')))
small_panel_split_each <- small_panel %>%  split(., list(.$xaxis, .$yaxis))
small_panel_split_each_fig <- small_panel_split_each %>%
imap(function(.x, .y){
res = summary(lm(value ~ number, data = .x ))
pval = round(res$coefficients[2, 'Pr(>|t|)'], 3)
ggscatter(data = .x,x = 'number', y = 'value', alpha = 0.3, xlab ='',
ylab = '',size = 1.2, pch = 19, title =  str_glue('{.y}\nP-val: {pval}'),
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
#facet_grid_sc(rows = vars(yaxis), cols = vars(xaxis), scales = list(y = scales_y, x = scales_x)) +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray97"),
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
})
})
# assemble figure
ablatives <- split3[['ablative']]
g <- cowplot::plot_grid(ablatives[[1]],ablatives[[2]],ablatives[[3]],ablatives[[4]],ablatives[[5]],ablatives[[6]],ablatives[[7]],ablatives[[8]],ablatives[[9]],ablatives[[10]],ablatives[[11]],ablatives[[12]],ablatives[[13]],ablatives[[14]],ablatives[[15]],ablatives[[16]],ablatives[[17]],ablatives[[18]],
ncol = 6,
o = 'hv',labels = 'Ablative',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/151_sameday__conditioning_ablative.jpg'), width = 12, height = 8,  plot = g)
nonablative <- split3[['nonablative']]
g <- cowplot::plot_grid(nonablative[[1]],nonablative[[2]],nonablative[[3]],nonablative[[4]],nonablative[[5]],nonablative[[6]],nonablative[[7]],nonablative[[8]],nonablative[[9]],nonablative[[10]],nonablative[[11]],nonablative[[12]],nonablative[[13]],nonablative[[14]],nonablative[[15]],nonablative[[16]],nonablative[[17]],nonablative[[18]],
ncol = 6,
o = 'hv',labels = 'Nonablative',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/151_sameday__conditioning_nonablative.jpg'), width = 12, height = 8,  plot = g)
reduced <- split3[['reduced']]
g <- cowplot::plot_grid(reduced[[1]],reduced[[2]],reduced[[3]],reduced[[4]],reduced[[5]],reduced[[6]],reduced[[7]],reduced[[8]],reduced[[9]],reduced[[10]],reduced[[11]],reduced[[12]],reduced[[13]],reduced[[14]],reduced[[15]],reduced[[16]],reduced[[17]],reduced[[18]],
ncol = 6,
o = 'hv',labels = 'reduced',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/151_sameday__conditioning_reduced.jpg'), width = 12, height = 8,  plot = g)
split3 <- byday_original %>%
split(.$intensity) %>%
map(function(small_df){
small_panel <- small_df %>%
mutate(simpson_reciprocal_nlog  = log(simpson_reciprocal)) %>%
rename(`log10(Blautia)` = Blautia,
`log10(Enterococcus)` = Enterococcus,
`log(Simpson reciprocal)` = simpson_reciprocal_nlog) %>%
dplyr::select(`log(Simpson reciprocal)`, `log10(Blautia)`, `log10(Enterococcus)`,  daycal:d_sugar ) %>%
mutate(daycal = daycal/1000) %>%  # now divide the value by 1000 to save some space in x axis text!!!
gather('yaxis', 'value', `log(Simpson reciprocal)`:`log10(Enterococcus)`) %>%
mutate(yaxis = factor(yaxis, levels = c('log(Simpson reciprocal)','log10(Blautia)','log10(Enterococcus)'))) %>%
gather('xaxis', 'number', daycal:d_sugar) %>%
mutate(xaxis = factor(xaxis, levels = c('daycal','d_carb','d_sugar','d_fiber','d_protein','d_fat'))) %>%
mutate(xaxis = if_else(str_detect(xaxis, '^d_'), str_replace(xaxis, 'd_',''), str_replace(xaxis, '^day','')),
xaxis = if_else(str_detect(xaxis, 'cal'), str_replace(xaxis, 'cal','calorie'), xaxis),
xaxis = str_to_title(xaxis),
xaxis = str_glue('{xaxis}')) %>%
mutate(xaxis = factor(xaxis, levels = c('Calorie','Carb','Sugar','Fiber','Protein','Fat')))
small_panel_split_each <- small_panel %>%  split(., list(.$xaxis, .$yaxis))
small_panel_split_each_fig <- small_panel_split_each %>%
imap(function(.x, .y){
res = summary(lm(value ~ number, data = .x ))
pval = round(res$coefficients[2, 'Pr(>|t|)'], 3)
ggscatter(data = .x,x = 'number', y = 'value', alpha = 0.1, xlab ='',
ylab = '',size = 1.2, pch = 19, title =  str_glue('{.y}\nP-val: {pval}'),
add = "reg.line",  # Add regressin line
add.params = list(color = "darkblue", fill = "gray59"), # Customize line
conf.int = TRUE, # Add confidence interval
) +
#facet_grid_sc(rows = vars(yaxis), cols = vars(xaxis), scales = list(y = scales_y, x = scales_x)) +
theme_classic(base_size = 11) +
theme(aspect.ratio = 1,
panel.background = element_rect(fill = "gray97"),
panel.grid.major = element_blank(),
#strip.background = element_blank(),
#strip.text = element_blank(),
panel.grid.minor = element_blank()
)
})
})
# assemble figure
ablatives <- split3[['ablative']]
g <- cowplot::plot_grid(ablatives[[1]],ablatives[[2]],ablatives[[3]],ablatives[[4]],ablatives[[5]],ablatives[[6]],ablatives[[7]],ablatives[[8]],ablatives[[9]],ablatives[[10]],ablatives[[11]],ablatives[[12]],ablatives[[13]],ablatives[[14]],ablatives[[15]],ablatives[[16]],ablatives[[17]],ablatives[[18]],
ncol = 6,
o = 'hv',labels = 'Ablative',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/151_sameday__conditioning_ablative.jpg'), width = 12, height = 8,  plot = g)
nonablative <- split3[['nonablative']]
g <- cowplot::plot_grid(nonablative[[1]],nonablative[[2]],nonablative[[3]],nonablative[[4]],nonablative[[5]],nonablative[[6]],nonablative[[7]],nonablative[[8]],nonablative[[9]],nonablative[[10]],nonablative[[11]],nonablative[[12]],nonablative[[13]],nonablative[[14]],nonablative[[15]],nonablative[[16]],nonablative[[17]],nonablative[[18]],
ncol = 6,
o = 'hv',labels = 'Nonablative',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/151_sameday__conditioning_nonablative.jpg'), width = 12, height = 8,  plot = g)
reduced <- split3[['reduced']]
g <- cowplot::plot_grid(reduced[[1]],reduced[[2]],reduced[[3]],reduced[[4]],reduced[[5]],reduced[[6]],reduced[[7]],reduced[[8]],reduced[[9]],reduced[[10]],reduced[[11]],reduced[[12]],reduced[[13]],reduced[[14]],reduced[[15]],reduced[[16]],reduced[[17]],reduced[[18]],
ncol = 6,
o = 'hv',labels = 'reduced',label_y = -2,
#labels = 'AUTO',
axis = 'bltr')
ggsave(str_glue('../data/151_sameday__conditioning_reduced.jpg'), width = 12, height = 8,  plot = g)
