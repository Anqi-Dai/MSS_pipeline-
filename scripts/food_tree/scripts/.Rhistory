# prepare a table for the food_nsc that is not in the calcor table
cal1 <- dtb_ %>%
ungroup() %>%
filter(!Food_NSC %in% needcal_food)
# find the food_nsc in these and scale to other portions
needcal_food <- calcor %>%
distinct(Food_NSC) %>% pull(Food_NSC)
# prepare a table for the food_nsc that is not in the calcor table
cal1 <- dtb_ %>%
filter(!Food_NSC %in% needcal_food)
# prepare a table for the food_nsc that is not in the calcor table
cal1 <- dtb_ %>%
filter(!Food_NSC %in% needcal_food) %>%
distinct(Food_NSC,Unit, .keep_all = T )
View(cal1)
# prepare a table for the food_nsc that is not in the calcor table
cal1 <- dtb_ %>%
filter(!Food_NSC %in% needcal_food) %>%
distinct(Food_NSC,Unit, .keep_all = T )
# prepare a table for the food_nsc that is not in the calcor table
cal1 <- dtb_ %>%
filter(!Food_NSC %in% needcal_food) %>%
distinct(Food_NSC,Unit, .keep_all = T ) %>%
mutate(cal_per_serving_unit = round(Calories_kcal/Por_eaten,1))
# prepare a table for the food_nsc that is not in the calcor table
cal1 <- dtb_ %>%
filter(!Food_NSC %in% needcal_food) %>%
distinct(Food_NSC,Unit, .keep_all = T ) %>%
mutate(cal_per_serving_unit = round(Calories_kcal/Por_eaten,1)) %>%
select(colnames(cal2))
# combine those two tables
calall <- bind_rows(cal1, cal2)
View(calall)
calall
# combine those two tables
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1))
calall
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1))
calall
# combine those two tables
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1)) %>%
select(Food_NSC, Food_code,Unit, cal_per_serving_unit, total_gram_per_serving_unit)
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1)) %>%
select(Food_NSC, Food_code,Unit, cal_per_serving_unit, total_gram_per_serving_unit)
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1)) %>%
select(Food_NSC, Food_code,Unit, cal_per_serving_unit, total_gram_per_serving_unit)
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1)) %>%
select(Food_NSC, Food_code,Unit, cal_per_serving_unit, total_gram_per_serving_unit)
calall %>% write_csv('../data/144_cal_and_gram_per_serving_unit_batch1.csv')
# to make a plot shows that Jonas suggested that has the foodcode+unit combination boxplot to see if they are generallly consistent
calall %>%
mutate(fd_unit = str_glue('{Food_code}:{Unit}'))
# to make a plot shows that Jonas suggested that has the foodcode+unit combination boxplot to see if they are generallly consistent
calall %>%
mutate(fd_unit = str_glue('{Food_code}:{Unit}')) %>%
ggboxplot(y = 'cal_per_serving_unit') +
facet_wrap(~ fd_unit, scales = 'free')
calall
calall %>% count(Food_code, Unit)
tally_combo <- calall %>% count(Food_code, Unit, sort = T)
View(tally_combo)
tally_combo <- calall %>% count(fd_unit, sort = T)
# combine those two tables
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1)) %>%
select(Food_NSC, Food_code,Unit, cal_per_serving_unit, total_gram_per_serving_unit) %>%
mutate(fd_unit = str_glue('{Food_code}:{Unit}'))
calall %>% write_csv('../data/144_cal_and_gram_per_serving_unit_batch1.csv')
tally_combo <- calall %>% count(fd_unit, sort = T)
to_plot <- tally_combo %>%
filter(n >= 5) %>% pull(fd_unit)
# select to plot the combos that have at least 5 points
to_plot_calall <- calall %>%
filter(fd_unit %in% to_plot)
to_plot_calall %>%
ggboxplot(y = 'cal_per_serving_unit') +
facet_wrap(~ fd_unit, scales = 'free')
ggsave('../data/144_fd_unit5.pdf', width = 10, height = 15)
ggsave('../data/144_fd_unit5.pdf', width = 8, height = 10)
ggsave('../data/144_fd_unit5.pdf', width = 16, height = 15)
to_plot_calall %>%
ggboxplot(y = 'cal_per_serving_unit') +
facet_wrap(~ fd_unit, scales = 'free')
ggsave('../data/144_fd_unit5.pdf', width = 16, height = 15)
View(calall)
View(tally_combo)
sd_combo <- calall %>%
split(.$fd_unit)
View(sd_combo)
View(sd_combo[["11111000:each"]])
# combine those two tables
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1)) %>%
select(Food_NSC, Food_code,Unit, cal_per_serving_unit, total_gram_per_serving_unit) %>%
mutate(fd_unit = str_glue('{Food_code}:{Unit}'))  %>%
inner_join(dtb1 %>% distinct(Food_code, description), by = "Food_code")
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1)) %>%
select(Food_NSC, Food_code,Unit, cal_per_serving_unit, total_gram_per_serving_unit) %>%
mutate(fd_unit = str_glue('{Food_code}:{Unit}'))
# combine those two tables
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1)) %>%
select(Food_NSC, Food_code,Unit, cal_per_serving_unit, total_gram_per_serving_unit) %>%
mutate(fd_unit = str_glue('{Food_code}:{Unit}'))  %>%
inner_join(dtb1 %>% distinct(Food_code, description), by = "Food_code")
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1)) %>%
select(Food_NSC, Food_code,Unit, cal_per_serving_unit, total_gram_per_serving_unit) %>%
mutate(fd_unit = str_glue('{Food_code}:{Unit}'))
# combine those two tables
calall <- bind_rows(cal1, cal2) %>%
mutate(total_gram_per_serving_unit = round(total_g/Por_eaten,1)) %>%
select(Food_NSC, Food_code,Unit, cal_per_serving_unit, total_gram_per_serving_unit) %>%
mutate(fd_unit = str_glue('{Food_code}:{Unit}'))  %>%
inner_join(dtb1 %>% distinct(Food_code, description), by = "Food_code")
calall %>% write_csv('../data/144_cal_and_gram_per_serving_unit_batch1.csv')
sd_combo[[1]]
sd_combo[[1]] %>% mutate(num_data = nrow(.))
sd_combo[[1]]
sd_combo[[1]] %>% mutate(num_data = nrow(.))
sd_combo[[1]] %>% mutate(num_data = nrow(.))
sd_combo <- calall %>%
split(.$fd_unit) %>%
map(function(df){
df %>%
mutate(num_data = nrow(.)) %>%
group_by(fd_unit, description, num_data) %>%
summarise(mean_cal = mean(cal_per_serving_unit),
sd_cal = sd(cal_per_serving_unit))
})
View(sd_combo)
View(sd_combo[["11111000:each"]])
View(sd_combo[["41601030:oz"]])
sd_combo_df <- sd_combo %>% bind_rows()
View(sd_combo_df)
View(calall)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
calall <- read_csv('../data/144_cal_and_gram_per_serving_unit_batch1.csv')
calall <- read_csv('../data/144_cal_and_gram_per_serving_unit_batch1.csv')
sd_combo <- calall %>%
split(.$fd_unit) %>%
map(function(df){
df %>%
mutate(num_data = nrow(.)) %>%
group_by(fd_unit, description, num_data) %>%
summarise(min_cal = min(cal_per_serving_unit),
max_cal = max(cal_per_serving_unit),
mean_cal = mean(cal_per_serving_unit),
sd_cal = sd(cal_per_serving_unit))
})
sd_combo_df <- sd_combo %>% bind_rows()
View(sd_combo_df)
# make them into a single df
calcombined <- calall %>%
left_join(sd_combo_df)
# make them into a single df
calcombined <- calall %>%
left_join(sd_combo_df, by = c("fd_unit", "description"))
View(calcombined)
View(calcombined)
calcombined
# make them into a single df
calcombined <- calall %>%
left_join(sd_combo_df, by = c("fd_unit", "description")) %>%
rename(cal_psu = cal_per_serving_unit,
g_psu = total_gram_per_serving_unit)
View(calall)
# first to replace the food code of the old ones of the fruit juices (real) with the newer ones that Peter added that are in the fruit group
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv')
View(juice_cor)
juice_cor
# first to replace the food code of the old ones of the fruit juices (real) with the newer ones that Peter added that are in the fruit group
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv') %>%
inner_join(calall %>% select(Food_NSC, old_code = Food_code))
View(juice_cor)
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv')
View(calall)
View(calall)
# first to replace the food code of the old ones of the fruit juices (real) with the newer ones that Peter added that are in the fruit group
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv') %>%
inner_join(calall %>% select(Food_NSC, old_code = Food_code) %>% distinct())
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv')
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv')
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv')
# first to replace the food code of the old ones of the fruit juices (real) with the newer ones that Peter added that are in the fruit group
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv') %>%
inner_join(calall %>% select(Food_NSC, old_code = Food_code) %>% distinct())
View(juice_cor)
View(juice_cor)
cor_food <- juice_cor %>%
distinct(Food_NSC) %>% pull(Food_NSC)
View(calall)
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food)
cor_food
View(cal_cor1)
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv')
cal_cor1
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description)
# first to replace the food code of the old ones of the fruit juices (real) with the newer ones that Peter added that are in the fruit group
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv') %>%
inner_join(calall %>% select(Food_NSC, old_code = Food_code) %>% distinct())
View(juice_cor)
juice_cor
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description) %>%
left_join(juice_cor %>% select(Food_NSC:description))
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description) %>%
left_join(juice_cor %>% select(Food_NSC:description) by = "Food_NSC")
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description) %>%
left_join(juice_cor %>% select(Food_NSC:description), by = "Food_NSC")
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description)
# first to replace the food code of the old ones of the fruit juices (real) with the newer ones that Peter added that are in the fruit group
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv') %>%
inner_join(calall %>% select(Food_NSC, old_code = Food_code) %>% distinct()) %>%
distinct()
View(juice_cor)
# first to replace the food code of the old ones of the fruit juices (real) with the newer ones that Peter added that are in the fruit group
juice_cor <- read_csv('../data/142_batch1_fruit_juice_code_correction.csv') %>%
inner_join(calall %>% select(Food_NSC, old_code = Food_code) %>% distinct()) %>%
distinct()
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description)
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description) %>%
left_join(juice_cor %>% select(Food_NSC:description), by = "Food_NSC")
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description)
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description) %>%
left_join(juice_cor %>% select(Food_NSC:description), by = "Food_NSC")
View(cal_cor1)
View(calall)
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description) %>%
left_join(juice_cor %>% select(Food_NSC:description), by = "Food_NSC") %>%
mutate(fd_unit = str_glue('{Food_code}:{Unit}'))
cal_cor1 <- calall %>%
filter(Food_NSC %in% cor_food) %>%
select(-Food_code, -fd_unit, -description) %>%
left_join(juice_cor %>% select(Food_NSC:description), by = "Food_NSC") %>%
mutate(fd_unit = str_glue('{Food_code}:{Unit}')) %>%
select(colnames(calall))
cal_cor2 <- calall %>%
filter(!Food_NSC %in% cor_food)
2207 + 27
cal_cor1
calall2 <- bind_rows(cal_cor1 , cal_cor2)
View(calall2)
View(calall2)
calall2 %>% write_csv('../data/144_cal_and_gram_per_serving_unit_batch1.csv')
calall2_summary <- calall2 %>%
split(.$fd_unit) %>%
map(function(df){
df %>%
mutate(num_data = nrow(.)) %>%
group_by(fd_unit, description, num_data) %>%
summarise(min_cal = min(cal_per_serving_unit),
max_cal = max(cal_per_serving_unit),
mean_cal = mean(cal_per_serving_unit),
sd_cal = sd(cal_per_serving_unit))
})  %>% bind_rows()
View(calall2_summary)
calcombined2 <- calall2 %>%
left_join(calall2_summary, by = c("fd_unit", "description"))
calcombined2 <- calall2 %>%
left_join(calall2_summary, by = c("fd_unit", "description"))
calcombined2 <- calall2 %>%
left_join(calall2_summary, by = c("fd_unit", "description"))
View(calcombined2)
calcombined2 <- calall2 %>%
left_join(calall2_summary, by = c("fd_unit", "description")) %>%
rename(cal_psu = cal_per_serving_unit,
gram_psu = total_gram_per_serving_unit)
calcombined2 <- calall2 %>%
left_join(calall2_summary, by = c("fd_unit", "description")) %>%
rename(cal_psu = cal_per_serving_unit,
gram_psu = total_gram_per_serving_unit) %>%
arrange(desc(sd_cal))
# I wanna take out the smoothie etc for now since it is in a different table that Peter is doing
notnow <- readxl::read_excel('../data/142b_batch1_diet_calories_check_subset_with_macros.xlsx')
View(notnow)
View(notnow)
notnowfood <- notnow %>%
distinct(Food_NSC)
notnowfood <- notnow %>%
distinct(Food_NSC) %>% pull(Food_NSC)
exclude <- readxl::read_excel('../data/142b_batch1_diet_calories_check_subset_with_macros.xlsx')
excludefood <- exclude %>%
distinct(Food_NSC) %>% pull(Food_NSC)
# the below is without the smoothie etc for now since it is in a different table that Peter is doing
calcombined3 <- calcombined2 %>%
filter(! Food_NSC %in% excludefood)
View(calcombined3)
# the ones that need to be merged back after Peter is done with the smoothies:
needsmoothie <- calcombined2 %>%
filter(Food_NSC %in% excludefood)
View(needsmoothie)
needsmoothie %>% write_csv('../data/144_he ones that need to be merged back after Peter is done with the smoothies.csv')
# the below is without the smoothie etc for now since it is in a different table that Peter is doing
calcombined3 <- calcombined2 %>%
filter(! Food_NSC %in% excludefood) %>%
arrange(desc(sd_cal), cal_psu)
# the ones that I decided to let Peter double check:
peter_check_sd_1.55 <- calcombined3 %>%
filter(sd_cal > 1.55)
View(peter_check_sd_1.55)
peter_check_sd_1.55 %>%   write_csv('../data/144_peter_check_sd_gt_1.55_ones.csv')
View(calcombined3)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database()
get_table_from_database('shotgun_lookup_ad')
knitr::opts_chunk$set(echo = TRUE)
stb <- read_csv('~/Work/projects/CART_microbiome/data/shotgun_pheno/final_comprehensive_UPDATED_simple.csv')
folders <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(fid %in% stb$fid) %>%
mutate(folder  = str_extract(directory, 'Sample.+$')) %>%
mutate(path = str_glue('/home/daia1/my_workdir/samples/{folder}'))
View(folders)
stb
folders <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(fid %in% stb$fid) %>%
mutate(folder  = str_extract(directory, 'Sample.+$')) %>%
mutate(path = str_glue('/home/daia1/my_workdir/samples/{folder}'))
folders %>% write_csv('../data/11_CART_projects.csv')
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database()
library(vdbR)
connect_database()
library(asv_alpha_diversity_ag)
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rjson)
#nutrients <- read_csv('~/Downloads/FoodData_Central_survey_food_csv_2022-10-28 2/food_nutrient.csv')
#portions <- read_csv('~/Downloads/FoodData_Central_survey_food_csv_2022-10-28 2/food_portion.csv')
# the below table has the matching of fdc_id and food_code and wweia_code
#matching <- read_csv('~/Downloads/FoodData_Central_survey_food_csv_2022-10-28 2/survey_fndds_food.csv')
fndds_json <- fromJSON(file = "~/Downloads/FoodData_Central_survey_food_json_2022-10-28 2.json")
test <- fndds_json[["SurveyFoods"]][[1]][['foodNutrients']] %>% bind_rows()
test_portion <- fndds_json[["SurveyFoods"]][[1]][['foodPortions']] %>% bind_rows()
fndds_json[["SurveyFoods"]][[1]][['foodNutrients']]
#
View(fndds_json)
fndds_json[["SurveyFoods"]][[1]]
test <- list_rbind(fndds_json[["SurveyFoods"]][[1]])
library(tidyverse)
??list_rbind
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages('tidyverse')
install.packages('tidyverse')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
devtools::install_github("tidyverse/tidyverse")
devtools::install_github("tidyverse/tidyverse")
library(tidyverse)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rjson)
#nutrients <- read_csv('~/Downloads/FoodData_Central_survey_food_csv_2022-10-28 2/food_nutrient.csv')
#portions <- read_csv('~/Downloads/FoodData_Central_survey_food_csv_2022-10-28 2/food_portion.csv')
# the below table has the matching of fdc_id and food_code and wweia_code
#matching <- read_csv('~/Downloads/FoodData_Central_survey_food_csv_2022-10-28 2/survey_fndds_food.csv')
fndds_json <- fromJSON(file = "~/Downloads/FoodData_Central_survey_food_json_2022-10-28 2.json")
test <- fndds_json[["SurveyFoods"]][[1]]
foodAttributes <- test[['foodAttributes']] # has the WWEIA code
names(test)
foodCode <- test[['foodCode']] # a vector of a single food_code
startDate <- test[['startDate']]
wweiaFoodCategory <- test[['wweiaFoodCategory']] # has the ID for the WWEIA code
foodPortions <- test[['foodPortions']] # has the gram weight for different measuring unit
fdcId <- test[['fdcId']]
dataType <- test[['dataType']]
# It seems what really matters is the below:
# foodNutrients
# foodPortions
# foodCode
# foodAttributes
# to get the id, gramWeight and portionDescription in each small list
# to extract the three items out of each portion list
# to also add a column of food_code
foodCode <- test[['foodCode']]
portions_metric <- test %>%
pluck('foodPortions') %>%
map(function(por){
ret = bind_cols(
portion_id = por %>% pluck('id'),
gramWeight = por %>% pluck('gramWeight'),
portionDescription = por %>% pluck('portionDescription')
)
}) %>% bind_rows() %>%
mutate(Food_code = foodCode)
# now repeat for every other survey food
all_portion_grams <- fndds_json %>%
map(function(every_food){
foodCode <- every_food[['foodCode']]
portions_grams <- every_food %>%
pluck('foodPortions') %>%
map(function(por){
ret = bind_cols(
portion_id = por %>% pluck('id'),
gramWeight = por %>% pluck('gramWeight'),
portionDescription = por %>% pluck('portionDescription')
)
}) %>% bind_rows() %>%
mutate(Food_code = foodCode)
return(portions_grams)
})
# now repeat for every other survey food
all_portion_grams <- fndds_json %>%
pluck('SurveyFoods') %>%
map(function(every_food){
foodCode <- every_food[['foodCode']]
portions_grams <- every_food %>%
pluck('foodPortions') %>%
map(function(por){
ret = bind_cols(
portion_id = por %>% pluck('id'),
gramWeight = por %>% pluck('gramWeight'),
portionDescription = por %>% pluck('portionDescription')
)
}) %>% bind_rows() %>%
mutate(Food_code = foodCode)
return(portions_grams)
})
View(all_portion_grams)
View(all_portion_grams[[1]])
View(all_portion_grams[[592]])
# now repeat for every other survey food
all_portion_grams <- fndds_json %>%
pluck('SurveyFoods') %>%
map(function(every_food){
foodCode <- every_food[['foodCode']]
portions_grams <- every_food %>%
pluck('foodPortions') %>%
map(function(por){
ret = bind_cols(
portion_id = por %>% pluck('id'),
gramWeight = por %>% pluck('gramWeight'),
portionDescription = por %>% pluck('portionDescription')
)
}) %>% bind_rows() %>%
mutate(Food_code = foodCode)
return(portions_grams)
}) %>% bind_rows()
View(all_portion_grams)
View(all_portion_grams)
View(all_portion_grams)
# now repeat for every other survey food
all_portion_grams <- fndds_json %>%
pluck('SurveyFoods') %>%
map(function(every_food){
foodCode <- every_food[['foodCode']]
portions_grams <- every_food %>%
pluck('foodPortions') %>%
map(function(por){
ret = bind_cols(
portion_code = por %>% pluck('modifier'),
gramWeight = por %>% pluck('gramWeight'),
portionDescription = por %>% pluck('portionDescription')
)
}) %>% bind_rows() %>%
mutate(Food_code = foodCode)
return(portions_grams)
}) %>% bind_rows()
all_portion_grams %>% write_csv('../data/145_foodData_Central_all_portion_grams.csv')
View(all_portion_grams)
View(all_portion_grams)
foodNutrients <- test[['foodNutrients']]
View(foodNutrients)
knitr::opts_chunk$set(echo = TRUE)
engy <- readxl::read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g),
Food_code = as.numeric(Food_code))
engy <- readxl::read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)','')))
View(engy)
