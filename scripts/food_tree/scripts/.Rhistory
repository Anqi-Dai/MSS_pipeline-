axis = 'bltr')
ggsave(str_glue('../data/154_p2d_combined_conditioning_reduced.jpg'), width = 12, height = 8,  plot = g)
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
library(tidyverse)
library(ggpubr)
library(tidyverse)
library(ggpubr)
library(tidybayes)
library(cowplot)
META <- read_csv('../data/153_combined_META.csv')
META_mod <- META %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100)
meta <- META %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100)
# when the intake is max
post_samples  <- read_csv('../data/153_model_fg_post_all2.csv')
post_coeffs <- post_samples %>%
select(b_intensityreduced,  starts_with('b_fg')) %>%
gather('term','post_coeff') %>%
split(.$term)
post_coeffs
ave_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean)) %>%
gather
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
max_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(max))
# create a df with max and min and ave in 9 groups
# create a df with the corresponding value that the samples prior coeff can multiply
max_ <- ave_fg %>%
rename(mean_ = value) %>%
mutate(max_fg_egg = if_else(key == 'fg_egg', max_fg$fg_egg, mean_),
max_fg_fruit = if_else(key == 'fg_fruit', max_fg$fg_fruit, mean_),
max_fg_grain = if_else(key == 'fg_grain', max_fg$fg_grain, mean_),
max_fg_legume = if_else(key == 'fg_legume', max_fg$fg_legume, mean_),
max_fg_meat = if_else(key == 'fg_meat', max_fg$fg_meat, mean_),
max_fg_milk = if_else(key == 'fg_milk', max_fg$fg_milk, mean_),
max_fg_oils = if_else(key == 'fg_oils', max_fg$fg_oils, mean_),
max_fg_sweets = if_else(key == 'fg_sweets', max_fg$fg_sweets, mean_),
max_fg_veggie = if_else(key == 'fg_veggie', max_fg$fg_veggie, mean_)) %>%
select(-mean_) %>%
mutate(key = if_else(str_detect(key, '^fg'), str_glue('b_{key}'), key))  %>%
arrange(key)
values <- max_ %>%
select(-key) %>%
as.list()
values <- values %>%
map(~ set_names(x = ., max_$key))
# calculate the resulted prior log div
vals <- names(values)
max_each_fg_post <- vals  %>%
set_names(vals) %>%
map(function(val) {
res =
post_coeffs$b_fg_egg$post_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
post_coeffs$b_fg_fruit$post_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
post_coeffs$b_fg_grain$post_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
post_coeffs$b_fg_legume$post_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
post_coeffs$b_fg_meat$post_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
post_coeffs$b_fg_milk$post_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
post_coeffs$b_fg_oils$post_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
post_coeffs$b_fg_sweets$post_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
post_coeffs$b_fg_veggie$post_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
post_coeffs$b_intensityreduced$post_coeff
}) %>%
bind_rows(.id = 'grp')
ave_each_fg_post <- post_samples %>%
mutate(mean_fg =
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_intensityreduced ) %>%
select(mean_fg) %>%
mutate(grp = 'ave_each') %>%
rename(post_res = mean_fg) %>%
select(grp, post_res)
max_each_fg_post
max_each_fg_post
# create a df with max and min and ave in 9 groups
# create a df with the corresponding value that the samples prior coeff can multiply
max_ <- ave_fg %>%
rename(mean_ = value) %>%
mutate(max_fg_egg = if_else(key == 'fg_egg', max_fg$fg_egg, mean_),
max_fg_fruit = if_else(key == 'fg_fruit', max_fg$fg_fruit, mean_),
max_fg_grain = if_else(key == 'fg_grain', max_fg$fg_grain, mean_),
max_fg_legume = if_else(key == 'fg_legume', max_fg$fg_legume, mean_),
max_fg_meat = if_else(key == 'fg_meat', max_fg$fg_meat, mean_),
max_fg_milk = if_else(key == 'fg_milk', max_fg$fg_milk, mean_),
max_fg_oils = if_else(key == 'fg_oils', max_fg$fg_oils, mean_),
max_fg_sweets = if_else(key == 'fg_sweets', max_fg$fg_sweets, mean_),
max_fg_veggie = if_else(key == 'fg_veggie', max_fg$fg_veggie, mean_)) %>%
select(-mean_) %>%
mutate(key = if_else(str_detect(key, '^fg'), str_glue('b_{key}'), key))  %>%
arrange(key)
values <- max_ %>%
select(-key) %>%
as.list()
values <- values %>%
map(~ set_names(x = ., max_$key))
# calculate the resulted prior log div
vals <- names(values)
max_each_fg_post <- vals  %>%
set_names(vals) %>%
map(function(val) {
res =
post_coeffs$b_fg_egg$post_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
post_coeffs$b_fg_fruit$post_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
post_coeffs$b_fg_grain$post_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
post_coeffs$b_fg_legume$post_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
post_coeffs$b_fg_meat$post_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
post_coeffs$b_fg_milk$post_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
post_coeffs$b_fg_oils$post_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
post_coeffs$b_fg_sweets$post_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
post_coeffs$b_fg_veggie$post_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
post_coeffs$b_intensityreduced$post_coeff
}) %>%
bind_rows(.id = 'grp')
ave_each_fg_post <- post_samples %>%
mutate(mean_fg =
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_intensityreduced ) %>%
select(mean_fg) %>%
mutate(grp = 'ave_each') %>%
rename(post_res = mean_fg) %>%
select(grp, post_res)
maxs <- max_each_fg_post %>%  as.list()
two_diff <- map(maxs,  .f = function(maxi){
tibble(
max_=maxi,
ave=ave_each_fg_post$post_res
)  %>%
mutate(diff_max_ave = exp(max_) - exp(ave))
})%>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'max_','')) %>%
left_join(key %>%
select(term = fg1_name, color, shortname))
maxs <- max_each_fg_post %>%  as.list()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
two_diff <- map(maxs,  .f = function(maxi){
tibble(
max_=maxi,
ave=ave_each_fg_post$post_res
)  %>%
mutate(diff_max_ave = exp(max_) - exp(ave))
})%>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'max_','')) %>%
left_join(key %>%
select(term = fg1_name, color, shortname))
View(two_diff)
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
arrange(shortname, grp) %>%
mutate(xtxt = str_glue('{shortname}__{grp}')) %>%
ggplot(aes(y = xtxt, x = post_diff, col =grp )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
scale_color_manual(values = c('#A73030FF','#00468B')) +
labs(x = 'Change in alpha diversity',
y = '',
title = 'Diversity prediction') +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.position = 'none',
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie'))
View(two_diff_plot)
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
ggplot(aes(y = term, x = diff_max_ave )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
#scale_color_manual(values = c('#A73030FF','#00468B')) +
labs(x = 'Change in alpha diversity',
y = '',
title = 'Diversity prediction') +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.position = 'none',
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
two_diff_plot
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
ggplot(aes(y = term, x = diff_max_ave )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
#scale_color_manual(values = c('#A73030FF','#00468B')) +
labs(x = 'Change in alpha diversity',
y = '',
title = 'Diversity prediction') +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.position = 'none',
#axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
ggplot(aes(y = term, x = diff_max_ave )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
#scale_color_manual(values = c('#A73030FF','#00468B')) +
labs(x = 'Change in alpha diversity',
y = '',
title = 'Diversity prediction') +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.position = 'none',
#axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
two_diff_plot
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(tidybayes)
library(cowplot)
META <- read_csv('../data/153_combined_META.csv')
meta <- META %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100)
ave_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean)) %>%
gather
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
max_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(max))
# when the intake is max
post_samples  <- read_csv('../data/153_model_fg_post_all2.csv')
post_coeffs <- post_samples %>%
select(b_intensityreduced,  starts_with('b_fg')) %>%
gather('term','post_coeff') %>%
split(.$term)
# create a df with max and min and ave in 9 groups
# create a df with the corresponding value that the samples prior coeff can multiply
max_ <- ave_fg %>%
rename(mean_ = value) %>%
mutate(max_fg_egg = if_else(key == 'fg_egg', max_fg$fg_egg, mean_),
max_fg_fruit = if_else(key == 'fg_fruit', max_fg$fg_fruit, mean_),
max_fg_grain = if_else(key == 'fg_grain', max_fg$fg_grain, mean_),
max_fg_legume = if_else(key == 'fg_legume', max_fg$fg_legume, mean_),
max_fg_meat = if_else(key == 'fg_meat', max_fg$fg_meat, mean_),
max_fg_milk = if_else(key == 'fg_milk', max_fg$fg_milk, mean_),
max_fg_oils = if_else(key == 'fg_oils', max_fg$fg_oils, mean_),
max_fg_sweets = if_else(key == 'fg_sweets', max_fg$fg_sweets, mean_),
max_fg_veggie = if_else(key == 'fg_veggie', max_fg$fg_veggie, mean_)) %>%
select(-mean_) %>%
mutate(key = if_else(str_detect(key, '^fg'), str_glue('b_{key}'), key))  %>%
arrange(key)
values <- max_ %>%
select(-key) %>%
as.list()
values <- values %>%
map(~ set_names(x = ., max_$key))
# calculate the resulted prior log div
vals <- names(values)
max_each_fg_post <- vals  %>%
set_names(vals) %>%
map(function(val) {
res =
post_coeffs$b_fg_egg$post_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
post_coeffs$b_fg_fruit$post_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
post_coeffs$b_fg_grain$post_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
post_coeffs$b_fg_legume$post_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
post_coeffs$b_fg_meat$post_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
post_coeffs$b_fg_milk$post_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
post_coeffs$b_fg_oils$post_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
post_coeffs$b_fg_sweets$post_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
post_coeffs$b_fg_veggie$post_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
post_coeffs$b_intensityreduced$post_coeff
}) %>%
bind_rows(.id = 'grp')
ave_each_fg_post <- post_samples %>%
mutate(mean_fg =
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_intensityreduced ) %>%
select(mean_fg) %>%
mutate(grp = 'ave_each') %>%
rename(post_res = mean_fg) %>%
select(grp, post_res)
maxs <- max_each_fg_post %>%  as.list()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
two_diff <- map(maxs,  .f = function(maxi){
tibble(
max_=maxi,
ave=ave_each_fg_post$post_res
)  %>%
mutate(diff_max_ave = exp(max_) - exp(ave))
})%>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'max_','')) %>%
left_join(key %>%
select(term = fg1_name, color, shortname))
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
ggplot(aes(y = term, x = diff_max_ave )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
#scale_color_manual(values = c('#A73030FF','#00468B')) +
labs(x = 'Change in alpha diversity',
y = '',
title = 'Diversity prediction') +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.position = 'none',
#axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
two_diff_plot
View(two_diff)
two_diff %>%
filter(term %in% c('fg_sweets')) %>%
count(diff_max_ave < 0)
two_diff %>%
filter(term %in% c('fg_sweets')) %>%
count(diff_max_ave < 0) %>%
mutate(perc = n/sum(n) * 100)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
pts <- read_csv('../data/pts_updated_through_june_2022.csv')
View(pts)
colnames(pts)
# Relapse, Relapse Date
# POD, POD Date
# Status , Last Contact
# gvhd data from the patients table
ptb <- read_csv('../data/152_combined_DTB.csv')
View(ptb)
# Relapse, Relapse Date
# POD, POD Date
# Status , Last Contact
# gvhd data from the patients table
ptb <- read_csv('../data/152_combined_DTB.csv') %>%
distinct(mrn, batch)
View(ptb)
pts <- read_csv('../data/pts_updated_through_june_2022.csv') %>%
rename_all(~ gsub(" ", "_", .))
View(pts)
pts_tb <- pts %>%
right_join(ptb)
pts
pts <- read_csv('../data/pts_updated_through_june_2022.csv') %>%
rename_all(~ gsub(" ", "_", .)) %>%
rename(mrn = MRN)
pts_tb <- pts %>%
right_join(ptb)
View(pts_tb)
# Relapse, Relapse Date
# POD, POD Date
# Status , Last Contact
# gvhd data from the patients table
ptb1 <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
ptb2 <- read_csv('../data/129_new_76_full_patient_info.csv')
View(ptb2)
View(ptb1)
ptb1 %>% select(mrn, hct)
ptb <- bind_rows(
ptb1 %>% select(mrn, hct) %>% mutate(batch = 'batch1'),
ptb2 %>% select(mrn, hct)
)
ptb2 %>% select(mrn, hct)
ptb <- bind_rows(
ptb1 %>% select(mrn, hct) %>% mutate(batch = 'batch1'),
ptb2 %>% select(mrn, hct)%>% mutate(batch = 'batch2')
)
View(ptb1)
View(ptb2)
ptb1 %>% select(mrn, hct)
ptb2 %>% select(mrn, hct)
ptb <- bind_rows(
ptb1 %>% select(mrn, hct) %>% mutate(batch = 'batch1'),
ptb2 %>% select(mrn, hct)%>% mutate(batch = 'batch2')
)
ptb <- bind_rows(
ptb1 %>% select(mrn, hct) %>% mutate(batch = 'batch1'),
ptb2 %>% select(mrn, hct) %>% mutate(batch = 'batch2')
)
ptb1 %>% select(mrn, hct) %>% mutate(batch = 'batch1')
ptb <- bind_rows(
ptb1 %>% select(mrn, hct) %>% mutate(batch = 'batch1'),
ptb2 %>% select(mrn, hct) %>% mutate(batch = 'batch2')
)
View(ptb)
pts_tb <- pts %>%
right_join(ptb)
View(pts_tb)
View(ptb)
View(pts)
pts
pts
pts <- read_csv('../data/pts_updated_through_june_2022.csv') %>%
rename_all(~ gsub(" ", "_", .)) %>%
rename(mrn = MRN) %>%
mutate(hct = lubridate::dmy(HCT))
pts
View(pts)
pts_tb <- pts %>%
right_join(ptb)
pts_tb <- pts %>%
right_join(ptb, by = c("mrn", "hct"))
pts_tb <- pts %>%
right_join(ptb, by = c("mrn", "hct"))
View(pts_tb)
colnames(pts_tb)
pts_tb <- pts %>%
right_join(ptb, by = c("mrn", "hct")) %>%
select(mrn, hct, batch, Relapse:Last_Contact)
# the gvhd data
library(vdbR)
connect_database()
list_table_from_database('ks')
get_table_from_database('patient_allo_ks_20221104')
colnames(patient_allo_ks_20221104)
ptb_gvhd <- patient_allo_ks_20221104
patient_allo_ks_20221104
ptb_gvhd <- patient_allo_ks_20221104 %>%
inner_join(ptb)
ptb_gvhd <- patient_allo_ks_20221104 %>%
inner_join(ptb, by = c("mrn", "hct"))
View(ptb_gvhd)
colnames(patient_allo_ks_20221104)
ptb_gvhd <- patient_allo_ks_20221104 %>%
inner_join(ptb, by = c("mrn", "hct")) %>%
select(mrn, hct, batch, starts_with('d100'))
View(ptb_gvhd)
ptb_gvhd <- patient_allo_ks_20221104 %>%
right_join(ptb, by = c("mrn", "hct")) %>%
select(mrn, hct, batch, starts_with('d100'))
ptb_gvhd <- patient_allo_ks_20221104 %>%
right_join(ptb, by = c("mrn", "hct")) %>%
select(mrn, hct, batch, starts_with('d100'))
173-136
ptb_all <- pts_tb %>%
full_join(ptb_gvhd)
ptb_all <- pts_tb %>%
full_join(ptb_gvhd, by = c("mrn", "hct", "batch"))
View(ptb_all)
173-136
ptb_all %>% write_csv('../data/156_combined_clinical_data.csv')
