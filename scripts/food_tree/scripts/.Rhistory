coord <- dcoords %>%
inner_join(link) %>%
select(-fid, -pt)
fcts_fg <- read_csv('../data/cleaned_diet_data/summarize_food_groups_pt_daily.csv')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv')
fcts_fg_dom <- fcts_fg %>%
group_by(mrn, fdrt) %>%
arrange(-grp_frac, .by_group = T) %>%
slice(1) %>%
ungroup() %>%
transmute(fid = str_glue('P{mrn}d{fdrt}'),
fg1_dom = fg1_name) %>%
inner_join(link %>% select(fid, index_column))
df <- coord %>%
inner_join(fcts_fg_dom) %>%
left_join(fpalette %>% select(fg1_dom = fg1_name, color)) %>%
add_count(fg1_dom) %>%
rename(fg1_name = fg1_dom) %>%
left_join(key )
color_key <- df %>%
ungroup() %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
#mutate(shortname = factor(shortname)) %>%
#arrange(shortname) %>%
deframe()
fig1_umap <- df %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'shortname', alpha = 0.3,size = 3 , shape = 16,
xlab = 'TaxUMAP1', ylab = 'TaxUMAP2') +
scale_color_manual(values = color_key) +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = "none",
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1) +
guides(colour = guide_legend(override.aes = list(alpha=1)))
# another umap colored by the diet diversity?
another <- df %>%
full_join(faith)
library(viridis)
umap_faith <- another %>%
arrange(desc(n)) %>%
mutate(log10faith = log10(faith_pd + 1)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'faith_pd', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
scale_color_viridis() +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
# another version with the legend
umap_faith_legend <- another %>%
arrange(desc(n)) %>%
mutate(log10faith = log10(faith_pd + 1)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'faith_pd', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
scale_color_viridis() +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
ggsave('../data/072_umap_faith_legend.pdf', plot = umap_faith_legend)
View(another)
View(day_calori)
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
View(another)
View(umap_cal)
umap_caloric
umap_cal
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
scale_color_brewer(palette = 'YlOrRd') +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
scale_color_brewer(palette = 'Oranges') +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
scale_color_distiller(palette = "RdPu") +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
scale_color_distiller(palette = "lajolla") +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
scale_color_distiller(palette = "gameofthrones::targaryen") +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric
library(viridis)
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
library(viridis)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
scale_color_distiller(palette = "viridis::plasma") +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
library(viridis)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
paletteer::scale_fill_paletteer_c("viridis::plasma") +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
install.packages('paletteer')
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
library(viridis)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
paletteer::scale_fill_paletteer_c("viridis::plasma") +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
library(viridis)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
paletteer::scale_color_paletteer_c("viridis::plasma") +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric
# another version with the legend
umap_caloric_legend <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.3,size = 3 , shape = 16,
xlab = '', ylab = '') +
paletteer::scale_color_paletteer_c("viridis::plasma") +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric_legend
ggsave('../data/072_umap_cal_legend.pdf', plot = umap_caloric_legend)
middle_2_umap <- plot_grid(umap_caloric,umap_faith,
labels = c('D', "E"),
nrow = 2,axis = 'lbrt', align = 'hv')
middle_2_umap
# a sub figure of only the two umaps so that I can put them into my current version Figure 1
ggsave('../figs/paper/F1_overview_072_umap2.pdf',
width = 80,
height = 70,
#height = 60,
units = c("mm"),
dpi = 400, plot = middle_2_umap)
umap_faith <- another %>%
arrange(desc(n)) %>%
mutate(log10faith = log10(faith_pd + 1)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'faith_pd', alpha = 0.1,size = 3 , shape = 16,
xlab = '', ylab = '') +
scale_color_viridis() +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 0.1,size = 3 , shape = 16,
xlab = '', ylab = '') +
paletteer::scale_color_paletteer_c("viridis::plasma") +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
middle_2_umap <- plot_grid(umap_caloric,umap_faith,
labels = c('D', "E"),
nrow = 2,axis = 'lbrt', align = 'hv')
# a sub figure of only the two umaps so that I can put them into my current version Figure 1
ggsave('../figs/paper/F1_overview_072_umap2.pdf',
width = 80,
height = 70,
#height = 60,
units = c("mm"),
dpi = 400, plot = middle_2_umap)
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv')
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = if_else(item == 'Fiber', 'Fibers', item))
# trying to order the rows and the columns by similarity in euclidean distances
# make it a numerical matrix and then calculate the distance
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('item', 'q50') %>%
column_to_rownames('genus')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
genus_order <- labels(dend)
# the macro order
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('genus', 'q50') %>%
column_to_rownames('item')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
macro_order <- labels(dend)
post_res_ordered <- post_res_genera %>%
mutate(genus = factor(genus, levels = genus_order),
item = factor(item, levels = macro_order))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_text_color <- ifelse(sort(target_genera, decreasing = F) %in% c('Blautia','Enterococcus'), 'red', 'black')
knitr::opts_chunk$set(echo = TRUE)
target_genera <- read_csv('../data/target_genera.csv') %>%
pull(genus)
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_text_color <- ifelse(sort(target_genera, decreasing = F) %in% c('Blautia','Enterococcus'), 'red', 'black')
genus_macro_fat_main <- ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_pubr() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_line( colour = "gray50"),
#panel.grid.minor = element_line( colour = "gray50"),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background=element_rect(colour="black"))
library(tidyverse)
library(ggpubr)
library(tidybayes)
library(brms)
library(rstan)
options(mc.cores = parallel::detectCores())
ncores = parallel::detectCores()
rstan_options(auto_write = TRUE)
axis_text_size <- 10
axis_title_size <- 10
full <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_dietall_genera36.csv')
target_genera <- read_csv('../data/target_genera.csv') %>%
pull(genus)
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_text_color <- ifelse(sort(target_genera, decreasing = F) %in% c('Blautia','Enterococcus'), 'red', 'black')
genus_macro_fat_main <- ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_pubr() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_line( colour = "gray50"),
#panel.grid.minor = element_line( colour = "gray50"),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background=element_rect(colour="black"))
genus_macro_fat_main %>% write_rds('../data/090_genus_macro_fat_main.rds')
# the factor variables for the genus macro fat
post_bi_res <- post_df %>%
select(genus, starts_with('b_')) %>%
select(-starts_with('b_ave'), -b_Intercept) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
))
genus_macro_fat_factor <- ggplot(post_bi_res, aes(x = genus, y = item_name)) +
geom_tile(aes(fill = color,  x = genus, y =  item_name), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item_name),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative','75% CI > 0 positive')) +
theme_pubr() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_rect(colour="black"))
genus_macro_fat_factor %>%
write_rds('../data/090_genus_macro_fat_factor.rds')
genus_macro_fat_main
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_text_color <- ifelse(sort(target_genera, decreasing = F) %in% c('Blautia','Enterococcus'), 'red', 'black')
genus_macro_fat_main <- ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_pubr() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
legend.title = element_blank() ,
#panel.grid.major = element_line( colour = "gray50"),
#panel.grid.minor = element_line( colour = "gray50"),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background=element_rect(colour="black"))
genus_macro_fat_main %>% write_rds('../data/090_genus_macro_fat_main.rds')
genus_macro_fat_main
