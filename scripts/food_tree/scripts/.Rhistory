purrr::map(function(genus) {
mod =  brm( as.formula(str_glue('{genus}  ~
0 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
intensity +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)')),
data = extra_full,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 456, sample_prior = T)
})
View(ret_genus6)
ret_genus6
post_df %>%
write_csv('../data/170_genus6_foodgroup_model_post_extra_few.csv')
post_df <- ret_genus6 %>%
imap(~ (suppressWarnings(posterior_samples(.x)) ))  %>%
bind_rows(.id = 'genus')
post_df %>%
write_csv('../data/170_genus6_foodgroup_model_post_extra_few.csv')
post <- read_csv('../data/170_genus6_foodgroup_model_post_extra_few.csv')
View(post)
post <- read_csv('../data/170_genus6_foodgroup_model_post_extra_few.csv') %>%
select(genus, starts_with('b_fg')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)])
post_res_genera <- post %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = str_replace(item, 'B_','')) %>%
left_join(key %>% select(item = fg1_name, shortname))
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
post_res_genera <- post %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = str_replace(item, 'B_','')) %>%
left_join(key %>% select(item = fg1_name, shortname))
View(post_res_genera)
fg_order <- read_csv('../data/068_fg_sorting_order.csv') %>% pull(shortname)
perc_side <- post %>%
group_by(genus,item ) %>%
count(coeff >= 0) %>%
mutate(perc = round(n/4000, 2)) %>%
mutate(side = if_else(`coeff >= 0` == 'TRUE', 'positive', 'negative')) %>%
ungroup() %>%
select(genus, item, perc, side) %>%
spread('side', 'perc') %>%
mutate(item = str_replace(item, 'b_','')) %>%
left_join(key %>% select(item = fg1_name, shortname), by = "item") %>%
mutate(color = if_else(positive >= 0.75, 'maroon', if_else(negative >= 0.75, 'steelblue', 'white'))) %>%
mutate(mark = if_else(negative >= 0.99 | positive >= 0.99, '***', if_else(negative >= 0.975 | positive >= 0.975, '**', if_else(negative >= 0.95 | positive >= 0.95, '*', '')))) %>%
# order the columns by the number of stars in the columns
mutate(genus = factor(genus,
levels =c('Enterococcus','Klebsiella','Escherichia','Enterobacter','Citrobacter','Cronobacter'))) %>%
mutate(shortname = factor(shortname, levels = fg_order))
perc_side
col_key <- perc_side %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
col_key <- perc_side %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_fg_extra <- ggplot(perc_side, aes(x = genus, y = shortname)) +
geom_tile(aes(fill = color,  x = genus, y =  shortname), alpha = 0.5, color='gray0', width=1, height=1) +
geom_text(aes(label = mark, x = genus,y =  shortname),
nudge_y = -0.05, nudge_x = 0,size = 3) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=90, hjust=1, size=axis_text_size),
axis.text.y=element_text(size=axis_text_size, hjust=0.95,vjust=0.2),
axis.title=element_text(size=axis_title_size),
legend.position = 'none',legend.text=element_text(size=8),
legend.key = element_rect( colour = "gray50"))
genus_fg_extra
ggsave('../data/170_CLR_extra_genera6.pdf', width =  60,plot = genus_fg_extra,
height = 70,
units = c("mm"),
dpi = 400)
perc_side %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_fg_extra <- ggplot(perc_side, aes(x = genus, y = shortname)) +
geom_tile(aes(fill = color,  x = genus, y =  shortname), alpha = 0.5, color='gray0', width=1, height=1) +
geom_text(aes(label = mark, x = genus,y =  shortname),
nudge_y = -0.05, nudge_x = 0,size = 3) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=90, hjust=1, size=axis_text_size),
axis.text.y=element_text(size=axis_text_size, hjust=0.95,vjust=0.2),
axis.title=element_text(size=axis_title_size),
legend.position = 'none',legend.text=element_text(size=8),
legend.key = element_rect( colour = "gray50"))
ggplot(perc_side, aes(x = genus, y = shortname)) +
geom_tile(aes(fill = color,  x = genus, y =  shortname), alpha = 0.5, color='gray0', width=1, height=1) +
geom_text(aes(label = mark, x = genus,y =  shortname),
nudge_y = -0.05, nudge_x = 0,size = 3) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=90, hjust=1, size=axis_text_size),
axis.text.y=element_text(size=axis_text_size, hjust=0.95,vjust=0.2),
axis.title=element_text(size=axis_title_size),
legend.position = 'none',legend.text=element_text(size=8),
legend.key = element_rect( colour = "gray50"))
genus_fg_extra <- ggplot(perc_side, aes(x = genus, y = shortname)) +
geom_tile(aes(fill = color,  x = genus, y =  shortname), alpha = 0.5, color='gray0', width=1, height=1) +
geom_text(aes(label = mark, x = genus,y =  shortname),
nudge_y = -0.05, nudge_x = 0,size = 3) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=90, hjust=1, size=axis_text_size),
axis.text.y=element_text(size=axis_text_size, hjust=0.95,vjust=0.2),
axis.title=element_text(size=axis_title_size),
legend.position = 'none',legend.text=element_text(size=8),
legend.key = element_rect( colour = "gray50"))
ggsave('../data/170_CLR_extra_genera6.pdf', width =  60,plot = genus_fg_extra,
height = 70,
units = c("mm"),
dpi = 400)
knitr::opts_chunk$set(echo = TRUE)
# import the model post results
entero <- read_csv('../data/087_Enterococcus_model_fg_post.csv') %>%
mutate(genus = 'Enterococcus') %>%
relocate(genus, .before = b_fg_fruit)
extra5 <- read_csv('../data/087_genus_foodgroup_model_post_extra_few.csv')
post <- bind_rows(entero, extra5) %>%
select(genus, starts_with('b_fg')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)])
post_res_genera <- post %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = str_replace(item, 'B_','')) %>%
left_join(key %>% select(item = fg1_name, shortname))
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
post_res_genera <- post %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = str_replace(item, 'B_','')) %>%
left_join(key %>% select(item = fg1_name, shortname))
# import the model post results
entero <- read_csv('../data/087_Enterococcus_model_fg_post.csv') %>%
mutate(genus = 'Enterococcus') %>%
relocate(genus, .before = b_fg_fruit)
extra5 <- read_csv('../data/087_genus_foodgroup_model_post_extra_few.csv')
post <- bind_rows(entero, extra5) %>%
select(genus, starts_with('b_fg')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)])
post_res_genera <- post %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = str_replace(item, 'B_','')) %>%
left_join(key %>% select(item = fg1_name, shortname))
post_res_genera <- post %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = str_replace(item, 'B_','')) %>%
left_join(key %>% select(item = fg1_name, shortname))
# import the model post results
entero <- read_csv('../data/087_Enterococcus_model_fg_post.csv') %>%
mutate(genus = 'Enterococcus') %>%
relocate(genus, .before = b_fg_fruit)
extra5 <- read_csv('../data/087_genus_foodgroup_model_post_extra_few.csv')
post <- bind_rows(entero, extra5) %>%
select(genus, starts_with('b_fg')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)])
post_res_genera <- post %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = str_replace(item, 'B_','')) %>%
left_join(key %>% select(item = fg1_name, shortname))
View(post_res_genera)
fg_order <- read_csv('../data/068_fg_sorting_order.csv') %>% pull(shortname)
perc_side <- post %>%
group_by(genus,item ) %>%
count(coeff >= 0) %>%
mutate(perc = round(n/4000, 2)) %>%
mutate(side = if_else(`coeff >= 0` == 'TRUE', 'positive', 'negative')) %>%
ungroup() %>%
select(genus, item, perc, side) %>%
spread('side', 'perc') %>%
mutate(item = str_replace(item, 'b_','')) %>%
left_join(key %>% select(item = fg1_name, shortname), by = "item") %>%
mutate(color = if_else(positive >= 0.75, 'maroon', if_else(negative >= 0.75, 'steelblue', 'white'))) %>%
mutate(mark = if_else(negative >= 0.99 | positive >= 0.99, '***', if_else(negative >= 0.975 | positive >= 0.975, '**', if_else(negative >= 0.95 | positive >= 0.95, '*', '')))) %>%
# order the columns by the number of stars in the columns
mutate(genus = factor(genus,
levels =c('Enterococcus','Klebsiella','Escherichia','Enterobacter','Citrobacter','Cronobacter'))) %>%
mutate(shortname = factor(shortname, levels = fg_order))
col_key <- perc_side %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_fg_extra <- ggplot(perc_side, aes(x = genus, y = shortname)) +
geom_tile(aes(fill = color,  x = genus, y =  shortname), alpha = 0.5, color='gray0', width=1, height=1) +
geom_text(aes(label = mark, x = genus,y =  shortname),
nudge_y = -0.05, nudge_x = 0,size = 3) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=90, hjust=1, size=axis_text_size),
axis.text.y=element_text(size=axis_text_size, hjust=0.95,vjust=0.2),
axis.title=element_text(size=axis_title_size),
legend.position = 'none',legend.text=element_text(size=8),
legend.key = element_rect( colour = "gray50"))
axis_title_size <- 10
axis_text_size <- 10
# calculate the percentage of interval that is >|< 0 for each genus/food combo
fg_order <- read_csv('../data/068_fg_sorting_order.csv') %>% pull(shortname)
perc_side <- post %>%
group_by(genus,item ) %>%
count(coeff >= 0) %>%
mutate(perc = round(n/4000, 2)) %>%
mutate(side = if_else(`coeff >= 0` == 'TRUE', 'positive', 'negative')) %>%
ungroup() %>%
select(genus, item, perc, side) %>%
spread('side', 'perc') %>%
mutate(item = str_replace(item, 'b_','')) %>%
left_join(key %>% select(item = fg1_name, shortname), by = "item") %>%
mutate(color = if_else(positive >= 0.75, 'maroon', if_else(negative >= 0.75, 'steelblue', 'white'))) %>%
mutate(mark = if_else(negative >= 0.99 | positive >= 0.99, '***', if_else(negative >= 0.975 | positive >= 0.975, '**', if_else(negative >= 0.95 | positive >= 0.95, '*', '')))) %>%
# order the columns by the number of stars in the columns
mutate(genus = factor(genus,
levels =c('Enterococcus','Klebsiella','Escherichia','Enterobacter','Citrobacter','Cronobacter'))) %>%
mutate(shortname = factor(shortname, levels = fg_order))
col_key <- perc_side %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_fg_extra <- ggplot(perc_side, aes(x = genus, y = shortname)) +
geom_tile(aes(fill = color,  x = genus, y =  shortname), alpha = 0.5, color='gray0', width=1, height=1) +
geom_text(aes(label = mark, x = genus,y =  shortname),
nudge_y = -0.05, nudge_x = 0,size = 3) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=90, hjust=1, size=axis_text_size),
axis.text.y=element_text(size=axis_text_size, hjust=0.95,vjust=0.2),
axis.title=element_text(size=axis_title_size),
legend.position = 'none',legend.text=element_text(size=8),
legend.key = element_rect( colour = "gray50"))
entero <- read_csv('../data/087_Enterococcus_model_fg_post.csv') %>%
mutate(genus = 'Enterococcus') %>%
relocate(genus, .before = b_fg_fruit)
extra5 <- read_csv('../data/087_genus_foodgroup_model_post_extra_few.csv')
post <- bind_rows(entero, extra5) %>%
select(genus, starts_with('b_fg')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)])
# calculate the percentage of interval that is >|< 0 for each genus/food combo
fg_order <- read_csv('../data/068_fg_sorting_order.csv') %>% pull(shortname)
perc_side <- post %>%
group_by(genus,item ) %>%
count(coeff >= 0) %>%
mutate(perc = round(n/4000, 2)) %>%
mutate(side = if_else(`coeff >= 0` == 'TRUE', 'positive', 'negative')) %>%
ungroup() %>%
select(genus, item, perc, side) %>%
spread('side', 'perc') %>%
mutate(item = str_replace(item, 'b_','')) %>%
left_join(key %>% select(item = fg1_name, shortname), by = "item") %>%
mutate(color = if_else(positive >= 0.75, 'maroon', if_else(negative >= 0.75, 'steelblue', 'white'))) %>%
mutate(mark = if_else(negative >= 0.99 | positive >= 0.99, '***', if_else(negative >= 0.975 | positive >= 0.975, '**', if_else(negative >= 0.95 | positive >= 0.95, '*', '')))) %>%
# order the columns by the number of stars in the columns
mutate(genus = factor(genus,
levels =c('Enterococcus','Klebsiella','Escherichia','Enterobacter','Citrobacter','Cronobacter'))) %>%
mutate(shortname = factor(shortname, levels = fg_order))
col_key <- perc_side %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_fg_extra <- ggplot(perc_side, aes(x = genus, y = shortname)) +
geom_tile(aes(fill = color,  x = genus, y =  shortname), alpha = 0.5, color='gray0', width=1, height=1) +
geom_text(aes(label = mark, x = genus,y =  shortname),
nudge_y = -0.05, nudge_x = 0,size = 3) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=90, hjust=1, size=axis_text_size),
axis.text.y=element_text(size=axis_text_size, hjust=0.95,vjust=0.2),
axis.title=element_text(size=axis_title_size),
legend.position = 'none',legend.text=element_text(size=8),
legend.key = element_rect( colour = "gray50"))
genus_fg_extra
entero <- read_csv('../data/087_Enterococcus_model_fg_post.csv') %>%
mutate(genus = 'Enterococcus') %>%
relocate(genus, .before = b_fg_fruit)
extra5 <- read_csv('../data/087_genus_foodgroup_model_post_extra_few.csv')
post <- bind_rows(entero, extra5) %>%
select(genus, starts_with('b_fg')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)])
# calculate the percentage of interval that is >|< 0 for each genus/food combo
fg_order <- read_csv('../data/068_fg_sorting_order.csv') %>% pull(shortname)
perc_side <- post %>%
group_by(genus,item ) %>%
count(coeff >= 0) %>%
mutate(perc = round(n/4000, 2)) %>%
mutate(side = if_else(`coeff >= 0` == 'TRUE', 'positive', 'negative')) %>%
ungroup() %>%
select(genus, item, perc, side) %>%
spread('side', 'perc') %>%
mutate(item = str_replace(item, 'b_','')) %>%
left_join(key %>% select(item = fg1_name, shortname), by = "item") %>%
mutate(color = if_else(positive >= 0.75, 'maroon', if_else(negative >= 0.75, 'steelblue', 'white'))) %>%
mutate(mark = if_else(negative >= 0.99 | positive >= 0.99, '***', if_else(negative >= 0.975 | positive >= 0.975, '**', if_else(negative >= 0.95 | positive >= 0.95, '*', '')))) %>%
# order the columns by the number of stars in the columns
mutate(genus = factor(genus,
levels =c('Enterococcus','Klebsiella','Escherichia','Enterobacter','Citrobacter','Cronobacter'))) %>%
mutate(shortname = factor(shortname, levels = fg_order))
col_key <- perc_side %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_fg_extra <- ggplot(perc_side, aes(x = genus, y = shortname)) +
geom_tile(aes(fill = color,  x = genus, y =  shortname), alpha = 0.5, color='gray0', width=1, height=1) +
geom_text(aes(label = mark, x = genus,y =  shortname),
nudge_y = -0.05, nudge_x = 0,size = 3) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=90, hjust=1, size=axis_text_size),
axis.text.y=element_text(size=axis_text_size, hjust=0.95,vjust=0.2),
axis.title=element_text(size=axis_title_size),
legend.position = 'none',legend.text=element_text(size=8),
legend.key = element_rect( colour = "gray50"))
genus_fg_extra
entero <- read_csv('../data/087_Enterococcus_model_fg_post.csv') %>%
mutate(genus = 'Enterococcus') %>%
relocate(genus, .before = b_fg_fruit)
extra5 <- read_csv('../data/087_genus_foodgroup_model_post_extra_few.csv')
post <- bind_rows(entero, extra5) %>%
select(genus, starts_with('b_fg')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)])
entero <- read_csv('../data/087_Enterococcus_model_fg_post.csv') %>%
mutate(genus = 'Enterococcus') %>%
relocate(genus, .before = b_fg_fruit)
extra5 <- read_csv('../data/087_genus_foodgroup_model_post_extra_few.csv')
post <- bind_rows(entero, extra5) %>%
select(genus, starts_with('b_fg')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)])
# calculate the percentage of interval that is >|< 0 for each genus/food combo
fg_order <- read_csv('../data/068_fg_sorting_order.csv') %>% pull(shortname)
perc_side <- post %>%
group_by(genus,item ) %>%
count(coeff >= 0) %>%
mutate(perc = round(n/4000, 2)) %>%
mutate(side = if_else(`coeff >= 0` == 'TRUE', 'positive', 'negative')) %>%
ungroup() %>%
select(genus, item, perc, side) %>%
spread('side', 'perc') %>%
mutate(item = str_replace(item, 'b_','')) %>%
left_join(key %>% select(item = fg1_name, shortname), by = "item") %>%
mutate(color = if_else(positive >= 0.75, 'maroon', if_else(negative >= 0.75, 'steelblue', 'white'))) %>%
mutate(mark = if_else(negative >= 0.99 | positive >= 0.99, '***', if_else(negative >= 0.975 | positive >= 0.975, '**', if_else(negative >= 0.95 | positive >= 0.95, '*', '')))) %>%
# order the columns by the number of stars in the columns
mutate(genus = factor(genus,
levels =c('Enterococcus','Klebsiella','Escherichia','Enterobacter','Citrobacter','Cronobacter'))) %>%
mutate(shortname = factor(shortname, levels = fg_order))
col_key <- perc_side %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_fg_extra <- ggplot(perc_side, aes(x = genus, y = shortname)) +
geom_tile(aes(fill = color,  x = genus, y =  shortname), alpha = 0.5, color='gray0', width=1, height=1) +
geom_text(aes(label = mark, x = genus,y =  shortname),
nudge_y = -0.05, nudge_x = 0,size = 3) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=90, hjust=1, size=axis_text_size),
axis.text.y=element_text(size=axis_text_size, hjust=0.95,vjust=0.2),
axis.title=element_text(size=axis_title_size),
legend.position = 'none',legend.text=element_text(size=8),
legend.key = element_rect( colour = "gray50"))
ggsave('../data/120_log10_extra_genera6.pdf', width =  60,plot = genus_fg_extra,
height = 70,
units = c("mm"),
dpi = 400)
genus_fg_extra
