fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#geom_rect( data = cleaned_fg, aes(xmin = -Inf  , xmax = Inf,  ymin = shortname, ymax = shortname), fill = "grey", alpha = 0.8) +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1)
fg_temporal
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#geom_rect( data = cleaned_fg, aes(xmin = -Inf  , xmax = Inf,  ymin = shortname, ymax = shortname), fill = "grey", alpha = 0.8) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1)
fg_temporal
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#geom_rect( data = cleaned_fg, aes(xmin = -Inf  , xmax = Inf,  ymin = shortname, ymax = shortname), fill = "grey", alpha = 0.8) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1)
fg_temporal
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#geom_rect( data = cleaned_fg, aes(xmin = -Inf  , xmax = Inf,  ymin = shortname, ymax = shortname), fill = "grey", alpha = 0.8) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1)
fg_temporal
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#geom_rect( data = cleaned_fg, aes(xmin = -Inf  , xmax = Inf,  ymin = shortname, ymax = shortname), fill = "grey", alpha = 0.8) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1)
fg_temporal
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#geom_rect( data = cleaned_fg, aes(xmin = -Inf  , xmax = Inf,  ymin = shortname, ymax = shortname), fill = "grey", alpha = 0.8) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1)
fg_temporal
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#geom_rect( data = cleaned_fg, aes(xmin = -Inf  , xmax = Inf,  ymin = shortname, ymax = shortname), fill = "grey", alpha = 0.8) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1)
fg_temporal
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_rect( data = cleaned_fg, aes(xmin = -Inf  , xmax = Inf,  ymin = shortname, ymax = shortname), fill = "grey", alpha = 0.8) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1)
fg_temporal
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_rect( data = cleaned_fg, aes(xmin = -Inf  , xmax = Inf,  ymin = shortname, ymax = shortname), fill = "grey", alpha = 0.8) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1)
fg_temporal
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#geom_rect( data = cleaned_fg, aes(xmin = -Inf  , xmax = Inf,  ymin = shortname, ymax = shortname), fill = "grey", alpha = 0.8) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1)
fg_temporal
# the fg  patient
fg_pt <- cleaned_fg %>%
filter(grp == 'patient') %>%
mutate(shortname = factor(shortname, levels = c('Nonablative','Reduced','Ablative'))) %>%
#left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1/2)
fg_pt
# the fg  patient
fg_pt <- cleaned_fg %>%
filter(grp == 'patient') %>%
mutate(shortname = factor(shortname, levels = c('Nonablative','Reduced','Ablative'))) %>%
xlim(1, 2.5) +
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1/2)
# the fg  patient
fg_pt <- cleaned_fg %>%
filter(grp == 'patient') %>%
mutate(shortname = factor(shortname, levels = c('Nonablative','Reduced','Ablative'))) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
labs(x = 'ln(diversity) change', y = '') +
xlim(1, 2.5) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1/2)
fg_pt
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),
nrow = 2)
fg_side
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),
nrow = 2)
fg_side
# the fg  patient
fg_pt <- cleaned_fg %>%
filter(grp == 'patient') %>%
mutate(shortname = factor(shortname, levels = c('Nonablative','Reduced','Ablative'))) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
labs(x = 'ln(diversity) change', y = '') +
xlim(1, 2.5) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1/2)
fg_pt
fg_pt <- cleaned_fg %>%
filter(grp == 'patient')
View(fg_pt)
fg_pt %>% distinct(shortname)
fg_pt <- cleaned_fg %>%
filter(grp == 'patient') %>%
mutate(shortname = factor(shortname, levels = c('Nonablative','Reduced','Ablative')))
fg_pt %>% distinct(shortname)
range(fg_pt$coeff)
# the fg  patient
fg_pt <- cleaned_fg %>%
filter(grp == 'patient') %>%
mutate(shortname = factor(shortname, levels = c('Nonablative','Reduced','Ablative'))) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
labs(x = 'ln(diversity) change', y = '') +
xlim(0.9, 3) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1/2)
# the fg  patient
fg_pt <- cleaned_fg %>%
filter(grp == 'patient') %>%
mutate(shortname = factor(shortname, levels = c('Nonablative','Reduced','Ablative'))) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
labs(x = 'ln(diversity) change', y = '') +
xlim(0.9, 3) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1/2)
# the fg  patient
fg_pt <- cleaned_fg %>%
filter(grp == 'patient') %>%
mutate(shortname = factor(shortname, levels = c('Nonablative','Reduced','Ablative'))) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
labs(x = 'ln(diversity) change', y = '') +
xlim(0.9, 3) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text.y = element_text( size = 10),
axis.title=element_text(size=10),
aspect.ratio=1/2)
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),
nrow = 2)
fg_side
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),align = hv,
nrow = 2)
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),align = 'hv',
nrow = 2)
fg_side
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),align = 'v',
nrow = 2)
fg_side
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),align = 'h',
nrow = 2)
fg_side
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),align = 'l',axis = 'hv',
nrow = 2)
fg_side
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),align = 'lrtb',axis = 'hv',
nrow = 2)
fg_side
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),align = 'lrtb',axis = 'v',
nrow = 2)
fg_side
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),align = 'lrtb',axis = 'h',
nrow = 2)
fg_side
# assemble the ones for the fg
fg_side <-  plot_grid(fg_temporal,fg_pt,
rel_heights = c(2,1),align = 'lb',axis = 'h',
nrow = 2)
fg_side
# order the macro panel
cleaned_macro <-  macro %>% select(starts_with('b_')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_',''),
item = str_replace(item, 'b_',''),
item = str_replace(item, 'intensity','')) %>%
mutate(shortname = case_when(
item ==  'fiber_e' ~ 'abx + Fiber',
item == 'fiber' ~ 'Fiber',
item ==  'fat_e' ~ 'abx + Fat',
item ==  'fat' ~ 'Fat',
item == 'Sugars_e' ~ 'abx + Sugars',
item == 'Sugars' ~ 'Sugars',
item ==  'nonablative' ~ 'Nonablative',
item ==  'reduced' ~ 'Reduced',
item ==  'ablative' ~ 'Ablative',
item ==  'TPN' ~ 'TPN',
item ==  'EN' ~ 'EN',
item ==  'abx' ~ 'abx'
)) %>%
mutate(shortname = factor(shortname, levels = arrange_label$ord))
# order the macro panel
cleaned_macro <-  macro %>% select(starts_with('b_')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_',''),
item = str_replace(item, 'b_',''),
item = str_replace(item, 'intensity','')) %>%
mutate(shortname = case_when(
item ==  'fiber_e' ~ 'abx + Fiber',
item == 'fiber' ~ 'Fiber',
item ==  'fat_e' ~ 'abx + Fat',
item ==  'fat' ~ 'Fat',
item == 'Sugars_e' ~ 'abx + Sugars',
item == 'Sugars' ~ 'Sugars',
item ==  'nonablative' ~ 'Nonablative',
item ==  'reduced' ~ 'Reduced',
item ==  'ablative' ~ 'Ablative',
item ==  'TPN' ~ 'TPN',
item ==  'EN' ~ 'EN',
item ==  'abx' ~ 'abx'
))
cleaned_macro %>% distinct(item) %>% pull(item)
cleaned_macro
cleaned_macro
knitr::opts_chunk$set(echo = TRUE)
set.seed(20230223)
df_clinical <- read_csv("../../pipeline/scripts/food_tree/data/156_transplant_data.csv")
View(df_clinical)
colnames(df_clinical)
knitr::opts_chunk$set(echo = TRUE)
pts <- read_csv('../data/pts_updated_through_june_2022.csv') %>%
rename_all(~ gsub(" ", "_", .)) %>%
rename(mrn = MRN) %>%
mutate(hct = lubridate::dmy(HCT))
colnames(pts)
library(vdbR)
connect_database()
get_table_from_database('patient_allo_ks_20221104')
colnames(patient_allo_ks_20221104)
cleaned_macro <-  macro %>% select(starts_with('b_')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_',''),
item = str_replace(item, 'b_',''),
item = str_replace(item, 'intensity','')) %>%
mutate(shortname = case_when(
item ==  'fiber_e' ~ 'abx + Fiber',
item == 'fiber' ~ 'Fiber',
item ==  'fat_e' ~ 'abx + Fat',
item ==  'fat' ~ 'Fat',
item == 'Sugars_e' ~ 'abx + Sugars',
item == 'Sugars' ~ 'Sugars',
item ==  'nonablative' ~ 'Nonablative',
item ==  'reduced' ~ 'Reduced',
item ==  'ablative' ~ 'Ablative',
item ==  'TPN' ~ 'TPN',
item ==  'EN' ~ 'EN',
item ==  'abx' ~ 'abx'
))
cleaned_macro <-  macro %>% select(starts_with('b_')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_',''),
item = str_replace(item, 'b_',''),
item = str_replace(item, 'intensity','')) %>%
mutate(shortname = case_when(
item ==  'fiber_e' ~ 'abx + Fiber',
item == 'fiber' ~ 'Fiber',
item ==  'fat_e' ~ 'abx + Fat',
item ==  'fat' ~ 'Fat',
item == 'Sugars_e' ~ 'abx + Sugars',
item == 'Sugars' ~ 'Sugars',
item ==  'nonablative' ~ 'Nonablative',
item ==  'reduced' ~ 'Reduced',
item ==  'ablative' ~ 'Ablative',
item ==  'TPN' ~ 'TPN',
item ==  'EN' ~ 'EN',
item ==  'abx' ~ 'abx'
))
cleaned_macro <-  macro %>% select(starts_with('b_')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_',''),
item = str_replace(item, 'b_',''),
item = str_replace(item, 'intensity','')) %>%
mutate(shortname = case_when(
item ==  'fiber_e' ~ 'abx + Fiber',
item == 'fiber' ~ 'Fiber',
item ==  'fat_e' ~ 'abx + Fat',
item ==  'fat' ~ 'Fat',
item == 'Sugars_e' ~ 'abx + Sugars',
item == 'Sugars' ~ 'Sugars',
item ==  'nonablative' ~ 'Nonablative',
item ==  'reduced' ~ 'Reduced',
item ==  'ablative' ~ 'Ablative',
item ==  'TPN' ~ 'TPN',
item ==  'EN' ~ 'EN',
item ==  'abx' ~ 'abx'
))
cleaned_macro <-  macro %>% select(starts_with('b_')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_',''),
item = str_replace(item, 'b_',''),
item = str_replace(item, 'intensity','')) %>%
mutate(shortname = case_when(
item ==  'fiber_e' ~ 'abx + Fiber',
item == 'fiber' ~ 'Fiber',
item ==  'fat_e' ~ 'abx + Fat',
item ==  'fat' ~ 'Fat',
item == 'Sugars_e' ~ 'abx + Sugars',
item == 'Sugars' ~ 'Sugars',
item ==  'nonablative' ~ 'Nonablative',
item ==  'reduced' ~ 'Reduced',
item ==  'ablative' ~ 'Ablative',
item ==  'TPN' ~ 'TPN',
item ==  'EN' ~ 'EN',
item ==  'abx' ~ 'abx'
))
macro_e_order <- cleaned_macro %>% filter(str_detect(item, '_e$')) %>%
group_by(shortname) %>%
tidybayes::median_qi(coeff , .width = c( .66)) %>%
arrange(.lower) %>% pull(shortname)
macro_e_order <- cleaned_macro %>% filter(str_detect(item, '_e$')) %>%
group_by(shortname) %>%
tidybayes::median_qi(coeff , .width = c( .66)) %>%
arrange(.lower)
macro_e_order
