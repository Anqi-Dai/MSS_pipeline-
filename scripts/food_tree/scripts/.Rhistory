narcotics +
(1 | mrn) +
(1 | timebin)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for narcotics
prior(normal(0, 0.1), class = 'b', coef = "narcoticsTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "intensityreduced"),
prior(normal(2, 0.1), class = 'b', coef = "intensityablative"),
prior(normal(2, 0.1), class = 'b', coef = "intensitynonablative"))
model_narcotics <- brm( model_nar,
data = meta_new,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
post_samples  <- posterior_samples(model_narcotics, '^b_')
post_pca <- suppressWarnings(posterior_samples(model_narcotics))
post_pca %>%  write_csv('../data/084_narcotics_PCA_model_post.csv')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
post_samples <- read_csv('../data/084_narcotics_PCA_model_post.csv')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key) %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_colors <- key %>%
select(shortname, color) %>%
deframe()
cross0 <- post_coeff %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
pca_fg <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Coefficients',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11),
aspect.ratio=1)
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure',
item == 'b_narcoticsTRUE' ~ 'PCA exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('PCA exposure', 'Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
pca_bi <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
axis.text=element_text(size=11),
axis.title=element_text(size=11),
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
# combine them together to make one supplementary figure
pca <- cowplot::plot_grid(pca_fg, pca_bi,
nrow = 1,
align = 'hv',
#rel_widths =  c(1,1),
#rel_heights = c(1,1),
labels = c('A','B'),
axis = 'tblr')
pca
ggsave('../figs/paper/S9_narcotics_PCA_084.pdf',
width = 190,
height = 70,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = pca)
ggsave('../figs/paper/S9_narcotics_PCA_084.jpg',
width = 190,
height = 70,
#height = 60,
units = c("mm"),
dpi = 400, device = 'jpg', plot = pca)
meta_new <- meta %>%
mutate(narcotics = if_else(sampleid %in% use_nar_samp$sampleid, T, F))  %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100)
model_nar <- log(simpson_reciprocal)~ 0 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
intensity +
empirical+
TPN+
EN+
narcotics +
(1 | mrn) +
(1 | timebin)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for narcotics
prior(normal(0, 0.1), class = 'b', coef = "narcoticsTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "intensityreduced"),
prior(normal(2, 0.1), class = 'b', coef = "intensityablative"),
prior(normal(2, 0.1), class = 'b', coef = "intensitynonablative"))
model_narcotics <- brm( model_nar,
data = meta_new,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
control = list(adapt_delta = 0.99),
chains = 2,
seed = 123, sample_prior = T)
post_samples  <- posterior_samples(model_narcotics, '^b_')
post_pca <- suppressWarnings(posterior_samples(model_narcotics))
post_pca %>%  write_csv('../data/084_narcotics_PCA_model_post.csv')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
post_samples <- read_csv('../data/084_narcotics_PCA_model_post.csv')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key) %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_colors <- key %>%
select(shortname, color) %>%
deframe()
cross0 <- post_coeff %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
pca_fg <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Coefficients',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11),
aspect.ratio=1)
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure',
item == 'b_narcoticsTRUE' ~ 'PCA exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('PCA exposure', 'Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
pca_bi <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
axis.text=element_text(size=11),
axis.title=element_text(size=11),
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
# combine them together to make one supplementary figure
pca <- cowplot::plot_grid(pca_fg, pca_bi,
nrow = 1,
align = 'hv',
#rel_widths =  c(1,1),
#rel_heights = c(1,1),
labels = c('A','B'),
axis = 'tblr')
pca
ggsave('../figs/paper/S9_narcotics_PCA_084.pdf',
width = 190,
height = 70,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = pca)
ggsave('../figs/paper/S9_narcotics_PCA_084.jpg',
width = 190,
height = 70,
#height = 60,
units = c("mm"),
dpi = 400, device = 'jpg', plot = pca)
nar_all %>%
distinct(mrn)
use_nar_samp
View(stb_samp)
View(use_nar_samp)
use_nar_samp
# how many samples from how many patients
use_nar_samp %>%
count(mrn)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# figure out what samples I used for that
stb <- read_csv('~/Work/projects/CART_microbiome/data/shotgun_pheno/final_comprehensive_UPDATED_simple.csv')
View(stb)
# figure out what samples I used for that
stb <- read_csv('~/Work/projects/CART_microbiome/data/shotgun_pheno/final_comprehensive_UPDATED_simple.csv')
View(stb)
library(vdbR)
connect_database()
get_table_from_database('shotgun_lookup_ad')
View(shotgun_lookup_ad)
folders <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T)
folders <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(fid %in% stb$fid)
View(folders)
View(folders)
# figure out what samples I used for that
stb <- read_csv('~/Work/projects/CART_microbiome/data/shotgun_pheno/final_comprehensive_UPDATED_simple.csv')
folders <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(fid %in% stb$fid) %>%
mutate(folder  = str_extract())
folders
folders <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(fid %in% stb$fid) %>%
mutate(folder  = str_extract(directory, 'Sample.+$'))
folders
folders <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(fid %in% stb$fid) %>%
mutate(folder  = str_extract(directory, 'Sample.+$')) %>%
mutate(path = str_glue('/home/daia1/my_workdir/samples/{folder}'))
View(shotgun_lookup_ad)
diet <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T)
# also find the samples I used for the irep
diet <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(projectid == 'Project_11862')
# also find the samples I used for the irep
diet <- shotgun_lookup_ad %>%
#distinct(sampleid, .keep_all = T) %>%
filter(projectid == 'Project_11862')
View(shotgun_lookup_ad)
diet <- shotgun_lookup_ad %>%
#distinct(sampleid, .keep_all = T) %>%
filter(projectid == 'Project_11862')
# also find the samples I used for the irep
diet <- shotgun_lookup_ad %>%
#distinct(sampleid, .keep_all = T) %>%
filter(projectid == 'Project_11862')
diet <- shotgun_lookup_ad %>%
#distinct(sampleid, .keep_all = T) %>%
filter(projectid == 'Project_11862')
# also find the samples I used for the irep
diet <- shotgun_lookup_ad %>%
#distinct(sampleid, .keep_all = T) %>%
filter(projectid == 'Project_11862') %>%
mutate(folder  = str_extract(directory, 'Sample.+$'))
View(diet)
# also find the samples I used for the irep
diet <- shotgun_lookup_ad %>%
#distinct(sampleid, .keep_all = T) %>%
filter(projectid == 'Project_11862') %>%
mutate(folder  = str_extract(directory, 'Sample.+$')) %>%
mutate(path = str_glue('/home/daia1/my_workdir/samples/{folder}'))
knitr::opts_chunk$set(echo = TRUE)
# all the irep values I got
fns <- list.files('../data/growth/irep/updated_irep/', full.names = T, pattern = '.tsv')
irep <- fns %>%
set_names(fns) %>%
purrr::map(~  read_tsv(file = ., n_max = 1 , col_types = 'cc',  skip = 2, col_names = c('bin','iRep')) %>%  select(iRep) ) %>%
bind_rows(.id = 'fn') %>%
mutate(fn = str_replace(fn, '_irep.tsv$',''),
fn = str_replace(fn, '../data/growth/irep/updated_irep//','')) %>%
separate(fn, into = c('sampleid','samplebin'), sep = '__concat__', remove = T) %>%
mutate(iRep = as.numeric(iRep)) %>%
mutate(samplebin = str_replace(samplebin, '_irep_dastool.tsv','')) %>%
mutate(sbid = str_glue('{sampleid}__{samplebin}'))
full <- read_tsv('../data/growth/bhatpipeline/binning_table_all_full.tsv')
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
group_by(Sample, best_species, best_level) %>%
summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
# save a copy of the high quality bins from the growth samples
bins <-  read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
filter(best_species != 'Unclassified') %>%
arrange(Sample,Bin,  best_species) %>%
relocate(best_species, .after = 'Bin')
bins %>%
distinct(Sample,  best_species)
# check the one best species that have multiple irep
tb %>%
count(Sample, best_species, sort = T)
# combined %>%
#   mutate(gt15 = if_else(iRep > 1.5, T, F)) %>%
#   count(gt15) %>%
#   mutate(perc = n/sum(n)*100)
View(tb)
tb %>% distinct(Sample)
tb %>% ungroup %>% distinct(Sample)
View(irep)
irep %>% ungroup %>% distinct(sampleid)
tb %>% ungroup %>% distinct(Sample)
tb %>% ungroup %>% distinct(Sample)
tb %>% ungroup %>% distinct(Sample)
irep %>% ungroup %>% distinct(sampleid)
# all the irep values I got
fns <- list.files('../data/growth/irep/updated_irep/', full.names = T, pattern = '.tsv')
irep %>% ungroup %>% distinct(sampleid)
tb %>% ungroup %>% distinct(Sample)
irep %>% ungroup %>% distinct(sampleid)
irep %>% ungroup %>% distinct(sampleid)
irep %>% ungroup %>% distinct(sampleid)
irep %>% ungroup %>% distinct(sampleid)
irep %>% ungroup %>% distinct(sampleid)
irep %>% ungroup %>% distinct(sampleid) %>%
write_csv('../../shotgun_pipeline/data/nutrition_growth_rate_complete_samples.csv')
# also find the samples I used for the irep (156)
growth <- read_csv('../data/nutrition_growth_rate_complete_samples.csv')
# also find the samples I used for the irep (156)
growth <- read_csv('../data/nutrition_growth_rate_complete_samples.csv')
View(full)
View(growth)
growth_samples <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(sampleid %in% growth$sampleid)
View(growth_samples)
growth
# also find the samples I used for the irep (156)
growth <- read_csv('../data/nutrition_growth_rate_complete_samples.csv') %>%
mutate(sampleid = str_replace(sampleid, 'FMT_','FMT.'))
growth_samples <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(sampleid %in% growth$sampleid)
View(growth_samples)
growth_samples <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(sampleid %in% growth$sampleid) %>%
mutate(folder  = str_extract(directory, 'Sample.+$')) %>%
mutate(path = str_glue('/home/daia1/my_workdir/samples/{folder}'))
View(shotgun_lookup_ad)
# also the samples for Oriana's cohort project 12652
# after connecting smb://igo-share04.mskcc.org/igo_delivery/share/vandenbm
fns <- list.files('/Volumes/vandenbm/Project_12652')
# also the samples for Oriana's cohort project 12652
# after connecting smb://igo-share04.mskcc.org/igo_delivery/share/vandenbm
fns <- list.files('/Volumes/vandenbm/Project_12652/DIANA_0424/')
fns
# also the samples for Oriana's cohort project 12652
# after connecting smb://igo-share04.mskcc.org/igo_delivery/share/vandenbm
fns <- list.files('/Volumes/vandenbm/Project_12652/MICHELLE_0463//')
fns
# also the samples for Oriana's cohort project 12652
# after connecting smb://igo-share04.mskcc.org/igo_delivery/share/vandenbm
fns <- list.files('/Volumes/vandenbm/Project_12652/DIANA_0424/')
fns
# also the samples for Oriana's cohort project 12652
# after connecting smb://igo-share04.mskcc.org/igo_delivery/share/vandenbm
fns <- tibble(
folder = list.files('/Volumes/vandenbm/Project_12652/DIANA_0424/')
)
# also the samples for Oriana's cohort project 12652
# after connecting smb://igo-share04.mskcc.org/igo_delivery/share/vandenbm
bile <- tibble(
folder = list.files('/Volumes/vandenbm/Project_12652/DIANA_0424/')
)
View(bile)
# also the samples for Oriana's cohort project 12652
# after connecting smb://igo-share04.mskcc.org/igo_delivery/share/vandenbm
bile <- tibble(
folder = list.files('/Volumes/vandenbm/Project_12652/DIANA_0424/')
) %>%
mutate(path = str_glue('/home/daia1/my_workdir/samples/{folder}'))
# combine all of these samples
run3 <- bind_rows(
bile %>% select(path),
growth_samples %>% select(path),
folders %>% select(path)
)
View(run3)
126 + 45+156
run3 %>% write_csv('../data/three_samples.csv', col_names = F)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
```{r}
library(tidyverse)
connect_database('~/dbConfig.txt')
get_table_from_database('shotgun_lookup_ad')
View(shotgun_lookup_ad)
