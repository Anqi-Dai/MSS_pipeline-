item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(nodes) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
# plotting the forest
post_coeff %>%
ggplot(aes(x = coeff, y = shortname, col = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
ggsave('../figs/paper/054_fig2_model_Enterococcaceae_coeff_forest.eps',
width = 80,
height = 55,
units = c("mm"),
dpi = 300, device = 'eps')
post_samples  <- posterior_samples(Enterococcaceae_model, '^b_')
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(nodes) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
# plotting the forest
post_coeff %>%
ggplot(aes(x = coeff, y = shortname, col = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
ggsave('../figs/paper/054_fig2_model_Enterococcaceae_coeff_forest.eps',
width = 80,
height = 80,
units = c("mm"),
dpi = 300, device = 'eps')
post_samples  <- posterior_samples(Enterococcaceae_model, '^b_')
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(nodes) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
# plotting the forest
post_coeff %>%
ggplot(aes(x = coeff, y = shortname, col = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
ggsave('../figs/paper/054_fig2_model_Enterococcaceae_coeff_forest.eps',
width = 55,
height = 55,
units = c("mm"),
dpi = 300, device = 'eps')
post_samples  <- posterior_samples(Enterococcaceae_model, '^b_')
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(nodes) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
# plotting the forest
post_coeff %>%
ggplot(aes(x = coeff, y = shortname, col = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=10),
aspect.ratio=1)
ggsave('../figs/paper/054_fig2_model_Enterococcaceae_coeff_forest.eps',
width = 80,
height = 80,
units = c("mm"),
dpi = 300, device = 'eps')
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme(legend.position = 'none',
aspect.ratio=1)
ggsave('../figs/paper/054_fig2_model_Enterococcaceae_coeff_forest_binary.eps',
width = 100,
height = 100,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps')
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme(legend.position = 'none',
aspect.ratio=1)
ggsave('../figs/paper/054_fig2_model_Enterococcaceae_coeff_forest_binary.eps',
width = 100,
height = 100,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps')
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme(legend.position = 'none',
aspect.ratio=1)
ggsave('../figs/paper/054_fig2_model_Enterococcaceae_coeff_forest_binary.eps',
width = 80,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps')
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme(legend.position = 'none',
aspect.ratio=1)
ggsave('../figs/paper/054_fig2_model_Enterococcaceae_coeff_forest_binary.eps',
width = 100,
height = 100,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps')
library(tidyverse)
dat <- read_rds('/Volumes/vandenBrinkLab/deep_sequencing/Clinical Annotation/Abx_data_TsoniIDB_pull_2020_07-06/allo_tasks_2020-07-10.rds')
narcotic <- dat %>%
filter(is_narcotic == "Y") %>%
filter(grepl("PCA", med_name))
View(dat)
colnames(dat)
dat <- read_rds('/Volumes/vandenbrinklab/deep_sequencing/Clinical Annotation/Abx_data_TsoniIDB_pull_2020_07-06/allo_srx.rds')
library(vdbR)
connect_database('~/dbConfig.txt')
list_table_from_database('qpcr')
get_table_from_database('qpcr_16s_ag')
library(tidyverse)
qpcr <- qpcr_16s_ag %>%
filter(!str_detect(sample_id_unique, 'heat|ethanol')) %>%
filter(!is.na(copies_16s_per_g))
# all the patients that have a entercoccus growth rate
combined <- read_csv('../data/growth/069_irep_combined_res.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
target <- combined %>%
filter(str_detect(best_species, 'Enterococcus')) %>%
distinct(mrn) %>%
pull(mrn)
entero <- combined %>%
filter(str_detect(best_species, 'Enterococcus')) %>%
group_by(sampleid, mrn) %>%
summarise(ave_irpe = mean(aveirep)) %>%
inner_join(meta %>%
select(sampleid, sdrt))
# all of these patients stool samples we have
get_table_from_database('samples_castori_ag')
get_table_from_database('asv_annotation_blast_ag')
sam <- samples_castori_ag %>%
filter(mrn %in% target) %>%
distinct(sampleid) %>%
pull(sampleid)
samps <- samples_castori_ag %>%
filter(mrn %in% target) %>%
distinct(sampleid, mrn)
# get the entercoccus relab of these samples
cts <- get_counts_subset(sam)
ptb <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
cts_ <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
filter(genus == 'Enterococcus')  %>%
inner_join(qpcr %>%
select(sampleid = sample_id, copies_16s_per_g)) %>%
mutate(entero_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct) %>%
filter(sdrt < 54)
entero %>%
ggplot(aes(x = sdrt, y = ave_irpe )) +
geom_point() +
geom_point(data = cts_, aes(x = sdrt, y = entero_copy, col = 'red')) +
facet_wrap(~mrn)
# the patients that have both the irep and qpcr results
both <- intersect(cts_$mrn, entero$mrn)
absl <- both %>%
set_names(both) %>%
imap(function(.x, .y){
# set the min and max in the x axis to be the min and max of the global values
xmax = max(max(entero %>%
filter(mrn == .x) %>% pull(sdrt)), max(cts_ %>%
filter(mrn == .x) %>% pull(sdrt))) + 2
xmin = min(min(entero %>%
filter(mrn == .x) %>% pull(sdrt)), min(cts_ %>%
filter(mrn == .x) %>% pull(sdrt))) -2
irep = entero %>%
filter(mrn == .x) %>%
ggplot(aes(x = sdrt, y = ave_irpe )) +
geom_point() +
labs(title = str_glue('{}')) +
xlim(xmin, xmax) +
labs(x = '',
y = 'average irep values')
copies = cts_ %>%
filter(mrn == .x) %>%
ggplot(aes(x = sdrt, y = entero_copy )) +
geom_point() +
# scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
#          labels = scales::trans_format("log10", scales::math_format(10^.x))) +
xlim(xmin, xmax) +
labs(x = 'day relative to transplant',
y = 'Enterococcus copy\nnumbers')
res = cowplot::plot_grid(irep, copies, axis = 'tblr', align = 'hv', ncol = 1)
#ggsave(str_glue('../data/{.y}.pdf'), width = 5, height = 4)
})
seq(1, length(absl)) %>%
set_names(seq(1, length(absl))) %>%
imap(~ ggsave(str_glue('../data/Patient{.y}.pdf'), width = 5, height = 4, plot = absl[[.x]]))
# customize patient 11
# use the global highest irep value for the highest in the y axis.
irep_highest <- max(entero$ave_irpe) + 0.05
irep_q25 <- quantile(x = entero$ave_irpe, 0.25)
irep_q50 <- quantile(x = entero$ave_irpe, 0.5)
irep_q75 <- quantile(x = entero$ave_irpe, 0.75)
p11 <- names(absl)[11]
xmax = 15
xmin = -5
quantile_annot_df <- tibble(
quant = c('25%','50%','75%'),
height = c(irep_q25, irep_q50, irep_q75)
)
irep = entero %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11) %>%
ggplot(aes(x = sdrt, y = ave_irpe )) +
geom_point() +
labs(title = str_glue('{}')) +
geom_hline(yintercept = irep_q25, linetype = 'dashed') +
geom_text(data = quantile_annot_df, mapping = aes(x = 14, y = height, label = quant), nudge_y = 0.02, size = 2.5) +
geom_hline(yintercept = irep_q50, linetype = 'dashed') +
geom_hline(yintercept = irep_q75, linetype = 'dashed') +
xlim(xmin, xmax) +
ylim(1, irep_highest) +
labs(x = '',
y = 'Average replication rate')+
theme_classic()+
theme(aspect.ratio=1,
panel.grid.major.x = element_line(color = "grey85"))
copies = cts_ %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11) %>%
ggplot(aes(x = sdrt, y = entero_copy )) +
geom_point() +
# scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
#          labels = scales::trans_format("log10", scales::math_format(10^.x))) +
xlim(xmin, xmax) +
labs(x = 'Day relative to transplant',
y = 'Enterococcus copy\nnumbers') +
theme_classic() +
theme(aspect.ratio=1,
panel.grid.major.x = element_line(colour = "grey85"))+
scale_y_log10("Enterococcus copy\nnumbers",
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)))
res = cowplot::plot_grid(irep, copies, axis = 'tblr', align = 'hv', ncol = 1)
res
ggsave('../figs/paper/075_p11_irep_copy.pdf',
width = 120,
height = 120,
units = c("mm"),
dpi = 400, device = 'pdf')
ggsave('../figs/paper/075_p11_irep_copy.pdf',
width = 100,
height = 100,
units = c("mm"),
dpi = 400, device = 'pdf')
View(qpcr_16s_ag)
# customize patient 11
# use the global highest irep value for the highest in the y axis.
irep_highest <- max(entero$ave_irpe) + 0.05
irep_q25 <- quantile(x = entero$ave_irpe, 0.25)
irep_q50 <- quantile(x = entero$ave_irpe, 0.5)
irep_q75 <- quantile(x = entero$ave_irpe, 0.75)
p11 <- names(absl)[11]
xmax = 15
xmin = -5
quantile_annot_df <- tibble(
quant = c('25%','50%','75%'),
height = c(irep_q25, irep_q50, irep_q75)
)
irep = entero %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11) %>%
ggplot(aes(x = sdrt, y = ave_irpe )) +
geom_point() +
labs(title = str_glue('{}')) +
geom_hline(yintercept = irep_q25, linetype = 'dashed') +
geom_text(data = quantile_annot_df, mapping = aes(x = 14, y = height, label = quant), nudge_y = 0.02, size = 2.5) +
geom_hline(yintercept = irep_q50, linetype = 'dashed') +
geom_hline(yintercept = irep_q75, linetype = 'dashed') +
xlim(xmin, xmax) +
ylim(1, irep_highest) +
labs(x = '',
y = 'Average replication rate')+
theme_classic()+
theme(aspect.ratio=1,
panel.grid.major.x = element_line(color = "grey85"))
copies = cts_ %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11) %>%
ggplot(aes(x = sdrt, y = entero_copy )) +
geom_point() +
geom_line(aes(x = sdrt, y = entero_copy), linetype = 'solid', size = 1, col = 'red') +
# scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
#          labels = scales::trans_format("log10", scales::math_format(10^.x))) +
xlim(xmin, xmax) +
labs(x = 'Day relative to transplant',
y = 'Enterococcus copy\nnumbers') +
theme_classic() +
theme(aspect.ratio=1,
panel.grid.major.x = element_line(colour = "grey85"))+
scale_y_log10("Enterococcus copy\nnumbers",
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x)))
res = cowplot::plot_grid(irep, copies, axis = 'tblr', align = 'hv', ncol = 1)
res
ggsave('../figs/paper/075_p11_irep_copy.pdf',
width = 100,
height = 100,
units = c("mm"),
dpi = 400, device = 'pdf')
View(dat)
narcotic <- dat %>%
filter(is_narcotic == "Y") %>%
filter(grepl("PCA", med_name))
View(narcotic)
dat <- read_rds('/Volumes/vandenbrinklab/deep_sequencing/Clinical Annotation/Abx_data_TsoniIDB_pull_2020_07-06/allo_srx.rds')
