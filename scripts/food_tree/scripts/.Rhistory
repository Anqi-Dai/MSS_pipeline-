imap(function(.x, .y){
ggbarplot(data = .x,x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(str_glue('../data/bar_split_by_Day_{.y}.jpg'))
})
# split by fiber
genera %>%
filter(genus %in% keepgenera) %>%
split(.$fiber) %>%
imap(function(.x, .y){
ggbarplot(data = .x,x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(str_glue('../data/bar_split_by_fiber_{.y}.jpg'))
})
genera %>%
filter(genus %in% keepgenera) %>%
split(.$fiber)
# split by fiber
genera %>%
filter(genus %in% keepgenera) %>%
mutate(fiber = str_replace(fiber, '%$','perc')) %>%
split(.$fiber) %>%
imap(function(.x, .y){
ggbarplot(data = .x,x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(str_glue('../data/bar_split_by_fiber_{.y}.jpg'))
})
palette <- distinctColorPalette(n)
library(randomcoloR)
n <- length(keepgenera)
palette <- distinctColorPalette(n)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
palette <- distinctColorPalette(n)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
palette <- distinctColorPalette(n)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
palette <- distinctColorPalette(n)
palette <- distinctColorPalette(n)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
palette <- distinctColorPalette(n)
palette <- distinctColorPalette(n)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
palette <- distinctColorPalette(n)
palette <- distinctColorPalette(n)
palette <- distinctColorPalette(n)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
palette <- distinctColorPalette(n)
palette <- distinctColorPalette(n)
palette <- distinctColorPalette(n)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
palette <- distinctColorPalette(n)
palette <- distinctColorPalette(n)
palette <- distinctColorPalette(n)
palette <- distinctColorPalette(n)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
bar_palette <- genera %>%
filter(genus %in% keepgenera) %>%
distinct(ge) %>%
arrange(ge) %>%
mutate(color = palette)
bar_palette %>% write_csv('../data/bar_palette.csv')
# to find colors for these features
# library(randomcoloR)
# n <- length(keepgenera)
# palette <- distinctColorPalette(n)
# pie(rep(1, n), col=palette)
#
# # output this palette otherwise another random generated ...
#
# bar_palette <- genera %>%
#   filter(genus %in% keepgenera) %>%
#   distinct(ge) %>%
#   arrange(ge) %>%
#   mutate(color = palette)
#
# bar_palette %>% write_csv('../data/bar_palette.csv')
bar_palette <-  read_csv('../data/bar_palette.csv')
bar_plot_pal <- deframe(bar_palette)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave('../data/bar_all.jpg', width = 14, height = 7)
# to find colors for these features
# library(randomcoloR)
# n <- length(keepgenera)
# palette <- distinctColorPalette(n)
# pie(rep(1, n), col=palette)
#
# # output this palette otherwise another random generated ...
#
# bar_palette <- genera %>%
#   filter(genus %in% keepgenera) %>%
#   distinct(ge) %>%
#   arrange(ge) %>%
#   mutate(color = palette)
#
# bar_palette %>% write_csv('../data/bar_palette.csv')
bar_palette <-  read_csv('../data/bar_palette.csv')
bar_plot_pal <- deframe(bar_palette)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave('../data/bar_all.jpg', width = 14, height = 7)
# to find colors for these features
# library(randomcoloR)
# n <- length(keepgenera)
# palette <- distinctColorPalette(n)
# pie(rep(1, n), col=palette)
#
# # output this palette otherwise another random generated ...
#
# bar_palette <- genera %>%
#   filter(genus %in% keepgenera) %>%
#   distinct(ge) %>%
#   arrange(ge) %>%
#   mutate(color = palette)
#
# bar_palette %>% write_csv('../data/bar_palette.csv')
bar_palette <-  read_csv('../data/bar_palette.csv')
bar_plot_pal <- deframe(bar_palette)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave('../data/bar_all.jpg', width = 14, height = 7)
# split by group: BM only or BMT
genera %>%
filter(genus %in% keepgenera) %>%
split(.$grp) %>%
imap(function(.x, .y){
ggbarplot(data = .x,x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(str_glue('../data/bar_split_by_grp_{.y}.jpg'))
})
# split by day
genera %>%
filter(genus %in% keepgenera) %>%
split(.$Day) %>%
imap(function(.x, .y){
ggbarplot(data = .x,x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(str_glue('../data/bar_split_by_Day_{.y}.jpg'))
})
# split by fiber
genera %>%
filter(genus %in% keepgenera) %>%
mutate(fiber = str_replace(fiber, '%$','perc')) %>%
split(.$fiber) %>%
imap(function(.x, .y){
ggbarplot(data = .x,x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(str_glue('../data/bar_split_by_fiber_{.y}.jpg'))
})
# split by fiber
genera %>%
filter(genus %in% keepgenera) %>%
mutate(fiber = str_replace(fiber, '%$','perc')) %>%
split(.$fiber) %>%
imap(function(.x, .y){
ggbarplot(data = .x,x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(file.path(dir, str_glue('Mouse/results/bar_split_by_fiber_{.y}.jpg')))
})
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(file.path(dir, 'Mouse/results/bar_all.jpg'), width = 14, height = 7)
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(file.path(dir, 'Mouse/results/bar_all.jpg'), width = 14, height = 7)
# split by group: BM only or BMT
genera %>%
filter(genus %in% keepgenera) %>%
split(.$grp) %>%
imap(function(.x, .y){
ggbarplot(data = .x,x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(file.path(dir, str_glue('Mouse/results/bar_split_by_grp_{.y}.jpg')))
})
# split by day
genera %>%
filter(genus %in% keepgenera) %>%
split(.$Day) %>%
imap(function(.x, .y){
ggbarplot(data = .x,x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(file.path(dir, str_glue('Mouse/results/bar_split_by_Day_{.y}.jpg')))
})
# split by fiber
genera %>%
filter(genus %in% keepgenera) %>%
mutate(fiber = str_replace(fiber, '%$','perc')) %>%
split(.$fiber) %>%
imap(function(.x, .y){
ggbarplot(data = .x,x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(file.path(dir, str_glue('Mouse/results/bar_split_by_fiber_{.y}.jpg')))
})
dir
bar_palette <-  read_csv(file.path(dir, 'Mouse/bar_palette.csv'))
# to find colors for these features
# library(randomcoloR)
# n <- length(keepgenera)
# palette <- distinctColorPalette(n)
# pie(rep(1, n), col=palette)
#
# # output this palette otherwise another random generated ...
#
# bar_palette <- genera %>%
#   filter(genus %in% keepgenera) %>%
#   distinct(ge) %>%
#   arrange(ge) %>%
#   mutate(color = palette)
#
# bar_palette %>% write_csv('../data/bar_palette.csv')
bar_palette <-  read_csv(file.path(dir, 'Mouse/bar_palette.csv'))
bar_plot_pal <- deframe(bar_palette)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(file.path(dir, 'Mouse/results/bar_all.jpg'), width = 14, height = 7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
arch <- read_excel('../data/archaea sampleids sent to Austria 2022.xlsx')
library(readxl)
arch <- read_excel('../data/archaea sampleids sent to Austria 2022.xlsx')
View(arch)
library(vdbR)
connect_database()
get_table_from_database('shotgun_lookup_ad')
# only archaea samples
archaea <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(sampleid %in% arch) %>%
mutate(full_id = str_extract(directory, 'Sample_.+$'))
arch <- read_excel('../data/archaea sampleids sent to Austria 2022.xlsx')
# only archaea samples
archaea <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(sampleid %in% arch$sampleid) %>%
mutate(full_id = str_extract(directory, 'Sample_.+$'))
View(archaea)
View(arch)
View(archaea)
# only archaea samples
archaea <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(sampleid %in% arch$sampleid) %>%
mutate(full_id = str_extract(directory, 'Sample_.+$')) %>%
select(full_id)
archaea
archaea <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(sampleid %in% arch$sampleid) %>%
mutate(full_id = str_extract(directory, 'Sample_.+$')) %>%
select(sampleid, full_id)
archaea <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(sampleid %in% arch$sampleid) %>%
mutate(full_id = str_extract(directory, 'Sample_.+$')) %>%
select(sampleid, full_id)
# only archaea samples
archaea <- shotgun_lookup_ad %>%
distinct(sampleid, .keep_all = T) %>%
filter(sampleid %in% arch$sampleid) %>%
mutate(full_id = str_extract(directory, 'Sample_.+$')) %>%
select(sampleid, full_id) %>%
mutate(full_id = if_else(sampleid == '772H', 'Sample_772H_IGO_10363_4', full_id))
archaea
archaea %>%
select(full_id) %>%
write_csv('../data/marina_archaea.csv', col_names = F)
# find the two speacies abundance in those samples from metaphlan
abundance <- list.files('~/pipeline/scripts/ppp_Jenny/data/shotgun_output/')
abundance
# find the two speacies abundance in those samples from metaphlan
fns <- list.files('~/pipeline/scripts/ppp_Jenny/data/shotgun_output/')
taxa <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance)) %>%
mutate(relative_abundance = relative_abundance/100) %>%
bind_rows(.id = 'sampleid')
# find the two speacies abundance in those samples from metaphlan
fns <- list.files('~/pipeline/scripts/ppp_Jenny/data/shotgun_output/')
taxa <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance)) %>%
mutate(relative_abundance = relative_abundance/100) %>%
bind_rows(.id = 'sampleid')
# find the two speacies abundance in those samples from metaphlan
fns <- list.files('~/pipeline/scripts/ppp_Jenny/data/shotgun_output/', full.names = T)
taxa <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance)) %>%
mutate(relative_abundance = relative_abundance/100) %>%
bind_rows(.id = 'sampleid')
fns
archaea
# find the two speacies abundance in those samples from metaphlan
fns <- archaea %>%
mutate(fns = str_glue('/Users/daia1/pipeline/scripts/ppp_Jenny/data/shotgun_output/{full_id}_metaphlan3_profile.txt'))
View(fns)
# find the two speacies abundance in those samples from metaphlan
fns <- archaea %>%
mutate(fns = str_glue('/Users/daia1/pipeline/scripts/ppp_Jenny/data/shotgun_output/{full_id}_metaphlan3_profile.txt')) %>%
pull(fns)
taxa <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance) %>%
mutate(relative_abundance = relative_abundance/100)) %>%
bind_rows(.id = 'sampleid')
# find the two speacies abundance in those samples from metaphlan
fns <- archaea %>%
mutate(fns = str_glue('/Users/daia1/pipeline/scripts/ppp_Jenny/data/shotgun_output/{full_id}_metaphlan3_profile.txt')) %>%
filter(sampleid ! = '772H') %>%
# find the two speacies abundance in those samples from metaphlan
fns <- archaea %>%
mutate(fns = str_glue('/Users/daia1/pipeline/scripts/ppp_Jenny/data/shotgun_output/{full_id}_metaphlan3_profile.txt')) %>%
filter(sampleid != '772H') %>%
pull(fns)
# find the two speacies abundance in those samples from metaphlan
fns <- archaea %>%
mutate(fns = str_glue('/Users/daia1/pipeline/scripts/ppp_Jenny/data/shotgun_output/{full_id}_metaphlan3_profile.txt')) %>%
filter(sampleid != '772H') %>%
pull(fns)
taxa <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance) %>%
mutate(relative_abundance = relative_abundance/100)) %>%
bind_rows(.id = 'sampleid') %>%
mutate(sampleid = str_replace(sampleid, '../data/shotgun_output//Sample_',''),
sampleid = str_replace(sampleid, '_IGO_12898.+$',''))
View(taxa)
fns <- archaea %>%
mutate(fns = str_glue('/Users/daia1/pipeline/scripts/ppp_Jenny/data/shotgun_output/{full_id}_metaphlan3_profile.txt')) %>%
filter(sampleid != '772H') %>%
pull(fns)
taxa <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance) %>%
mutate(relative_abundance = relative_abundance/100)) %>%
bind_rows(.id = 'sampleid')
# find the two speacies abundance in those samples from metaphlan
fns <- archaea %>%
mutate(fns = str_glue('/Users/daia1/pipeline/scripts/ppp_Jenny/data/shotgun_output/{full_id}_metaphlan3_profile.txt')) %>%
filter(sampleid != '772H') %>%
pull(fns)
taxa <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance) %>%
mutate(relative_abundance = relative_abundance/100)) %>%
bind_rows(.id = 'sampleid') %>%
mutate(sampleid = str_replace(sampleid, '/Users/daia1/pipeline/scripts/ppp_Jenny/data/shotgun_output/',''),
sampleid = str_replace(sampleid, '_metaphlan3_profile.txt',''))
taxa <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance) %>%
mutate(relative_abundance = relative_abundance/100)) %>%
bind_rows(.id = 'sampleid') %>%
mutate(sampleid = str_replace(sampleid, '/Users/daia1/pipeline/scripts/ppp_Jenny/data/shotgun_output/',''),
sampleid = str_replace(sampleid, '_metaphlan3_profile.txt','')) %>%
filter(str_detect(clade_name, 'k__Archaea'))
View(taxa)
taxa <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance) %>%
mutate(relative_abundance = relative_abundance/100)) %>%
bind_rows(.id = 'sampleid') %>%
mutate(sampleid = str_replace(sampleid, '/Users/daia1/pipeline/scripts/ppp_Jenny/data/shotgun_output/',''),
sampleid = str_replace(sampleid, '_metaphlan3_profile.txt','')) %>%
filter(str_detect(clade_name, 'k__Archaea')) %>%
filter(str_detect(clade_name, 's__'))
