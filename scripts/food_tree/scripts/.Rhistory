axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_cal_ggplot.pdf', width = 8, height = 3)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('asv_counts_ag')
asv_counts_ag %>% distinct(sampleid) %>% nrow
22125*30
663750/1024
2000*3.5
7648/1024
post_df <- ret_genus_macro %>%
imap(~ (suppressWarnings(posterior_samples(.x)) %>%
select(-starts_with('r_'))))  %>%
bind_rows(.id = 'genus')
post_df <- read_csv('../data/078_genus_macro_model_post.csv')
post_df <- read_csv('../data/078_genus_macro_model_post.csv')
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
# trying to order the rows and the columns by similarity in euclidean distances
# make it a numerical matrix and then calculate the distance
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('item', 'q50') %>%
column_to_rownames('genus')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
genus_order <- labels(dend)
# the macro order
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('genus', 'q50') %>%
column_to_rownames('item')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
macro_order <- labels(dend)
post_res_ordered <- post_res_genera %>%
mutate(genus = factor(genus, levels = genus_order),
item = factor(item, levels = macro_order))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(vdbR)
library(tidybayes)
connect_database('~/dbConfig.txt')
library(brms)
library(rstan)
options(mc.cores = parallel::detectCores())
ncores = parallel::detectCores()
rstan_options(auto_write = TRUE)
axis_text_size <- 10
axis_title_size <- 10
asv_counts_ag %>% distinct(sampleid) %>% nrow
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
full <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_dietall_genera36.csv')
alpha_cal <- log(simpson_reciprocal) ~ 1 +
ave_cal +
inten_non + inten_ab + inten_re +
EN +
TPN +
empirical +
(1 | mrn) +
(1 | timebin)
priors_alpha_cal <- c(
prior(normal(0, 0.5), class = 'b', coef = "ave_cal"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.6), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
# for the intercept
prior(normal(2, 0.1), class = 'Intercept'))
# vet the prior
model_alpha_cal  <- brm( alpha_cal,
data = full,
warmup = 1000, iter = 3000,
prior = priors_alpha_cal,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
mean_ave_cal <- mean(full$ave_cal)
mean_ave_cal_prior <- prior_draws(model_alpha_cal) %>%
mutate(mean_ave_cal_div = Intercept +
b_ave_cal * mean_ave_cal+
b_inten_re ) %>%
select(mean_ave_cal_div) %>%
mutate(grp = 'mean_ave_cal') %>%
rename(prior_res = mean_ave_cal_div) %>%
select(grp, prior_res)
mean_ave_cal_prior %>%
count(prior_res >= min(full$simpson_reciprocal) & prior_res <= max(full$simpson_reciprocal)) %>%
mutate(fraction = round(n /sum(n), 2))  %>%
slice(2) %>%
pull(fraction)
# look at the post
post_coeff <- posterior_samples(model_alpha_cal, '^b_') %>%
select(starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = fct_reorder(item, coeff, .fun=median, .desc = F))
post_coeff %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Calories') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
ggsave('../figs/paper/078_cal_alpha_model_coeff_forest.eps',
width = 80,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps')
post_coeff %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Calories') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
post_coeff <- posterior_samples(model_alpha_cal, '^b_') %>%
select(starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = fct_reorder(item, coeff, .fun=median, .desc = F))
post_coeff %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Calories') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
ggsave('../figs/paper/078_cal_alpha_model_coeff_forest.eps',
width = 80,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps')
post_coeff <- posterior_samples(model_alpha_cal, '^b_') %>%
select(starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = fct_reorder(item, coeff, .fun=median, .desc = F))
post_coeff %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Calories') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
ggsave('../figs/paper/078_cal_alpha_model_coeff_forest.eps',
width = 80,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps')
ggsave('../figs/paper/078_cal_alpha_model_coeff_forest.jpg',
width = 80,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, device = 'jpg')
ggsave('../figs/paper/078_heatmap_genus_36_cal_ggplot.jpg', width = 8, height = 3)
post_df <- ret_genus_cal %>%
imap(~ (suppressWarnings(posterior_samples(.x)) %>%
select(-starts_with('r_'))))  %>%
bind_rows(.id = 'genus')
# look at the post
post_df <- read_csv('../data/078_genus_cal_model_post.csv')
# look at the post
post_df <- read_csv('../data/078_genus_cal_model_post.csv')
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative', '75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative', '75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
# look at the post
post_df <- read_csv('../data/078_genus_cal_model_post.csv')
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative', '75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(vdbR)
library(tidybayes)
connect_database('~/dbConfig.txt')
library(brms)
library(rstan)
options(mc.cores = parallel::detectCores())
ncores = parallel::detectCores()
rstan_options(auto_write = TRUE)
axis_text_size <- 10
axis_title_size <- 10
# look at the post
post_df <- read_csv('../data/078_genus_cal_model_post.csv')
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative', '75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_cal_ggplot.pdf', width = 8, height = 3)
ggsave('../figs/paper/078_heatmap_genus_36_cal_ggplot.jpg', width = 8, height = 3)
post_df <- read_csv('../data/078_genus_macro_model_post.csv')
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
# trying to order the rows and the columns by similarity in euclidean distances
# make it a numerical matrix and then calculate the distance
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('item', 'q50') %>%
column_to_rownames('genus')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
genus_order <- labels(dend)
# the macro order
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('genus', 'q50') %>%
column_to_rownames('item')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
macro_order <- labels(dend)
post_res_ordered <- post_res_genera %>%
mutate(genus = factor(genus, levels = genus_order),
item = factor(item, levels = macro_order))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 3)
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.jpg', width = 8, height = 3)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('asv_sequences_ag')
View(asv_sequences_ag)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
get_counts_subset(c('10A.RT.D11'))
t <- get_counts_subset(c('10A.RT.D11'))
View(t)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# the subset
sub <- read_csv('../data/shotgun_fid_for_strainphlan_372_unique_sampleid.csv')
View(sub)
chi <- read_csv('../../MSS_pipeline-/scripts/shotgun_pipeline/data/shotgun_fid_for_transition_state_project.csv') %>%
arrange(sampleid, projectid) %>%
distinct(sampleid, .keep_all = T)
View(chi)
sub
View(chi)
# the subset
sub <- read_csv('../data/shotgun_fid_for_strainphlan_372_unique_sampleid.csv') %>%
inner_join(chi)
sub <- read_csv('../data/shotgun_fid_for_strainphlan_372_unique_sampleid.csv')
# the subset
sub <- read_csv('../data/shotgun_fid_for_strainphlan_372_unique_sampleid.csv') %>%
inner_join(chi)
View(sub)
# the subset
sub <- read_csv('../data/shotgun_fid_for_strainphlan_372_unique_sampleid.csv') %>%
inner_join(chi) %>%
select(fid)
View(sub)
# the subset
sub <- read_csv('../data/shotgun_fid_for_strainphlan_372_unique_sampleid.csv') %>%
inner_join(chi) %>%
select(fid) %>%
write_csv('../data/shotgun_fid_from_metaphlan3_results_372.csv', col_names = F)
all <- read_csv('../../MSS_pipeline-/scripts/shotgun_pipeline/data/shotgun_samples_all_perc.csv')
View(all)
all
spp <- all %>%
distinct(clade_name)
View(spp)
spp <- all %>%
distinct(clade_name) %>%
transmute(species = str_extract(clade_name, 's__.+$'))
all <- read_csv('../../MSS_pipeline-/scripts/shotgun_pipeline/data/shotgun_samples_all_perc.csv')
spp <- all %>%
distinct(clade_name)
spp <- all %>%
distinct(clade_name) %>%
transmute(species = str_extract(clade_name, 's__.+$')) %>%
filter(!is.na(species))
