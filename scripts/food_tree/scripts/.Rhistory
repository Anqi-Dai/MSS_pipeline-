connect_database()
library(tidyverse)
library(ggpubr)
get_table_from_database('asv_alpha_diversity_ag')
get_table_from_database('asv_annotation_blast_ag')
get_table_from_database('asv_annotation_blast_color_ag')
# the alpha diversity
alpha <- asv_alpha_diversity_ag %>%
filter(sampleid %in% c('1964A','1943B'))
# the composition of the two samples
counts_data <- get_counts_subset(c('1964A','1943B')) %>%
mutate(sampleid = factor(sampleid, levels = c('1964A','1943B')))
dat <- counts_data %>%
select(asv_key:count_total, count_relative) %>%
left_join(asv_annotation_blast_color_ag %>%
select(asv_key,color_label_group_distinct), by = "asv_key") %>%
left_join(alpha %>% select(sampleid, simpson_reciprocal)) %>%
mutate(simpson_reciprocal = round(simpson_reciprocal, digits = 1),
xlabel = str_glue('{sampleid}\ndiversity:{simpson_reciprocal}'))
asv_color_set <- asv_annotation_blast_color_ag %>%
distinct(color,color_label_group_distinct,color_label_group,color_base) %>%
select(color_label_group_distinct, color) %>%
deframe()
cbd <- compute_beta_diversity_and_tsne(sampleid = dat$sampleid,
taxonomy = dat$color_label_group_distinct,
count = dat$count);
#compute beta diversity
cbd$compute_beta_diversity()
stacked_bar <- ggplot(dat,aes(xlabel, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
labs(title = '',
x = '',
y = 'Relative abundance') +
theme(
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
stacked_bar
library(cowplot)
p <- '../data/composition_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(p),   scale = 0.9)
legend
top <- plot_grid(stacked_bar, legend,rel_widths  = c(1, 2) )
ggsave('../data/13_bar.pdf',
width = 190,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, plot = top)
# what are the others
dat %>%
filter(str_detect(color_label_group_distinct, 'other')) %>%
left_join(asv_annotation_blast_ag %>% select(asv_key, genus)) %>%
filter(sampleid == '1943B') %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
arrange(-relab) %>%
write_csv('../data/13_other_genera.csv')
# to get the color of the three genera
colors <- asv_color_set %>%
filter(str_detect(color_label_group_distinct, 'Enterococcus|Actinobacteria|Ruminoco')) %>%
mutate(taxa = str_replace(color_label_group_distinct, '\\..+$','')) %>%
group_by(taxa) %>%
sample_n(size = 1, replace = F) %>%
ungroup() %>%
mutate(genus = c('Ruminococcus','Enterococcus','Bifidobacterium'))
dat
dat
dat <- counts_data %>%
select(asv_key:count_total, count_relative) %>%
left_join(asv_annotation_blast_color_ag %>%
select(asv_key,color_label_group_distinct), by = "asv_key") %>%
left_join(alpha %>% select(sampleid, simpson_reciprocal)) %>%
mutate(simpson_reciprocal = round(simpson_reciprocal, digits = 1),
xlabel = str_glue('{sampleid}\ndiversity:{simpson_reciprocal}'))  %>%
mutate(sampleid = factor(sampleid, levels = c('1964A','1943B')))
dat
stacked_bar <- ggplot(dat,aes(xlabel, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
labs(title = '',
x = '',
y = 'Relative abundance') +
theme(
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
stacked_bar
dat <- counts_data %>%
select(asv_key:count_total, count_relative) %>%
left_join(asv_annotation_blast_color_ag %>%
select(asv_key,color_label_group_distinct), by = "asv_key") %>%
left_join(alpha %>% select(sampleid, simpson_reciprocal)) %>%
mutate(simpson_reciprocal = round(simpson_reciprocal, digits = 1),
xlabel = str_glue('{sampleid}\ndiversity:{simpson_reciprocal}'))  %>%
mutate(xlabel = factor(xlabel, levels = c('1964A\ndiversity:14.8','1943B\ndiversity:2.7')))
stacked_bar <- ggplot(dat,aes(xlabel, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
labs(title = '',
x = '',
y = 'Relative abundance') +
theme(
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
stacked_bar
library(cowplot)
p <- '../data/composition_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(p),   scale = 0.9)
legend
top <- plot_grid(stacked_bar, legend,rel_widths  = c(1, 2) )
ggsave('../data/13_bar.pdf',
width = 190,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, plot = top)
genera
genera %>%
ggbarplot(y = 'relab', x = 'sampleid', facet.by = 'genus', fill = 'genus', color = 'genus',
ylab = 'Relative abundance') +
scale_fill_manual(values = colors_pal) +
scale_color_manual(values = colors_pal)
# to get the relab of those genera: Akkermansia, Bifidobacterium, Burkholderia, Collinsella, Enterococcus, Ruminococcus
genera <- counts_data %>%
select(asv_key:count_total, count_relative) %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key,genus), by = "asv_key") %>%
filter(genus %in% c('Akkermansia','Bifidobacterium','Burkholderia','Collinsella','Enterococcus','Ruminococcus')) %>%
group_by(sampleid, genus) %>%
summarise(relab =  sum(count_relative)) %>%
left_join(colors %>% select(genus, color)) %>%
mutate(genus = fct_reorder(genus, relab, .fun=max, .desc = T)) %>%
mutate(sampleid = factor(sampleid, levels = c('1964A','1943B')))
genera %>%
ggbarplot(y = 'relab', x = 'sampleid', facet.by = 'genus', fill = 'genus', color = 'genus',
ylab = 'Relative abundance') +
scale_fill_manual(values = colors_pal) +
scale_color_manual(values = colors_pal)
ggsave('../data/13_genus.pdf', height = 3, width = 5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
pheno <- read_csv('../data/phenon.csv')
View(pheno)
pheno <- read_csv('../data/phenon.csv')
pheno <- readxl::read_excel('../data/05_meta_with_alpha.xlsx')
View(pheno)
pheno
pheno <- readxl::read_excel('../data/05_meta_with_alpha.xlsx') %>%
filter(day == 'D7')
View(pheno)
cts <- read_csv('../data/05_all_shotgun_metaphlan_spp.csv')
View(cts)
cts
cts <- read_csv('../data/05_all_shotgun_metaphlan_spp.csv') %>%
filter(sampleid %in% pheno$sampleid)
View(cts)
View(pheno)
View(pheno)
spp <- read_csv('../data/05_all_shotgun_metaphlan_spp.csv') %>%
filter(sampleid %in% pheno$sampleid)
genera <- spp %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(relative_abundance)) %>%
ungroup() %>%
mutate(ge = str_extract(genus, 'g__.+$')) %>%
#mutate(ge = fct_reorder(ge, genus, )) %>%
left_join(meta_mouse, by = "sampleid")
View(spp)
genera <- spp %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(perc)) %>%
ungroup() %>%
mutate(ge = str_extract(genus, 'g__.+$')) %>%
#mutate(ge = fct_reorder(ge, genus, )) %>%
left_join(meta_mouse, by = "sampleid")
genera <- spp %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(perc)) %>%
ungroup() %>%
mutate(ge = str_extract(genus, 'g__.+$')) %>%
#mutate(ge = fct_reorder(ge, genus, )) %>%
left_join(pheno, by = "sampleid")
View(genera)
pheno <- readxl::read_excel('../data/05_meta_with_alpha.xlsx') %>%
filter(day == 'D7')
spp <- read_csv('../data/05_all_shotgun_metaphlan_spp.csv') %>%
filter(sampleid %in% pheno$sampleid)
View(spp)
spp <- read_csv('../data/05_all_shotgun_metaphlan_spp.csv') %>%
filter(sampleid %in% pheno$sampleid)
spp <- read_csv('../data/05_all_shotgun_metaphlan_spp.csv')
spp <- read_csv('../data/05_all_shotgun_metaphlan_spp.csv') %>%
filter(sampleid %in% pheno$sampleid)
genera <- spp %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(perc)) %>%
ungroup() %>%
mutate(ge = str_extract(genus, 'g__.+$'))
genera <- spp %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(perc)) %>%
ungroup() %>%
mutate(ge = str_extract(genus, 'g__.+$')) %>%
#mutate(ge = fct_reorder(ge, genus, )) %>%
left_join(pheno, by = "sampleid")
View(genera)
genera <- spp %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(perc)) %>%
ungroup() %>%
mutate(ge = str_extract(genus, 'g__.+$')) %>%
#mutate(ge = fct_reorder(ge, genus, )) %>%
left_join(pheno, by = "sampleid")
genera
genera %>%
ungroup() %>%
distinct(genus) %>% nrow
keepgenera <- genera %>%
filter(relab > 0.1) %>%
count(genus) %>%
filter(n > floor(nrow(pheno) * 0.2)) %>%
pull(genus)
library(randomcoloR)
install.packages('randomcoloR')
# to find colors for these features
library(randomcoloR)
n <- length(keepgenera)
palette <- distinctColorPalette(n)
pie(rep(1, n), col=palette)
bar_palette <- genera %>%
filter(genus %in% keepgenera) %>%
distinct(ge) %>%
arrange(ge) %>%
mutate(color = palette)
View(bar_palette)
bar_plot_pal <- deframe(bar_palette)
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
genera
genera <- spp %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(perc)) %>%
ungroup() %>%
mutate(ge = str_extract(genus, 'g__.+$')) %>%
#mutate(ge = fct_reorder(ge, genus, )) %>%
left_join(pheno, by = "sampleid") %>%
mutate(sid = str_glue('{grp} {sampleid}'))
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'grp' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
library(vegan)
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'grp' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'grp' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
View(spp)
spp
# a beta diversity scatter plot
# find the spp > 0.01% in more than 20% samples
keep_spp <- spp %>%
filter(perc > 0.01) %>%
count(clade_name) %>%
filter(n > floor(nrow(pheno) * 0.2)) %>%
pull(clade_name)
keep_spp
keep_spp <- spp %>%
filter(perc > 0.01) %>%
count(clade_name) %>%
filter(n > floor(nrow(pheno) * 0.2)) %>%
pull(clade_name)
cts_fil <- spp %>%
filter(clade_name %in% keep_spp) %>%
select(sampleid, clade_name,perc )
# calculate the Bray curtis beta diversity
cts_fil <- spp %>%
filter(clade_name %in% keep_spp) %>%
select(sampleid, clade_name,perc ) %>%
spread(key = 'clade_name', value = 'perc', fill = 0) %>%
column_to_rownames('sampleid')
View(cts_fil)
dist_ <- vegdist(cts_fil, method = 'bray')
eigen <- cmdscale(dist_, eig = T)$eig
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
bc <- cmdscale(dist_, k = 2)
beta_df <- bc %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
full_join(pheno)
View(beta_df)
# a beta diversity scatter plot
# find the spp > 0.01% in more than 20% samples
keep_spp <- spp %>%
filter(perc > 0.01) %>%
count(clade_name) %>%
filter(n > floor(nrow(pheno) * 0.2)) %>%
pull(clade_name)
# calculate the Bray curtis beta diversity
cts_fil <- spp %>%
filter(clade_name %in% keep_spp) %>%
select(sampleid, clade_name,perc ) %>%
spread(key = 'clade_name', value = 'perc', fill = 0) %>%
column_to_rownames('sampleid')
dist_ <- vegdist(cts_fil, method = 'bray')
eigen <- cmdscale(dist_, eig = T)$eig
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
beta_df <- bc %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
full_join(pheno)
beta_df
keep_spp <- spp %>%
filter(perc > 0.01) %>%
count(clade_name) %>%
filter(n > floor(nrow(pheno) * 0.2)) %>%
pull(clade_name)
# calculate the Bray curtis beta diversity
cts_fil <- spp %>%
filter(clade_name %in% keep_spp) %>%
select(sampleid, clade_name,perc ) %>%
spread(key = 'clade_name', value = 'perc', fill = 0) %>%
column_to_rownames('sampleid')
dist_ <- vegdist(cts_fil, method = 'bray')
eigen <- cmdscale(dist_, eig = T)$eig
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
beta_df <- bc %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
full_join(pheno)
keep_spp <- spp %>%
filter(perc > 0.01) %>%
count(clade_name) %>%
filter(n > floor(nrow(pheno) * 0.2)) %>%
pull(clade_name)
# calculate the Bray curtis beta diversity
cts_fil <- spp %>%
filter(clade_name %in% keep_spp) %>%
select(sampleid, clade_name,perc ) %>%
spread(key = 'clade_name', value = 'perc', fill = 0) %>%
column_to_rownames('sampleid')
dist_ <- vegdist(cts_fil, method = 'bray')
eigen <- cmdscale(dist_, eig = T)$eig
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
beta_df <- bc %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
full_join(pheno)
beta_df
beta_df %>%
ggscatter(x = 'V1', y = 'V2', color =  'grp', palette = 'lancet',alpha = 0.5) +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
beta_df %>%
ggscatter(x = 'V1', y = 'V2', color =  'grp', palette = 'lancet',alpha = 1) +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
beta_df %>%
ggscatter(x = 'V1', y = 'V2', color =  'grp', palette = 'lancet',alpha = 1, label = 'sampleid') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# a beta diversity scatter plot
# find the spp > 0.01% in more than 20% samples
keep_spp <- spp %>%
filter(perc > 0.01) %>%
count(clade_name) %>%
filter(n > floor(nrow(pheno) * 0.2)) %>%
pull(clade_name)
# calculate the Bray curtis beta diversity
cts_fil <- spp %>%
filter(clade_name %in% keep_spp) %>%
select(sampleid, clade_name,perc ) %>%
spread(key = 'clade_name', value = 'perc', fill = 0) %>%
column_to_rownames('sampleid')
dist_ <- vegdist(cts_fil, method = 'bray')
eigen <- cmdscale(dist_, eig = T)$eig
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
beta_df <- bc %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
full_join(pheno)
beta_df %>%
ggscatter(x = 'V1', y = 'V2', color =  'grp', palette = 'lancet',alpha = 1, label = 'sampleid') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
beta_df %>%
ggscatter(x = 'V1', y = 'V2', color =  'grp', palette = 'lancet',alpha = 1, label = 'sampleid') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# some DE method try Maslin first
if(!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Maaslin2")
library(Maaslin2)
View(spp)
spp
library(Maaslin2)
library(Maaslin2)
spp_cts
View(spp)
spp_cts <- spp %>%
filter(clade_name %in% keep_spp)
View(spp_cts)
spp_cts <- spp %>%
filter(clade_name %in% keep_spp) %>%
select(sampleid, clade_name,perc ) %>%
spread(key = 'clade_name', value = 'perc', fill = 0)
spp_cts <- spp %>%
filter(clade_name %in% keep_spp) %>%
select(sampleid, clade_name,perc ) %>%
spread(key = 'clade_name', value = 'perc', fill = 0) %>%
column_to_rownames('sampleid')
View(pheno)
pheno
fit_data <- Maaslin2(
input_data = spp_cts,
input_metadata = pheno,
normalization = "NONE",
output = "output",
fixed_effects = c("grp"),
reference = c("grp,BM"))
pheno
fit_data <- Maaslin2(
input_data = spp_cts,
input_metadata = pheno %>% column_to_rownames('sampleid'),
normalization = "NONE",
output = "output",
fixed_effects = c("grp"),
reference = c("grp,BM"))
spp %>%
filter(clade_name %in% keep_spp)
spp_cts <- spp %>%
filter(clade_name %in% keep_spp) %>%
mutate(gspp = str_extract(clade_name, 'g__.+$'))
spp_cts <- spp %>%
filter(clade_name %in% keep_spp) %>%
mutate(gspp = str_extract(clade_name, 'g__.+$')) %>%
select(sampleid, gspp,perc ) %>%
spread(key = 'gspp', value = 'perc', fill = 0) %>%
column_to_rownames('sampleid')
library(Maaslin2)
spp_cts <- spp %>%
filter(clade_name %in% keep_spp) %>%
mutate(gspp = str_extract(clade_name, 'g__.+$')) %>%
select(sampleid, gspp,perc ) %>%
spread(key = 'gspp', value = 'perc', fill = 0) %>%
column_to_rownames('sampleid')
fit_data <- Maaslin2(
input_data = spp_cts,
input_metadata = pheno %>% column_to_rownames('sampleid'),
normalization = "NONE",
output = "../data/output",
fixed_effects = c("grp"),
reference = c("grp,BM"))
?Maaslin2
# looking at the results from Maaslin2
res <- read_tsv('../data/output/significant_results.tsv')
View(res)
# looking at the results from Maaslin2
res <- read_tsv('../data/output/significant_results.tsv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
