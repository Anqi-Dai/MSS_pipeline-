filter(str_detect(Food_code, '^6')) %>%
mutate(L3_grp = str_sub(Food_code, start = 1, end = 3)) %>%
group_by(mrn, fdrt, L3_grp) %>%
summarise(l3_total = sum(dehydrated_weight))
mean_p2d_l3_fruit_diet <-  function(mrn_, p1d_, p2d_){
df = dtbn_fruit_l3 %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(L3_grp) %>%
summarise(ave_l3 = sum(l3_total)/2)
return(df)
}
mean_p2d_l3_fruit_df <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_l3_fruit_diet(mrn, p1d, p2d)
}) %>%
set_names(stb %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
View(mean_p2d_l3_fruit_df)
fruit3 <- read_tsv('../data/source/NodeLabelsMCT.txt', col_types = 'cc')  %>%
filter(str_detect(Level.code, '^6')) %>%
filter(str_length(Level.code) == 3)
View(fruit3)
fruit3
each_l3 <- mean_p2d_l3_fruit_df %>%
left_join(fruit3 %>% rename(L3_grp = Level.code), by  = 'L3_grp')
View(each_l3)
each_l3 <- mean_p2d_l3_fruit_df %>%
left_join(fruit3 %>% rename(L3_grp = Level.code), by  = 'L3_grp') %>%
select(-L3_grp )
each_l3
each_l3 <- mean_p2d_l3_fruit_df %>%
left_join(fruit3 %>% rename(L3_grp = Level.code), by  = 'L3_grp') %>%
select(-L3_grp ) %>%
spread('Main.food.description', 'ave_l3', fill = 0) %>%
right_join(meta, by = "sampleid") %>%
mutate(pid = str_glue('P{as.numeric(as.factor(mrn))}')) %>%
select(-mrn)
View(each_l3)
each_l3 %>% write_csv('../data/036_all_samples_meta_p2d_each_fruit_L3_level.csv')
View(each_fruit_code)
each_fruit_code %>% write_csv('../data/036_each_fruit_food_code_description.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(lubridate)
new_all <- read_csv('../data/127_new_pt.csv')
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
# clean some entries in the new_all table
new <- new_all %>%
filter(!str_detect(Food_NSC, '^\\*\\*\\*\\*\\*\\*\\*'))  %>%
mutate(Food_NSC = str_replace(Food_NSC, '^\\^','')) %>%
left_join(dtb %>%
distinct(Food_NSC, Food_code, description)) %>%
relocate(Food_code, .after = Food_NSC) %>%
relocate(description, .after = Food_code)
# the ones that I don't have a food code of
nocode <- new %>%
filter(is.na(Food_code)) %>%
distinct(Food_NSC, Food_code)
nocode %>% write_csv('../data/128_new_pt_no_food_code.csv')
dtb %>%
distinct(Food_NSC, Food_code,description ) %>%
arrange(Food_NSC) %>%
write_csv('../data/128_food_code_identified_in_97_patients.csv')
no <- new %>%
filter(! Food_NSC %in% dtb$Food_NSC) %>%
distinct(Food_NSC) %>%
arrange(Food_NSC)
no %>% write_csv('../data/128_no_foodnsc.csv')
# join with the table that Peter sent me
eaten <- read_csv('../data/eaten_FNDDS.csv') %>%
rename(Food_NSC = item1_value_raw_raw)
length(intersect(eaten$Food_NSC, no$Food_NSC))
have <- dtb %>%
distinct(Food_NSC)
new %>%
write_csv('../data/128_new_76_patients_data_all.csv')
new <- read_csv('../data/128_new_76_patients_data_all.csv')
questions <- new %>%
filter(is.na(Calories_kcal) | Calories_kcal > 920)
questions %>% write_csv('../data/128_data_either_NA_or_calories_off.csv')
questions_ <- questions %>%
select(-Food_code, -description) %>%
select(-Meal) %>%
relocate(Por_eaten, .after = Food_NSC) %>%
relocate(Unit, .after = Por_eaten)  %>%
arrange(Calories_kcal, desc(Food_NSC))
# see the missing data in the diet values
# first of all, what food_nsc are new
library(ggvenn)
res_list <- list(new = unique(new$Food_NSC),
dtb = unique(dtb$Food_NSC))
ggvenn(res_list, show_percentage = F)
# the two batch MRNs
total <- bind_rows(
dtb %>%
distinct(mrn) %>%
mutate(batch = 'batch1'),
new %>%
distinct(mrn) %>%
mutate(batch = 'batch2')
)
total %>% write_csv('../data/128_nutrition_patients_two_batches.csv')
# the NAs and the calories off ones that have been fixed by Peter
fixed <- read_csv('../data/128_data_either_NA_or_calories_off_peter.csv') %>%
filter(!is.na(Food_code) & !is.na(Calories_kcal))
all <- read_csv('../data/128_new_76_patients_all_peter.csv')
splits <- all %>%
split(is.na(.$Calories_kcal) | .$Calories_kcal > 920)
all1 <- bind_rows(
splits %>% pluck('FALSE'),
fixed
)
fixcode <- read_csv('../data/128_new_pt_no_food_code_peter.csv')
# to see if Peter removed all of the no code items in the dtb
nofix <- fixcode %>% filter(is.na(Food_code)) %>% pull(Food_NSC)
length(intersect(nofix, all1$Food_NSC))
# really no code? is it correct especially for the Sauce, Buffalo and BLT - Bacon, Lettuce, Tomato?
no_code_really <- intersect(nofix, all1$Food_NSC)
# merge the food code back to the table
fixedcode <- fixcode %>%
filter(!is.na(Food_code))
split2 <- all1 %>%
split(is.na(.$Food_code))
added <- split2 %>%
pluck('TRUE') %>%
select(-Food_code, -description) %>%
inner_join(fixedcode, by  ='Food_NSC') %>%
relocate(Food_code, .after = Food_NSC) %>%
relocate(description, .after = Food_code)
all2 <- bind_rows(
split2 %>% pluck('FALSE'),
added
)
# change the date to fdrt
ptb <- read_csv('../data/129_new_76_full_patient_info.csv')
all3 <- all2 %>%
left_join(ptb %>% select(mrn,hct )) %>%
mutate(date = mdy(date)) %>%
mutate(fdrt = date -hct ) %>%
mutate(fdrt = as.numeric(fdrt)) %>%
select(-hct, -date) %>%
relocate(Por_eaten, .before = 'Calories_kcal') %>%
relocate(Unit, .after = 'Por_eaten') %>%
relocate(description, .after = 'fdrt') %>%
relocate(Meal, .after = 'description')
# look at the current diet data I have
total_records <- nrow(all3)
all3 %>%
gghistogram(x = 'fdrt', xlab = 'Day relative to transplant', color = 'white', fill = 'blue',
title = str_glue('Total of {total_records} diet entries'))
ggsave('../data/128_total_dtb.png', height  = 4)
# look at the meals
total_meals <- all3 %>%
distinct(mrn, Meal, fdrt) %>% nrow()
diet_hist <- all3 %>%
distinct(mrn, Meal, fdrt) %>%
gghistogram(x = 'fdrt', xlab = 'Day relative to transplant', ylab = 'Count', color = 'white', fill = 'red',
title = str_glue('Total of {total_meals} meals'))
ggsave('../data/128_total_meals.png', height  = 4)
all3 %>%
summary()
# now need to fix the NAs in the values
# and also the crazy values
# correcting the NA values in protein
split3 <- all3 %>%
split(is.na(.$Protein_g))
split3_correct <- split3 %>% pluck('TRUE') %>%
mutate(Protein_g = if_else(Por_eaten == 2, 0.20, 0.1)) %>%
mutate(Fibers_g = Protein_g)
# merge it back to the df
all4 <- bind_rows(
split3_correct,
split3 %>% pluck('FALSE')
)
colnames(all4)
View(all4)
View(all4)
all4 %>%
summary()
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
View(dtb)
# I spotted check the highest fat ones and here are the two that are obviously wrong
two <- dtb %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz'))
View(two)
# I spotted check the highest fat ones and here are the two that are obviously wrong
two <- dtb %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
filter(Por_eaten == 1)
two <- dtb %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz'))
# I spotted check the highest fat ones and here are the two that are obviously wrong
two <- dtb %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
arrange(Food_NSC, desc(Por_eaten))
# I spotted check the highest fat ones and here are the two that are obviously wrong
two <- dtb %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
arrange(Food_NSC, desc(Por_eaten)) %>%
distinct(Food_NSC, Por_eaten, Unit, Fat_g)
two
# I spotted check the highest fat ones and here are the two that are obviously wrong
two <- dtb %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
arrange(Food_NSC, desc(Por_eaten)) %>%
distinct(Food_NSC, Por_eaten, Unit, Fat_g) %>%
add_row(tibble_row(Food_NSC = '2017 Dressing, Creamy Italian (.5)', Unit = 'pkt', Por_eaten = 1, Fat_g = 10))
two
18.181818*0.75
# I spotted check the highest fat ones and here are the two that are obviously wrong
two <- dtb %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
arrange(Food_NSC, desc(Por_eaten)) %>%
distinct(Food_NSC, Por_eaten, Unit, Fat_g) %>%
add_row(tibble_row(Food_NSC = '2017 Dressing, Creamy Italian (.5)', Unit = 'pkt', Por_eaten = 1, Fat_g = 10))%>%
add_row(tibble_row(Food_NSC = '2017 Milkshake, Oreo (3) 11 oz', Unit = 'serv', Por_eaten = 0.75, Fat_g = 13.64))
# correct the entries with these two items
correct2 <- all4 %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz'))
View(correct2)
# correct the entries with these two items
correct2 <- all4 %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
select(-Fat_g)
two
# correct the entries with these two items
correct2 <- all4 %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
select(-Fat_g) %>%
inner_join(two)
two
two
# correct the entries with these two items
correct2 <- all4 %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
select(-Fat_g) %>%
inner_join(two)
# correct the entries with these two items
correct2 <- all4 %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
select(-Fat_g) %>%
inner_join(two, by = c("Food_NSC", "Por_eaten", "Unit"))
remaining4 <- all4 %>%
filter(!Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz'))
23+17846
all4 %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
select(-Fat_g)
# correct the entries with these two items
correct2 <- all4 %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
select(-Fat_g) %>%
left_join(two, by = c("Food_NSC", "Por_eaten", "Unit"))
18.181818*0.75
# I spotted check the highest fat ones and here are the two that are obviously wrong
two <- dtb %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
arrange(Food_NSC, desc(Por_eaten)) %>%
distinct(Food_NSC, Por_eaten, Unit, Fat_g) %>%
add_row(tibble_row(Food_NSC = '2017 Dressing, Creamy Italian (.5)', Unit = 'pkt', Por_eaten = 1, Fat_g = 10))%>%
add_row(tibble_row(Food_NSC = '2017 Milkshake, Oreo (3) 11 oz', Unit = 'each', Por_eaten = 0.75, Fat_g = 13.64))%>%
add_row(tibble_row(Food_NSC = '2017 Milkshake, Oreo (3) 11 oz', Unit = 'each', Por_eaten = 1, Fat_g = 18.181818))
correct2 <- all4 %>%
filter(Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz')) %>%
select(-Fat_g) %>%
left_join(two, by = c("Food_NSC", "Por_eaten", "Unit"))
remaining4 <- all4 %>%
filter(!Food_NSC %in% c('2017 Dressing, Creamy Italian (.5)','2017 Milkshake, Oreo (3) 11 oz'))
25+17846
View(remaining4)
all5 <- bind_rows(
remaining4,
correct2 %>% select(colnames(remaining4))
)
View(all5)
all5 %>%
summary()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
all5 %>% write_csv('../data/128_new_dtb.csv')
library(ggpubr)
View(all5)
newd <- read_csv('../data/128_new_dtb.csv')
View(newd)
newd
View(newd)
newd %>% summary
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g))
engy <- readxl::read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g))
View(engy)
engy
View(engy)
newd <- read_csv('../data/128_new_dtb.csv') %>% mutate(Food_code = as.character(Food_code))
newd %>% summary
new1 <- read_csv('../data/128_new_dtb.csv') %>% mutate(Food_code = as.character(Food_code))
new2 <- new1 %>%
left_join(engy, by  = 'Food_code')
View(new2)
View(new2)
new1 %>% summary
new2 <- new1 %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
View(new2)
0e+00
View(new2)
View(new2)
View(new2)
View(new2)
View(new2)
900*0.25
new2 %>% summary
# sanity check
check2 <- new2 %>%
select(Food_NSC, Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight)
View(check2)
new2 %>% summary
# sanity check
check2 <- new2 %>%
select(Food_NSC, Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30)
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code, Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30)
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code, Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30)
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code, Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten)
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code, Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Por_eaten,Unit, .keep_all = T )
View(check2)
check2 <- new2 %>%
select(Food_NSC, Food_code, Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten)
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code, Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Por_eaten,Unit, .keep_all = T )
View(check2)
434*0.12
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Por_eaten,Unit, .keep_all = T )
View(check2)
View(check2)
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, .keep_all = T )
View(check2)
View(new2)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
View(dtb)
dtb %>% summary()
check1 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, .keep_all = T )
View(check1)
check1 <- dtb %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, .keep_all = T )
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
dtb %>% summary()
check1 <- dtb %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, .keep_all = T )
View(check1)
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten)
View(check2)
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Unit, .keep_all = T )
View(check2)
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Unit, .keep_all = T )
View(check2)
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Unit, .keep_all = T ) %>%
arrange(desc(Water_g))
View(check2)
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Unit, .keep_all = T ) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal)
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Unit, .keep_all = T ) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal)
# find the both batches dehy wight > 30 and water portion > 75 ones
check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')%>% mutate(Food_code = as.character(Food_code))
# find the both batches dehy wight > 30 and water portion > 75 ones
check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
View(check1)
View(check1)
check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal, Energy_kcal: dehydrated_weight)
check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal, Energy_kcal: dehydrated_weight)
View(check1)
check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
View(check1)
check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  dehydrated_weight:total_weight)
View(check1)
check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  dehydrated_weight:total_weight) %>%
filter(dehydrated_weight > 30& Water_g > 75)
View(check1)
# find the both batches dehy wight > 30 and water portion > 75 ones
check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  dehydrated_weight:total_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten)  %>%
distinct(Food_NSC, Unit, .keep_all = T ) %>%
arrange(desc(Water_g))
View(check1)
# find the both batches dehy wight > 30 and water portion > 75 ones
check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  dehydrated_weight:total_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten)  %>%
distinct(Food_NSC, Unit, .keep_all = T ) %>%
arrange(desc(Water_g)) %>%
select(colnames(check2))
View(check1)
check1 %>% write_csv('../data/136_check_1_batch_cal.csv')
check2 %>% write_csv('../data/136_check_2_batch_cal.csv')
