entero_res <- post_res %>%
select(starts_with('b_')) %>%
gather('item','coeff') %>%
#mutate(grp = if_else(str_detect(item, ':'), 'interaction','single')) %>%
ggplot(aes(x = coeff, y = item, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95)) + stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
#facet_wrap(genus~ grp, scales = 'free') +
labs(x = ' change per 100g of food',
y = '',
title = 'genus') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c( "#00BFC4", "#F8766D")) +
scale_fill_manual(values = c( "#00BFC4", "#F8766D")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../data/171_interaction_model_enterococcus.pdf', width = 8, height = 8)
knitr::opts_chunk$set(echo = TRUE)
# interaction results visualization
post_res <-  read_csv('../data/090_model_alpha_macro_fat_post_interaction.csv')
# interaction results visualization
post_res <-  read_csv('../data/090_model_alpha_macro_fat_post_interaction.csv')
# interaction results visualization
post_res <-  read_csv('../data/090_model_alpha_macro_fat_post_interaction.csv')
# interaction results visualization
post_res <-  read_csv('../data/090_model_alpha_macro_fat_post_interaction.csv')
# interaction results visualization
post_res <-  read_csv('../data/090_model_alpha_macro_fat_post_interaction.csv')
# interaction results visualization
post_res <-  read_csv('../data/090_model_alpha_macro_fat_post_interaction.csv')
post_res %>%
select(starts_with('b_')) %>%
gather('item','coeff') %>%
mutate(grp = if_else(str_detect(item, ':'), 'interaction','single')) %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
#facet_wrap(~ grp, scales = 'free') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../data/090_diversity_interaction_macronutrients.pdf', width = 8, height = 8)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
library(ggridges)
library(brmstools)
options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
library(ggridges)
library(brmstools)
options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
post <- read_csv('../data/171_genus6_foodgroup_model_post_extra_few_interaction.csv')
post <- read_csv('../data/171_genus6_foodgroup_model_post_extra_few_interaction.csv')
colnames(post)
post %>%
select(genus, starts_with('b_')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
mutate(grp = if_else(str_detect(item, ':'), 'interaction','single')) %>%
ggplot(aes(x = coeff, y = item, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95)) + stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(genus~ grp, scales = 'free') +
labs(x = ' change per 100g of food',
y = '',
title = 'genus') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c( "#00BFC4", "#F8766D")) +
scale_fill_manual(values = c( "#00BFC4", "#F8766D")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../data/171_interaction_model_genus6.pdf', width =8, height = 8)
ggsave('../data/171_interaction_model_genus6.pdf', width =23, height = 19)
ggsave('../data/171_interaction_model_genus6.pdf', width =23, height = 19)
post_res <-   read_csv('../data/171_entero_model_fg_post_interaction.csv')
entero_res <- post_res %>%
select(starts_with('b_')) %>%
gather('item','coeff') %>%
#mutate(grp = if_else(str_detect(item, ':'), 'interaction','single')) %>%
ggplot(aes(x = coeff, y = item, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95)) + stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
#facet_wrap(genus~ grp, scales = 'free') +
labs(x = ' change per 100g of food',
y = '',
title = 'genus') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c( "#00BFC4", "#F8766D")) +
scale_fill_manual(values = c( "#00BFC4", "#F8766D")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../data/171_interaction_model_enterococcus.pdf', width = 8, height = 8)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
library(ggridges)
library(brmstools)
options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
meta <- read_csv('../data/153_combined_META.csv')
library(vdbR)
connect_database('~/dbConfig.txt')
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
library(ggridges)
library(brmstools)
options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
meta <- read_csv('../data/153_combined_META.csv')
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('asv_annotation_blast_ag')
cts <- get_counts_subset(meta$sampleid)
cts_ <- cts %>%
select(asv_key, sampleid, count)
annot <- asv_annotation_blast_ag %>%
filter(asv_key %in% cts_$asv_key)
cts_all <- cts_ %>%
left_join(annot %>%  select(asv_key, genus), by  = 'asv_key') %>%
group_by(sampleid, genus) %>%
summarise(cnt = sum(count)) %>%
spread('sampleid', 'cnt', fill = 0) %>%
filter(!is.na(genus)) %>%
column_to_rownames('genus')
clr_res <- clr(cts_all + 0.5) %>%
as.data.frame()  %>%
rownames_to_column('genus') %>%
gather('sampleid','clr', names(.)[2]:names(.)[ncol(.)])
library(compositions)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
library(ggridges)
library(brmstools)
library(compositions)
options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
clr_res <- clr(cts_all + 0.5) %>%
as.data.frame()  %>%
rownames_to_column('genus') %>%
gather('sampleid','clr', names(.)[2]:names(.)[ncol(.)])
meta <- read_csv('../data/153_combined_META.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100) %>%
mutate(abx = if_else(empirical == 'TRUE', 1, 0),
TPN = if_else(TPN == 'TRUE', 1, 0),
EN = if_else(EN == 'TRUE', 1, 0)) %>%
mutate(      fg_fruit_e= fg_fruit*abx,
fg_meat_e=fg_meat*abx,
fg_milk_e=fg_milk*abx,
fg_oils_e=fg_oils*abx,
fg_egg_e=fg_egg*abx,
fg_grain_e=fg_grain*abx,
fg_sweets_e=fg_sweets*abx,
fg_legume_e=fg_legume*abx,
fg_veggie_e = fg_veggie*abx)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
library(ggridges)
library(brmstools)
library(compositions)
options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
clr_res <- clr(cts_all + 0.5) %>%
as.data.frame()  %>%
rownames_to_column('genus') %>%
gather('sampleid','clr', names(.)[2]:names(.)[ncol(.)])
meta <- read_csv('../data/153_combined_META.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100) %>%
mutate(abx = if_else(empirical == 'TRUE', 1, 0),
TPN = if_else(TPN == 'TRUE', 1, 0),
EN = if_else(EN == 'TRUE', 1, 0)) %>%
mutate(      fg_fruit_e= fg_fruit*abx,
fg_meat_e=fg_meat*abx,
fg_milk_e=fg_milk*abx,
fg_oils_e=fg_oils*abx,
fg_egg_e=fg_egg*abx,
fg_grain_e=fg_grain*abx,
fg_sweets_e=fg_sweets*abx,
fg_legume_e=fg_legume*abx,
fg_veggie_e = fg_veggie*abx)
# I need to see the distribution of the actual genus transformed counts
few <- read_csv('../data/087_extra_6_genus_name.csv')
clr_few <- clr_res %>% filter(genus %in% few$genus) %>%
spread('genus','clr')
clr_few <- clr_res %>% filter(genus %in% c('Enterococcus')) %>%
spread('genus','clr')
extra_full <- meta %>%
inner_join(clr_few)
meta <- read_csv('../data/153_combined_META.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100) %>%
mutate(abx = if_else(empirical == 'TRUE', 1, 0),
TPN = if_else(TPN == 'TRUE', 1, 0),
EN = if_else(EN == 'TRUE', 1, 0)) %>%
mutate(      fg_fruit_e= fg_fruit*abx,
fg_meat_e=fg_meat*abx,
fg_milk_e=fg_milk*abx,
fg_oils_e=fg_oils*abx,
fg_egg_e=fg_egg*abx,
fg_grain_e=fg_grain*abx,
fg_sweets_e=fg_sweets*abx,
fg_legume_e=fg_legume*abx,
fg_veggie_e = fg_veggie*abx)
clr_res <- clr(cts_all + 0.5) %>%
as.data.frame()  %>%
rownames_to_column('genus') %>%
gather('sampleid','clr', names(.)[2]:names(.)[ncol(.)])
clr_res <- clr(cts_all + 0.5) %>%
as.data.frame()  %>%
rownames_to_column('genus') %>%
gather('sampleid','clr', names(.)[2]:names(.)[ncol(.)])
# I need to see the distribution of the actual genus transformed counts
few <- read_csv('../data/087_extra_6_genus_name.csv')
meta <- read_csv('../data/153_combined_META.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100) %>%
mutate(abx = if_else(empirical == 'TRUE', 1, 0),
TPN = if_else(TPN == 'TRUE', 1, 0),
EN = if_else(EN == 'TRUE', 1, 0)) %>%
mutate(      fg_fruit_e= fg_fruit*abx,
fg_meat_e=fg_meat*abx,
fg_milk_e=fg_milk*abx,
fg_oils_e=fg_oils*abx,
fg_egg_e=fg_egg*abx,
fg_grain_e=fg_grain*abx,
fg_sweets_e=fg_sweets*abx,
fg_legume_e=fg_legume*abx,
fg_veggie_e = fg_veggie*abx)
meta <- read_csv('../data/153_combined_META.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100) %>%
mutate(abx = if_else(empirical == 'TRUE', 1, 0),
TPN = if_else(TPN == 'TRUE', 1, 0),
EN = if_else(EN == 'TRUE', 1, 0)) %>%
mutate(      fg_fruit_e= fg_fruit*abx,
fg_meat_e=fg_meat*abx,
fg_milk_e=fg_milk*abx,
fg_oils_e=fg_oils*abx,
fg_egg_e=fg_egg*abx,
fg_grain_e=fg_grain*abx,
fg_sweets_e=fg_sweets*abx,
fg_legume_e=fg_legume*abx,
fg_veggie_e = fg_veggie*abx)
clr_few <- clr_res %>% filter(genus %in% c('Enterococcus')) %>%
spread('genus','clr')
extra_full <- meta %>%
inner_join(clr_few)
extra_full <- meta %>%
inner_join(clr_few)
extra_full <- meta %>%
inner_join(clr_few)
extra_full <- meta %>%
inner_join(clr_few)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# interaction terms
prior(normal(0, 1), class = 'b', coef = "fg_egg_e"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit_e"),
prior(normal(0, 1), class = 'b', coef = "fg_grain_e"),
prior(normal(0, 1), class = 'b', coef = "fg_legume_e"),
prior(normal(0, 1), class = 'b', coef = "fg_meat_e"),
prior(normal(0, 1), class = 'b', coef = "fg_milk_e"),
prior(normal(0, 1), class = 'b', coef = "fg_oils_e"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets_e"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie_e"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPN"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "EN"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "abx")
# for the intensity
# prior(normal(-3, 1), class = 'b', coef = "intensityablative"),
# prior(normal(-3, 1), class = 'b', coef = "intensityreduced"),
# prior(normal(-3, 1), class = 'b', coef = "intensitynonablative")
)
mod_entero =  brm(Enterococcus ~ 0 +
intensity+
fg_fruit_e+
fg_meat_e+
fg_milk_e+
fg_oils_e+
fg_egg_e+
fg_grain_e+
fg_sweets_e+
fg_legume_e+
fg_veggie_e+
abx+
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
TPN+
EN+
(1 | mrn) +
(1 | timebin),
data = extra_full,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 456)
# save it for future use
post_res <- suppressWarnings(posterior_samples(mod_entero))
post_res %>%  write_csv('../data/171_entero_model_fg_post_interaction.csv')
post_res <-   read_csv('../data/171_entero_model_fg_post_interaction.csv')
entero_res <- post_res %>%
select(starts_with('b_')) %>%
gather('item','coeff') %>%
#mutate(grp = if_else(str_detect(item, ':'), 'interaction','single')) %>%
ggplot(aes(x = coeff, y = item, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95)) + stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
#facet_wrap(genus~ grp, scales = 'free') +
labs(x = ' change per 100g of food',
y = '',
title = 'genus') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c( "#00BFC4", "#F8766D")) +
scale_fill_manual(values = c( "#00BFC4", "#F8766D")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../data/171_interaction_model_enterococcus.pdf', width = 8, height = 8)
post_res <-   read_csv('../data/171_entero_model_fg_post_interaction.csv')
entero_res <- post_res %>%
select(starts_with('b_')) %>%
gather('item','coeff') %>%
#mutate(grp = if_else(str_detect(item, ':'), 'interaction','single')) %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) + stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
#facet_wrap(genus~ grp, scales = 'free') +
labs(x = ' change per 100g of food',
y = '',
title = 'genus') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../data/171_interaction_model_enterococcus.pdf', width = 8, height = 8)
post_res <-   read_csv('../data/171_entero_model_fg_post_interaction.csv')
View(priors)
View(post_res)
post_res %>% select(b_fg_sweets_e)
# dear god why is it not red!!
post_res %>% select(b_fg_sweets_e) %>%
count(b_fg_sweets_e >= 0)
# dear god why is it not red!!
post_res %>% select(b_fg_sweets_e) %>%
count(b_fg_sweets_e >= 0) %>%
count(perc = n/4000*100)
# dear god why is it not red!!
post_res %>% select(b_fg_sweets_e) %>%
count(b_fg_sweets_e >= 0) %>%
mutate(perc = n/4000*100)
post_res <-   read_csv('../data/171_entero_model_fg_post_interaction.csv')
entero_res <- post_res %>%
select(starts_with('b_')) %>%
gather('item','coeff') %>%
#mutate(grp = if_else(str_detect(item, ':'), 'interaction','single')) %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
#stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
#facet_wrap(genus~ grp, scales = 'free') +
labs(x = ' change per 100g of food',
y = '',
title = 'genus') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../data/171_interaction_model_enterococcus.pdf', width = 8, height = 8)
?stat_pointinterval
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
res <- read_csv('../data/172_spearman_all.csv')
View(res)
res <- read_csv('../data/172_spearman_all.csv')
