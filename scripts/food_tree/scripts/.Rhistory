mutate(beyond_engraftment = discharge_day - ttancday) %>%
relocate(ttancday, .after = 'HCT') %>%
relocate(beyond_engraftment, .after = 'ttancday') %>%
select(-HCT) %>%
mutate(discharge_date_for_nutrition = if_else(discharge_date == '2017-02-04', '2017-02-06', as.character(discharge_date))) %>%
relocate(discharge_date_for_nutrition, .after = 'hct') %>%
relocate(ANEUT_500_DATE, .after = 'discharge_date_for_nutrition') %>%
mutate(discharge_date_for_nutrition = ymd(discharge_date_for_nutrition),
leng_of_stay = as.numeric(discharge_date_for_nutrition - admit_date)) %>%
relocate(leng_of_stay, .after = 'ANEUT_500_DATE') %>%
mutate(beyond_engraftment = as.numeric(discharge_date_for_nutrition -ANEUT_500_DATE )) %>%
relocate(beyond_engraftment, .after = 'leng_of_stay')
transplant_stays %>%
write_csv('../data/156_transplant_data.csv')
View(ptb2)
View(allpred)
knitr::opts_chunk$set(echo = TRUE)
psmoothie <- readxl::read_excel('../data/142b_batch1_diet_calories_check_subset_with_macros_peter.xlsx') %>% distinct()
library(tidyverse)
psmoothie <- readxl::read_excel('../data/142b_batch1_diet_calories_check_subset_with_macros_peter.xlsx') %>% distinct()
View(psmoothie)
unit <- read_csv('../data/148_both_batches_UNIT_table_EN_exclu.csv')
View(unit)
length(intersect(psmoothie$Food_NSC, unit$Food_NSC))
View(psmoothie)
psmoothie %>% distinct(Food_NSC)
psmoothie %>% distinct(Food_NSC)
length(intersect(psmoothie$Food_NSC, unit$Food_NSC))
psmoothie %>% distinct(Food_NSC)
length(intersect(psmoothie$Food_NSC, unit$Food_NSC))
knitr::opts_chunk$set(echo = TRUE)
unit <- read_csv('../data/148_both_batches_UNIT_table_EN_exclu.csv')
unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
distinct(protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
select(Food_NSC:description, ends_with('per_g'))
df <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
distinct(protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
select(Food_NSC:description, ends_with('per_g'))
View(df)
unit <- read_csv('../data/148_both_batches_UNIT_table_EN_exclu.csv')
unit <- read_csv('../data/148_both_batches_UNIT_table_EN_exclu.csv')
unit <- read_csv('../data/148_both_batches_UNIT_table_EN_exclu.csv')
View(unit)
unit <- read_csv('../data/148_both_batches_UNIT_table_EN_exclu.csv')
unit <- read_csv('../data/148_both_batches_UNIT_table_EN_exclu.csv')
View(unit)
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T)
# get the p2d ave of the cal and 5 macro
DTB <- read_csv('../data/152_combined_DTB.csv')
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T)
View(en_unit)
en_unit
colnames(en_unit)
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(protein_per_g = Protein_g/dehydrated_weight,
fat_per_g = Fat_g/dehydrated_weight,
Carbohydrate_per_g = Carbohydrates_g/dehydrated_weight,
Fiber_per_g = Fibers_g/dehydrated_weight,
Sugars_per_g = Sugars_g/dehydrated_weight)
colnames(en_unit)
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(protein_per_g = Protein_g/dehydrated_weight,
fat_per_g = Fat_g/dehydrated_weight,
Carbohydrate_per_g = Carbohydrates_g/dehydrated_weight,
Fiber_per_g = Fibers_g/dehydrated_weight,
Sugars_per_g = Sugars_g/dehydrated_weight) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(protein_per_g = Protein_g/dehydrated_weight,
fat_per_g = Fat_g/dehydrated_weight,
Carbohydrate_per_g = Carbohydrates_g/dehydrated_weight,
Fiber_per_g = Fibers_g/dehydrated_weight,
Sugars_per_g = Sugars_g/dehydrated_weight) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
add_count(Food_code)
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(protein_per_g = Protein_g/dehydrated_weight,
fat_per_g = Fat_g/dehydrated_weight,
Carbohydrate_per_g = Carbohydrates_g/dehydrated_weight,
Fiber_per_g = Fibers_g/dehydrated_weight,
Sugars_per_g = Sugars_g/dehydrated_weight) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
add_count(Food_code)
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(protein_per_g = Protein_g/dehydrated_weight,
fat_per_g = Fat_g/dehydrated_weight,
Carbohydrate_per_g = Carbohydrates_g/dehydrated_weight,
Fiber_per_g = Fibers_g/dehydrated_weight,
Sugars_per_g = Sugars_g/dehydrated_weight) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
add_count(Food_code)
en_unit %>%
split(.$Food_code)
eachcode %>% mutate(id = seq(nrow(eachcode)))
test <- en_unit %>%
split(.$Food_code) %>%
map_dfr(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
})
View(test)
test <- en_unit %>%
split(.$Food_code) %>%
map(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
})
test <- en_unit %>%
split(.$Food_code) %>%
map(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
})
View(test[["95107010"]])
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(protein_per_g = Protein_g/dehydrated_weight,
fat_per_g = Fat_g/dehydrated_weight,
Carbohydrate_per_g = Carbohydrates_g/dehydrated_weight,
Fiber_per_g = Fibers_g/dehydrated_weight,
Sugars_per_g = Sugars_g/dehydrated_weight) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
test <- en_unit %>%
split(.$Food_code) %>%
map(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
})
test <- en_unit %>%
split(.$Food_code) %>%
map_dfr(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
})
test <- en_unit %>%
split(.$Food_code) %>%
map_dfr(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
}) %>%
mutate(new_code = str_glue('{Food_code}_{id}'))
View(test)
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(protein_per_g = Protein_g/dehydrated_weight,
fat_per_g = Fat_g/dehydrated_weight,
Carbohydrate_per_g = Carbohydrates_g/dehydrated_weight,
Fiber_per_g = Fibers_g/dehydrated_weight,
Sugars_per_g = Sugars_g/dehydrated_weight) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))  %>%
split(.$Food_code) %>%
map_dfr(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
}) %>%
mutate(new_code = str_glue('{Food_code}_{id}')) %>%
select(-id)
psmoothie <- readxl::read_excel('../data/142b_batch1_diet_calories_check_subset_with_macros_peter.xlsx') %>% distinct()
psmoothie %>% distinct(Food_NSC)
psmoothie %>% distinct(Food_NSC) %>% nrow
unit <- read_csv('../data/148_both_batches_UNIT_table_EN_exclu.csv')
length(intersect(psmoothie$Food_NSC, unit$Food_NSC))
# which one is missing
setdiff(unit$Food_NSC, psmoothie$Food_NSC)
# which one is missing
setdiff(psmoothie$Food_NSC, unit$Food_NSC)
# which one is missing
setdiff(psmoothie$Food_NSC, unit$Food_NSC)
View(unit)
View(DTB)
View(psmoothie)
psmoothie
View(df)
smoocode <- psmoothie %>% distinct(Food_code) %>% pull(Food_code)
smoocode <- psmoothie %>% distinct(Food_code) %>% pull(Food_code)
nonsmoo <-  unit %>%
filter(! Food_code %in% smoocode)
View(nonsmoo)
nonsmoo <-  unit %>%
filter(! Food_code %in% smoocode) %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu)
nonsmoo <-  unit %>%
filter(! Food_code %in% smoocode) %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
#distinct(protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
select(Food_NSC:description, ends_with('per_g'))
View(en_unit)
nonsmoo <-  unit %>%
filter(! Food_code %in% smoocode) %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
#distinct(protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
nonsmoo <-  unit %>%
filter(! Food_code %in% smoocode) %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
#distinct(protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, .keep_all = T)
nonsmoo <-  unit %>%
filter(! Food_code %in% smoocode) %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, .keep_all = T)
smoodf <- unit %>%
filter( Food_code %in% smoocode)
View(smoodf)
nonsmoo <-  unit %>%
filter(! Food_code %in% smoocode) %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, .keep_all = T) %>%
split(.$Food_code) %>%
map_dfr(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
}) %>%
mutate(new_code = str_glue('{Food_code}_{id}')) %>%
select(-id)
View(nonsmoo)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T)
View(smoodf)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
disinct()
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
distinct()
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T)
View(psmoothie)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T)
View(smoodf)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
split(.$Food_code) %>%
map_dfr(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
}) %>%
mutate(new_code = str_glue('{Food_code}_{id}')) %>%
select(-id)
View(smoodf)
Will <- bind_rows(en_unit, smoodf, nonsmoo)
View(Will)
Will <- bind_rows(en_unit, smoodf, nonsmoo)
Will <- bind_rows(en_unit, smoodf, nonsmoo)
Will <- bind_rows(en_unit, smoodf, nonsmoo)
Will %>%
write_csv('../data/154_for_will_pergram_macronutrients_all.csv')
View(Will)
View(Will)
View(Will)
View(Will)
View(Will)
View(DTB)
View(DTB)
View(Will)
knitr::opts_chunk$set(echo = TRUE)
# convert to the newcode
smoothies <- DTB %>%
filter(Food_code %in% smoocode)
View(smoothies)
View(Will)
# convert to the newcode
smoothies <- DTB %>%
filter(Food_code %in% smoocode) %>%
left_join(Will %>% select(Food_NSC, Food_code, new_code))
# convert to the newcode
smoothies <- DTB %>%
filter(Food_code %in% smoocode) %>%
left_join(Will %>% select(Food_NSC, Food_code, new_code), by = c("Food_NSC", "Food_code"))
View(Will)
# need to have a new table with foodnsc foodcode -- new code
smooall <- unit %>%
filter( Food_code %in% smoocode) %>%
distinct(Food_NSC, Food_code)
Will %>%
filter(Food_code %in% smoocode) %>%
distinct(new_code)
View(smooall)
View(psmoothie)
View(psmoothie)
View(DTB)
View(psmoothie)
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu)
View(redo)
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu)
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu)
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
distinct(Food_code, protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T)
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
distinct(Food_code, protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T)
# but then there are 14 food codes that are in the diet table that don't appear in the macronutrients table
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
distinct(Food_code, protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
# but then there are 14 food codes that are in the diet table that don't appear in the macronutrients table
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
distinct(Food_code, protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
select( Food_code, description, ends_with('per_g'))
redo %>% distinct(Food_code) %>% nrow
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv')
View(p2d)
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather
p2d
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather %>%
filter(str_detect(key, '\\d'))
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather %>%
filter(str_detect(key, '^\\d'))
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather %>%
filter(str_detect(key, '^\\d')) %>%
distinct(key)
p2d
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather %>%
filter(str_detect(key, '^\\d')) %>%
distinct(key) %>%
mutate_(key = as.numeric(key))
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather %>%
filter(str_detect(key, '^\\d')) %>%
distinct(key) %>%
mutate(key = as.numeric(key))
redo
length(intersect(redo$Food_code, p2d$key))
setdiff(p2d$key, redo$Food_code)
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(protein_per_g = Protein_g/dehydrated_weight,
fat_per_g = Fat_g/dehydrated_weight,
Carbohydrate_per_g = Carbohydrates_g/dehydrated_weight,
Fiber_per_g = Fibers_g/dehydrated_weight,
Sugars_per_g = Sugars_g/dehydrated_weight) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))  %>%
split(.$Food_code) %>%
map_dfr(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
}) %>%
mutate(new_code = str_glue('{Food_code}_{id}')) %>%
select(-id)
View(en_unit)
extra <- en_unit %>%
select(colnames(redo))
View(extra)
redoall <- bind_rows(redo, extra)
View(redoall)
redoall %>% write_csv('../data/154_redo_macronutrients_table.csv')
