aspect.ratio=1)
})
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
library(tidyverse)
pt_line_size <- 0.2
alpha_val <- 1
point_size <- 0.5
diet_line_color <- '#E41A1C'
axis_text_size <- 3
axis_title_size <- 8
stool_line_color <- 'blue'
# the three datasets split to each patient
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
stool <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')%>%
split(.$mrn)
# scale the faith pd and the day cal by dividing by 1000 and then revert this to the original scale by the axis representation
day_calori <- dtb %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal))%>%
mutate(daycal = daycal/1000) %>%
split(.$mrn)
faith <- read_tsv('../data/cleaned_diet_data/FINAL_97_faith_pd/alpha-diversity.tsv') %>%
separate(...1, into = c('mrn', 'fdrt'), sep = 'd', convert = T)  %>%
mutate(mrn = as.numeric(str_replace(mrn, 'P',''))) %>%
mutate(faith_pd = faith_pd/1000) %>%
split(.$mrn)
# keep the patients that have stool data
mrns <- names(meta)
# the range of the value
# use the same y axis scale
range(read_tsv('../data/cleaned_diet_data/FINAL_97_faith_pd/alpha-diversity.tsv')$faith_pd)
range(stool$simpson_reciprocal)
# to put the stool data in the same dimension as the diet data use a scaling factor to bring them to same level when plotting the y but then show on the  y axis scale that they are different
scale_factor <- 20
every_pt_list <-  mrns %>%
set_names(mrns) %>%
map(function(.x) {
ggscatter(data =  day_calori[[.x]], x = 'fdrt', y = 'daycal', alpha = alpha_val, size = 0.5,
color = diet_line_color,
xlab = 'Day relative to HCT',
#title = str_glue('{.x}'),
ylab = ''
)  +
geom_line(data = day_calori[[.x]], aes(x = fdrt, y = daycal), linetype = 'solid', size = pt_line_size, col = diet_line_color) +
# the diet faith
geom_point(data = faith[[.x]], aes(x = fdrt, y = faith_pd), col = diet_line_color, size = point_size) +
geom_line(data = faith[[.x]], aes(x = fdrt, y = faith_pd), linetype = 'dashed', size = pt_line_size, col = diet_line_color) +
# the stool data
geom_point(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal/scale_factor), col = stool_line_color, size = point_size, shape = 'triangle') +
geom_line(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal/scale_factor), linetype = 'solid', size = pt_line_size, col = stool_line_color) +
scale_y_continuous(name = "Daily calories / Faith div\n(*10e3)", limits = c(0, 2.6),
sec.axis = sec_axis(~.*scale_factor, name = expression(Fecal~alpha~diversity))) +
labs(x = 'Day relative to HCT', y = '') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
axis.title.y = element_text(color = diet_line_color),
axis.title.y.right = element_text(color = stool_line_color),
aspect.ratio=1)
})
mrns
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
library(tidyverse)
pt_line_size <- 0.2
alpha_val <- 1
point_size <- 0.5
diet_line_color <- '#E41A1C'
axis_text_size <- 3
axis_title_size <- 8
stool_line_color <- 'blue'
# the three datasets split to each patient
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
stool <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')%>%
split(.$mrn)
# scale the faith pd and the day cal by dividing by 1000 and then revert this to the original scale by the axis representation
day_calori <- dtb %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal))%>%
mutate(daycal = daycal/1000) %>%
split(.$mrn)
faith <- read_tsv('../data/cleaned_diet_data/FINAL_97_faith_pd/alpha-diversity.tsv') %>%
separate(...1, into = c('mrn', 'fdrt'), sep = 'd', convert = T)  %>%
mutate(mrn = as.numeric(str_replace(mrn, 'P',''))) %>%
mutate(faith_pd = faith_pd/1000) %>%
split(.$mrn)
# keep the patients that have stool data
mrns <- names(meta)
# the range of the value
# use the same y axis scale
range(read_tsv('../data/cleaned_diet_data/FINAL_97_faith_pd/alpha-diversity.tsv')$faith_pd)
range(stool$simpson_reciprocal)
# to put the stool data in the same dimension as the diet data use a scaling factor to bring them to same level when plotting the y but then show on the  y axis scale that they are different
scale_factor <- 20
every_pt_list <-  mrns %>%
set_names(mrns) %>%
map(function(.x) {
ggscatter(data =  day_calori[[.x]], x = 'fdrt', y = 'daycal', alpha = alpha_val, size = 0.5,
color = diet_line_color,
xlab = 'Day relative to HCT',
#title = str_glue('{.x}'),
ylab = ''
)  +
geom_line(data = day_calori[[.x]], aes(x = fdrt, y = daycal), linetype = 'solid', size = pt_line_size, col = diet_line_color) +
# the diet faith
geom_point(data = faith[[.x]], aes(x = fdrt, y = faith_pd), col = diet_line_color, size = point_size) +
geom_line(data = faith[[.x]], aes(x = fdrt, y = faith_pd), linetype = 'dashed', size = pt_line_size, col = diet_line_color) +
# the stool data
geom_point(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal/scale_factor), col = stool_line_color, size = point_size, shape = 'triangle') +
geom_line(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal/scale_factor), linetype = 'solid', size = pt_line_size, col = stool_line_color) +
scale_y_continuous(name = "Daily calories / Faith div\n(*10e3)", limits = c(0, 2.6),
sec.axis = sec_axis(~.*scale_factor, name = expression(Fecal~alpha~diversity))) +
labs(x = 'Day relative to HCT', y = '') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
axis.title.y = element_text(color = diet_line_color),
axis.title.y.right = element_text(color = stool_line_color),
aspect.ratio=1)
})
?draw_image
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
p <- '../figs/paper/fig2_cartoon_of_model.svg'
diagram <- ggdraw() +
draw_image(p,   scale = 1)
diagram
p <- '../figs/paper/fig2_cartoon_of_model.eps'
diagram <- ggdraw() +
draw_image(p,   scale = 1)
diagram
p <- '../figs/paper/fig2_cartoon_of_model.pdf'
diagram <- ggdraw() +
draw_image(p,   scale = 1)
p <- '../figs/paper/fig2_cartoon_of_model.svg'
diagram <- ggdraw() +
draw_image(p,   scale = 3)
diagram
p <- '../figs/paper/fig2_cartoon_of_model.svg'
diagram <- ggdraw() +
draw_image(p,   scale = 2)
diagram
diagram
p <- '../figs/paper/fig2_cartoon_of_model.svg'
diagram <- ggdraw() +
draw_image(p,   scale = 1)
diagram
p <- '../figs/paper/fig2_cartoon_of_model.svg'
diagram <- ggdraw() +
draw_image(magick::image_read(p),   scale = 1)
diagram
p <- '../figs/paper/fig2_cartoon_of_model.pdf'
diagram <- ggdraw() +
draw_image(magick::image_read(p),   scale = 1)
p <- '../figs/paper/fig2_cartoon_of_model.eps'
diagram <- ggdraw() +
draw_image(magick::image_read(p),   scale = 1)
diagram
p <- '../figs/paper/fig2_cartoon_of_model.png'
diagram <- ggdraw() +
draw_image(magick::image_read(p),   scale = 1)
diagram
knitr::opts_chunk$set(echo = TRUE)
library(vegan)
library(tidyverse)
library(ggpubr)
# get the results from the snakemake pipeline that used the qiime2 methods
# the protest is a test for significance , but I care more about the sum of squares not a p value
fns_both <- tibble(
sfolder = list.files('../data/finalized/paired/pNday/', pattern = 'allstool_p.d_scts_stool_relab_species_braycurtis_pcoa$', full.names = T),
dfolder = list.files('../data/finalized/paired/pNday/', pattern = 'allstool_p.d_diet_foodID_dehydrated_weight_per_pt_unweighted_unifrac_pcoa$', full.names = T)
) %>%
mutate(ID = str_replace(sfolder, '_scts_stool_relab_species_braycurtis_pcoa', ''),
ID = str_replace(ID, '../data/finalized/paired/pNday//allstool_','')) %>%
mutate(sfn = str_glue('{sfolder}/ordination.txt'),
dfn = str_glue('{dfolder}/ordination.txt'))
procrustes_Nday <- map2_dfc(fns_both$dfn, fns_both$sfn, function(dfn, sfn){
dpcoa = read_tsv(dfn, skip = 9, col_names = F)  %>%
filter(! X1 %in% c('Biplot','Site constraints')) %>%
column_to_rownames('X1') %>%
as.matrix()
spcoa = read_tsv(sfn, skip = 9, col_names = F)  %>%
filter(! X1 %in% c('Biplot','Site constraints')) %>%
column_to_rownames('X1') %>%
as.matrix()
procrustes_res = procrustes(X = dpcoa, Y = spcoa)
return( procrustes_res$ss)
}) %>%
gather(key = 'pNd', value = 'ss') %>%
mutate(pNd = fns_both$ID)
# convert it to a score so that the p2d is the highest
procrustes_Nday_score <- procrustes_Nday %>%
mutate(score = min(.$ss) - ss)
# make the figure
axis_text_size <- 10
axis_title_size <- 10
procrustes_Nday_score %>%
mutate(pNd = str_extract(pNd, '\\d')) %>%
ggdotchart(x = 'pNd', y = 'score', sorting = 'none', ylab = 'Sum of squares',
xlab = 'Number of previous days\nof dietary intake', size = 1.3) +
geom_line(aes(x = pNd, y = score), group = 1, linetype = 'dashed', size = 0.3) +
theme(aspect.ratio=1,
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
axis.text.x = element_text(angle=0, hjust=0.5))
ggsave('../figs/paper/022_fig2_procrustes.eps',
width = 100,
height = 50,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps')
procrustes_Nday_score
procrustes_Nday_score %>%
write_csv('../data/022_procrustes_Nday_score.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
procrustes_dat <- read_csv('../data/022_procrustes_Nday_score.csv')
axis_text_size <- 10
axis_title_size <- 10
procrustes_dat <- read_csv('../data/022_procrustes_Nday_score.csv')
f2a <- procrustes_Nday_score %>%
mutate(pNd = str_extract(pNd, '\\d')) %>%
ggdotchart(x = 'pNd', y = 'score', sorting = 'none', ylab = 'Sum of squares',
xlab = 'Number of previous days\nof dietary intake', size = 1.3) +
geom_line(aes(x = pNd, y = score), group = 1, linetype = 'dashed', size = 0.3) +
theme(aspect.ratio=1,
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
axis.text.x = element_text(angle=0, hjust=0.5))
View(f2a)
f2a
axis_text_size <- 10
axis_title_size <- 10
f2a <- procrustes_Nday_score %>%
mutate(pNd = str_extract(pNd, '\\d')) %>%
ggdotchart(x = 'pNd', y = 'score', sorting = 'none', ylab = 'Sum of squares',
xlab = 'Number of previous days\nof dietary intake', size = 1.3) +
geom_line(aes(x = pNd, y = score), group = 1, linetype = 'dashed', size = 0.3) +
theme(aspect.ratio=1,
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
axis.text.x = element_text(angle=0, hjust=0.5))
f2a
main_post <- read_csv('../data/brms_model_var_res_updated.csv')
View(main_post)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccccc')
main_post <- read_csv('../data/brms_model_var_res_updated.csv')
post_coeff <- main_post %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
post_coeff <- main_post %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname))
View(post_coeff)
post_coeff <- main_post %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, value, .fun=median, .desc = F))
fg_labels <- levels(post_coeff$shortname)
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
title1 <- bquote(Outcome: log[e]~(Simpsons~reciprocal_diversity))
post_coeff %>%
ggplot(aes(x = coeff, y = shortname, col = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'High-level food categories\n(FNDDS)',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
main_post <- read_csv('../data/brms_model_var_res_updated.csv')
post_coeff <- main_post %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, value, .fun=median, .desc = F))
fg_labels <- levels(post_coeff$shortname)
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
title1 <- bquote(Outcome: log[e]~(Simpsons~reciprocal_diversity))
post_coeff %>%
ggplot(aes(x = value, y = shortname, col = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'High-level food categories\n(FNDDS)',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
f2c <- post_coeff %>%
ggplot(aes(x = value, y = shortname, col = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'High-level food categories\n(FNDDS)',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
knitr::opts_chunk$set(echo = TRUE, message = F)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
# the top 10 most consumed in fruits , sweets and veggie item
# total number of meals
n_meal <- dtb %>%
count(mrn, fdrt, Meal) %>%
nrow()
top3grp <- dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1,1)) %>%
filter(fgrp1 %in% c('9','6','7')) %>%
group_by(Food_code, description, fgrp1) %>%
summarise(total_per_code = sum(dehydrated_weight)) %>%
group_by(fgrp1) %>%
arrange(desc(total_per_code), .by_group = T)  %>%
top_n(10) %>%
left_join(key) %>%
ungroup() %>%
mutate(gram_per_meal = total_per_code/n_meal) %>%
mutate(fg1_full_name = case_when(
fgrp1 == '6' ~ 'Fruits',
fgrp1 == '7' ~ 'Vegetables',
fgrp1 == '9' ~ 'Sugars, Sweets & Beverages'
)) %>%
mutate(fg1_full_name = factor(fg1_full_name, levels = c('Fruits','Sugars, Sweets & Beverages', 'Vegetables')))
ggdotchart(top3grp, x = "description", y = "gram_per_meal",
xlab = 'Food item names',
ylab = 'Per meal average consumption (gram)',
group = "fg1_full_name", color = "fg1_full_name",
palette = c('#7D3C98','#db2589', '#229954'),
rotate = TRUE,
sorting = "descending",
ggtheme = theme_bw(),
y.text.col = TRUE ) +
theme(legend.position = 'right',
legend.title = element_blank())
ggsave('../figs/paper/068_top10_eaten_foods_of_679.pdf', width = 8, height = 5)
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100) %>%
mutate(inten_non = if_else(intensity == 'nonablative', 1, 0),
inten_ab = if_else(intensity == 'ablative', 1, 0),
inten_re = if_else(intensity == 'reduced', 1, 0))
colnames(meta)
# what priors I cann set
model_formular <- log(simpson_reciprocal)~ 1 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
prior(normal(2, 0.1), class = 'Intercept'))
# samples are drawn solely from the priors ignoring the likelihood
# model_wo_EN  means the usual model that the EN is still a binary variable and not ann inndivicual group
model_div <- brm( model_formular,
data = meta,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
# actually draw samples from the priors
samples_prior <- prior_draws(model_div)
# the mean food group intake from our data
ave_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean)) %>%
gather
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
max_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(max))
# create a df with max and min and ave in 9 groups
# create a df with the corresponding value that the samples prior coeff can multiply
max_ <- ave_fg %>%
rename(mean_ = value) %>%
mutate(max_fg_egg = if_else(key == 'fg_egg', max_fg$fg_egg, mean_),
max_fg_fruit = if_else(key == 'fg_fruit', max_fg$fg_fruit, mean_),
max_fg_grain = if_else(key == 'fg_grain', max_fg$fg_grain, mean_),
max_fg_legume = if_else(key == 'fg_legume', max_fg$fg_legume, mean_),
max_fg_meat = if_else(key == 'fg_meat', max_fg$fg_meat, mean_),
max_fg_milk = if_else(key == 'fg_milk', max_fg$fg_milk, mean_),
max_fg_oils = if_else(key == 'fg_oils', max_fg$fg_oils, mean_),
max_fg_sweets = if_else(key == 'fg_sweets', max_fg$fg_sweets, mean_),
max_fg_veggie = if_else(key == 'fg_veggie', max_fg$fg_veggie, mean_)) %>%
select(-mean_) %>%
mutate(key = if_else(str_detect(key, '^fg'), str_glue('b_{key}'), key))  %>%
arrange(key)
values <- max_ %>%
select(-key) %>%
as.list()
values <- values %>%
map(~ set_names(x = ., max_$key))
