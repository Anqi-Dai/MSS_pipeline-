rm_pt <- narcotic %>%
mutate(start_year = year(start_date)) %>%
filter(start_year == 2016) %>%
distinct(mrn) %>%
pull(mrn)
narcotic_early_dates <- narcotic %>%
filter(mrn != rm_pt) %>%
group_by(mrn) %>%
arrange(start_date, .by_group = T) %>%
slice(1) %>%
ungroup() %>%
select(-stop_date)
narcotic_stop_dates <- narcotic %>%
filter(mrn != rm_pt) %>%
group_by(mrn) %>%
arrange(desc(stop_date), .by_group = T) %>%
slice(1) %>%
ungroup() %>%
select(-start_date)
nar_dates <- narcotic_early_dates %>%
full_join(narcotic_stop_dates) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(start_drt = start_date - hct,
stop_drt = stop_date - hct) %>%
mutate(start_drt = as.numeric(start_drt),
stop_drt = as.numeric(stop_drt)) %>%
# filter out certain periods that are not close to the current cohort transplant date
filter(start_drt > -46 & start_drt < 82)
# the diet data is -10:49
# look closely at several patients that have very future stop dates, possibly another transplant or disease
change_stop <- nar_dates %>%
filter(stop_drt > 100) %>%
pull(mrn)
change_stop_date <- c('2019-08-21','2018-05-05','2017-10-13','2017-11-06','2019-07-26')
change <- tibble(
mrn = change_stop,
stop_date = change_stop_date
)
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
nar_correct <- nar_dates %>%
filter(mrn %in% change_stop) %>%
select(mrn, start_date, hct, start_drt) %>%
full_join(change) %>%
mutate(stop_date = ymd(stop_date),
stop_drt = stop_date - hct,
stop_drt = as.numeric(stop_drt))  %>%
select(colnames(nar_dates))
nar_all <- bind_rows(
nar_dates %>%
filter(!mrn %in% change_stop) ,
nar_correct
)  %>%
mutate(nar_int = interval(start_date, stop_date))
nar_all %>%
distinct(mrn)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('samples_castori_ag')
# find if two intervals overlap
stb_samp <- samples_castori_ag %>%
filter(sampleid %in% meta$sampleid) %>%
select(sampleid, datecollection, mrn) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
inner_join(nar_all %>%
select(mrn, nar_int) ) %>%
mutate(use_nar = int_overlaps(p2d_int, nar_int))
use_nar_samp <- stb_samp %>%
filter(use_nar == 'TRUE')
# how many samples from how many patients
use_nar_samp %>%
count(mrn)
meta_new <- meta %>%
mutate(narcotics = if_else(sampleid %in% use_nar_samp$sampleid, T, F))  %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100) %>%
mutate(inten_non = if_else(intensity == 'nonablative', 1, 0),
inten_ab = if_else(intensity == 'ablative', 1, 0),
inten_re = if_else(intensity == 'reduced', 1, 0))
model_nar <- log(simpson_reciprocal)~ 1 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
narcotics +
(1 | mrn) +
(1 | timebin)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for narcotics
prior(normal(0, 0.1), class = 'b', coef = "narcoticsTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
prior(normal(2, 0.1), class = 'Intercept'))
model_narcotics <- brm( model_nar,
data = meta_new,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
post_samples  <- posterior_samples(model_narcotics, '^b_')
post_pca <- suppressWarnings(posterior_samples(model_narcotics)) %>%
select(-starts_with('r_'))
post_pca %>%  write_csv('../data/084_narcotics_PCA_model_post.csv')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
post_samples <- read_csv('../data/084_narcotics_PCA_model_post.csv')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key) %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_colors <- key %>%
select(shortname, color) %>%
deframe()
cross0 <- post_coeff %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
pca_fg <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Coefficients',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11),
aspect.ratio=1)
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
select(starts_with('b_')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure',
item == 'b_narcoticsTRUE' ~ 'PCA exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('PCA exposure', 'Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure')))
pca_bi <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
axis.text=element_text(size=11),
axis.title=element_text(size=11),
aspect.ratio=1)
ggsave('../figs/paper/084_narcotics_model_binary.jpg', width = 5)
# combine them together to make one supplementary figure
pca <- cowplot::plot_grid(pca_fg, pca_bi,
nrow = 1,
align = 'hv',
#rel_widths =  c(1,1),
#rel_heights = c(1,1),
labels = c('A','B'),
axis = 'tb')
pca
ggsave('../figs/paper/S8_narcotics_PCA_084_Jan24.pdf',
width = 190,
height = 70,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = pca)
ggsave('../figs/paper/S8_narcotics_PCA_084.pdf',
width = 190,
height = 70,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = pca)
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
select(starts_with('b_')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure',
item == 'b_narcoticsTRUE' ~ 'PCA exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('PCA exposure', 'Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure')))
pca_bi <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Coefficients',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
axis.text=element_text(size=11),
axis.title=element_text(size=11),
aspect.ratio=1)
ggsave('../figs/paper/084_narcotics_model_binary.jpg', width = 5)
# combine them together to make one supplementary figure
pca <- cowplot::plot_grid(pca_fg, pca_bi,
nrow = 1,
align = 'hv',
#rel_widths =  c(1,1),
#rel_heights = c(1,1),
labels = c('A','B'),
axis = 'tb')
pca
ggsave('../figs/paper/S8_narcotics_PCA_084.pdf',
width = 190,
height = 70,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = pca)
knitr::opts_chunk$set(echo = TRUE, message = F)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
dtb %>%
distinct(mrn) %>%
write_csv('../data/nutrition_patients_97_mrns.csv', col_names = T)
# the top 10 most consumed in fruits , sweets and veggie item
# total number of meals
n_meal <- dtb %>%
count(mrn, fdrt, Meal) %>%
nrow()
top3grp <- dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1,1)) %>%
filter(fgrp1 %in% c('9','6','7')) %>%
group_by(Food_code, description, fgrp1) %>%
summarise(total_per_code = sum(dehydrated_weight)) %>%
group_by(fgrp1) %>%
arrange(desc(total_per_code), .by_group = T)  %>%
top_n(10) %>%
left_join(key) %>%
ungroup() %>%
mutate(gram_per_meal = total_per_code/n_meal) %>%
mutate(fg1_full_name = case_when(
fgrp1 == '6' ~ 'Fruits',
fgrp1 == '7' ~ 'Vegetables',
fgrp1 == '9' ~ 'Sugars, Sweets & Beverages'
)) %>%
mutate(fg1_full_name = factor(fg1_full_name, levels = c('Fruits','Sugars, Sweets & Beverages', 'Vegetables')))
ggdotchart(top3grp, x = "description", y = "gram_per_meal",
xlab = 'Food item names',
ylab = 'Per meal average consumption (gram)',
group = "fg1_full_name", color = "fg1_full_name",
palette = c('#7D3C98','#db2589', '#229954'),
rotate = TRUE,
sorting = "descending",
ggtheme = theme_bw(),
y.text.col = TRUE ) +
theme(legend.position = 'bottom',
legend.title = element_blank())
ggsave('../figs/paper/S7_top10_eaten_foods_of_3_068_Jan24.pdf', width = 7.5, height = 6)
ggsave('../figs/paper/S7_top10_eaten_foods_of_3_068.pdf', width = 7.5, height = 6)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(cowplot)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
```{r}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(cowplot)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
# the top 10 most consumed in fruits , sweets and veggie item
# total number of meals
n_meal <- dtb %>%
count(mrn, fdrt, Meal) %>%
nrow()
top3grp <- dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1,1)) %>%
filter(fgrp1 %in% c('9','6','7')) %>%
group_by(Food_code, description, fgrp1) %>%
summarise(total_per_code = sum(dehydrated_weight)) %>%
group_by(fgrp1) %>%
arrange(desc(total_per_code), .by_group = T)  %>%
top_n(10) %>%
left_join(key) %>%
ungroup() %>%
mutate(gram_per_meal = total_per_code/n_meal) %>%
mutate(fg1_full_name = case_when(
fgrp1 == '6' ~ 'Fruits',
fgrp1 == '7' ~ 'Vegetables',
fgrp1 == '9' ~ 'Sugars, Sweets & Beverages'
)) %>%
mutate(fg1_full_name = factor(fg1_full_name, levels = c('Fruits','Sugars, Sweets & Beverages', 'Vegetables')))
ggdotchart(top3grp, x = "description", y = "gram_per_meal",
xlab = 'Food item names',
ylab = 'Per meal average consumption (gram)',
group = "fg1_full_name", color = "fg1_full_name",
palette = c('#7D3C98','#db2589', '#229954'),
rotate = TRUE,
sorting = "descending",
ggtheme = theme_bw(),
y.text.col = TRUE ) +
theme(legend.position = 'bottom',
legend.title = element_blank())
ggsave('../figs/paper/S7_top10_eaten_foods_of_3_099.pdf', width = 7.5, height = 6)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(cowplot)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
# the top 10 most consumed in fruits , sweets and veggie item
# total number of meals
n_meal <- dtb %>%
count(mrn, fdrt, Meal) %>%
nrow()
top3grp <- dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1,1)) %>%
filter(fgrp1 %in% c('9','6','7')) %>%
group_by(Food_code, description, fgrp1) %>%
summarise(total_per_code = sum(dehydrated_weight)) %>%
group_by(fgrp1) %>%
arrange(desc(total_per_code), .by_group = T)  %>%
top_n(10) %>%
left_join(key) %>%
ungroup() %>%
mutate(gram_per_meal = total_per_code/n_meal) %>%
mutate(fg1_full_name = case_when(
fgrp1 == '6' ~ 'Fruits',
fgrp1 == '7' ~ 'Vegetables',
fgrp1 == '9' ~ 'Sugars, Sweets & Beverages'
)) %>%
mutate(fg1_full_name = factor(fg1_full_name, levels = c('Fruits','Sugars, Sweets & Beverages', 'Vegetables')))
ggdotchart(top3grp, x = "description", y = "gram_per_meal",
xlab = 'Food item names',
ylab = 'Per meal average consumption (gram)',
group = "fg1_full_name", color = "fg1_full_name",
palette = c('#7D3C98','#db2589', '#229954'),
rotate = TRUE,
sorting = "descending",
ggtheme = theme_bw(),
y.text.col = TRUE ) +
theme(legend.position = 'bottom',
legend.title = element_blank())
ggsave('../figs/paper/S7_top10_eaten_foods_of_3_099.pdf', width = 7.5, height = 6)
# the top 10 most consumed in fruits , sweets and veggie item
# total number of meals
n_meal <- dtb %>%
count(mrn, fdrt, Meal) %>%
nrow()
top3grp <- dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1,1)) %>%
filter(fgrp1 %in% c('9','6','7')) %>%
group_by(Food_code, description, fgrp1) %>%
summarise(total_per_code = sum(dehydrated_weight)) %>%
group_by(fgrp1) %>%
arrange(desc(total_per_code), .by_group = T)  %>%
top_n(10) %>%
left_join(key) %>%
ungroup() %>%
mutate(gram_per_meal = total_per_code/n_meal) %>%
mutate(fg1_full_name = case_when(
fgrp1 == '6' ~ 'Fruits',
fgrp1 == '7' ~ 'Vegetables',
fgrp1 == '9' ~ 'Sugars, Sweets & Beverages'
)) %>%
mutate(fg1_full_name = factor(fg1_full_name, levels = c('Fruits','Sugars, Sweets & Beverages', 'Vegetables')))
ggdotchart(top3grp, x = "description", y = "gram_per_meal",
xlab = '',
ylab = 'Per meal average consumption (gram)',
group = "fg1_full_name", color = "fg1_full_name",
palette = c('#7D3C98','#db2589', '#229954'),
rotate = TRUE,
sorting = "descending",
add = "segments",
ggtheme = theme_classic(),
y.text.col = TRUE ) +
theme(legend.position = 'bottom',
legend.title = element_blank())
ggsave('../figs/paper/S7_top10_eaten_foods_of_3_099.pdf', width = 7.5, height = 6)
ggdotchart(top3grp, x = "description", y = "gram_per_meal",
xlab = '',
ylab = 'Per meal average consumption (gram)',
group = "fg1_full_name", color = "fg1_full_name",
palette = c('#7D3C98','#db2589', '#229954'),
rotate = TRUE,
sorting = "descending",
add = "segments",
#ggtheme = theme_classic(),
y.text.col = TRUE ) +
theme(legend.position = 'bottom',
legend.title = element_blank())
ggdotchart(top3grp, x = "description", y = "gram_per_meal",
xlab = '',
ylab = 'Per meal average consumption (gram)',
group = "fg1_full_name", color = "fg1_full_name",
palette = c('#7D3C98','#db2589', '#229954'),
rotate = TRUE,
sorting = "descending",
add = "segments",
ggtheme = theme_pubr()  ,
y.text.col = TRUE ) +
theme(legend.position = 'bottom',
legend.title = element_blank())
ggdotchart(top3grp, x = "description", y = "gram_per_meal",
xlab = '',
ylab = 'Per meal average consumption (gram)',
group = "fg1_full_name", color = "fg1_full_name",
palette = c('#7D3C98','#db2589', '#229954'),
rotate = TRUE,
sorting = "descending",
#add = "segments",
ggtheme = theme_pubr()  ,
y.text.col = TRUE ) +
theme(legend.position = 'bottom',
legend.title = element_blank())
ggdotchart(top3grp, x = "description", y = "gram_per_meal",
xlab = '',
ylab = 'Per meal average consumption (gram)',
group = "fg1_full_name", color = "fg1_full_name",
palette = c('#7D3C98','#db2589', '#229954'),
rotate = TRUE,
sorting = "descending",
add = "segments",
ggtheme = theme_pubr()  ,
# y.text.col = TRUE
) +
theme(legend.position = 'bottom',
legend.title = element_blank())
