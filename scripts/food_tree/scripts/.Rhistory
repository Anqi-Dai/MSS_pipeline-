mutate(grp = if_else(item %in% c('nonablative','reduced','ablative'), 'patient', 'temporal'))
interaction_terms <- tibble(
shortname = fg_label$ord
) %>%
mutate(ymin = seq(1, nrow(.)) - 0.5,
ymax = seq(1, nrow(.)) + 0.5) %>%
filter(str_detect(shortname, '\\*')) %>%
mutate(xmin = -Inf, xmax = Inf,
interaction_fill = 'interaction_fill')
# this leaves me no choice but I need to fill the other blue area with the blue rectangles
blue_terms <- tibble(
shortname = fg_label$ord
) %>%
mutate(ymin = seq(1, nrow(.)) - 0.5,
ymax = seq(1, nrow(.)) + 0.5) %>%
filter(!str_detect(shortname, '\\*')) %>%
mutate(xmin = -Inf, xmax = Inf,
blue_fill = 'blue_fill')
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot() +
stat_pointinterval(aes(x = coeff, y = shortname, col = Cross), .width = c(.66, .95), fatten_point = 1.2) +
geom_rect(data = interaction_terms, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = interaction_fill), alpha = .1) +
geom_rect(data = blue_terms, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = blue_fill) , alpha = .1) +
scale_fill_manual(values=c("interaction_fill" = "lightblue", "blue_fill" = "royalblue")) +
scale_color_manual(values = c("#EC0000", "black")) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text = element_text( size = 10),
plot.background = element_rect(fill='transparent', color=NA),
axis.title=element_text(size=10),
aspect.ratio=1.5)
fg_temporal
knitr::opts_chunk$set(echo = TRUE)
# to change the df a little bit
full <- read_csv('../data/090_all_samples_meta_p2d_fg9_dietall_genera90.csv') %>%
mutate(abx = if_else(empirical == 'TRUE', 1, 0),
TPN = if_else(TPN == 'TRUE', 1, 0),
EN = if_else(EN == 'TRUE', 1, 0)) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(      ave_fiber_e= ave_fiber*abx,
ave_fat_e=ave_fat*abx,
ave_Sugars_e=ave_Sugars*abx)
# !!!!! to put time as fixed effects in the model
alpha_macro_fat_time_fix <- log(simpson_reciprocal) ~ 0 +
ave_fiber_e +
ave_fat_e +
ave_Sugars_e +
ave_fiber +
ave_fat +
ave_Sugars +
abx+
intensity +
TPN+
EN+
timebin +
(1 | mrn)
# !!!!! to put time as fixed effects in the model
alpha_macro_fat_time_fix <- log(simpson_reciprocal) ~ 0 +
ave_fiber_e +
ave_fat_e +
ave_Sugars_e +
ave_fiber +
ave_fat +
ave_Sugars +
abx+
intensity +
TPN+
EN+
timebin +
(1 | mrn)
model_alpha_macro_fat_time_fix  <- brm( alpha_macro_fat_time_fix,
data = full,
warmup = 1000, iter = 3000,
prior = priors_alpha_macro_fat,
control = list(adapt_delta = 0.99),
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
priors_alpha_macro_fat <- c(
# for the macro nutrients
prior(normal(0, 1), class = 'b', coef = "ave_fiber"),
prior(normal(0, 1), class = 'b', coef = "ave_fat"),
prior(normal(0, 1), class = 'b', coef = "ave_Sugars"),
# for the interaction terms
prior(normal(0, 1), class = 'b', coef = "ave_fiber_e"),
prior(normal(0, 1), class = 'b', coef = "ave_fat_e"),
prior(normal(0, 1), class = 'b', coef = "ave_Sugars_e"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPN"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "EN"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "abx"),
# for the intensity
prior(normal(2, .1), class = 'b', coef = "intensityablative"),
prior(normal(2, .1), class = 'b', coef = "intensityreduced"),
prior(normal(2, .1), class = 'b', coef = "intensitynonablative"))
# !!!!! to put time as fixed effects in the model
alpha_macro_fat_time_fix <- log(simpson_reciprocal) ~ 0 +
ave_fiber_e +
ave_fat_e +
ave_Sugars_e +
ave_fiber +
ave_fat +
ave_Sugars +
abx+
intensity +
TPN+
EN+
timebin +
(1 | mrn)
model_alpha_macro_fat_time_fix  <- brm( alpha_macro_fat_time_fix,
data = full,
warmup = 1000, iter = 3000,
prior = priors_alpha_macro_fat,
control = list(adapt_delta = 0.99),
cores = ncores,
chains = 2,
seed = 123, sample_prior = T, file = '../data/090_interaction_conditional_model_macro_time_fix')
post_res <- suppressWarnings(posterior_samples(model_alpha_macro_fat_time_fix))
post_res %>%  write_csv('../data/090_model_alpha_macro_fat_post_interaction_time_fix.csv')
macro <- read_csv('../data/090_model_alpha_macro_fat_post_interaction_time_fix.csv')
macro <- read_csv('../data/090_model_alpha_macro_fat_post_interaction_time_fix.csv')
cleaned_macro <-  macro %>% select(starts_with('b_')) %>%
select(-starts_with('b_timebin')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_',''),
item = str_replace(item, 'b_',''),
item = str_replace(item, 'intensity','')) %>%
mutate(shortname = case_when(
item ==  'fiber_e' ~ 'abx * Fiber',
item == 'fiber' ~ 'Fiber',
item ==  'fat_e' ~ 'abx * Fat',
item ==  'fat' ~ 'Fat',
item == 'Sugars_e' ~ 'abx * Sugars',
item == 'Sugars' ~ 'Sugars',
item ==  'nonablative' ~ 'Nonablative',
item ==  'reduced' ~ 'Reduced',
item ==  'ablative' ~ 'Ablative',
item ==  'TPN' ~ 'TPN',
item ==  'EN' ~ 'EN',
item ==  'abx' ~ 'abx'
)) %>%
mutate(grp = if_else(item %in% c('nonablative','reduced','ablative'), 'patient', 'temporal')) %>%
mutate(grp = factor(grp, levels = c('temporal','patient')))
cleaned_macro %>% distinct(item) %>% pull(item)
# sort them by the order of the left side of middle q66
macro_e_order <- cleaned_macro %>% filter(str_detect(item, '_e$')) %>%
group_by(shortname) %>%
tidybayes::median_qi(coeff , .width = c( .66)) %>%
arrange(.lower) %>% pull(shortname)
cross0_macro <- cleaned_macro %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
macro_order <- tibble(
shortname = c('Fat','abx * Fat',
'Fiber','abx * Fiber',
'Sugars','abx * Sugars',
"TPN" ,"EN" , 'abx')
) %>% inner_join(cleaned_macro %>% distinct(item, shortname)) %>%
inner_join(cross0_macro %>% select(item, Cross))
interaction_terms_macro <- tibble(
shortname = macro_order$shortname
) %>%
mutate(ymin = seq(1, nrow(.)) - 0.5,
ymax = seq(1, nrow(.)) + 0.5) %>%
filter(str_detect(shortname, '\\*')) %>%
mutate(xmin = -Inf, xmax = Inf,
interaction_fill = 'interaction_fill')
blue_terms_macro <- tibble(
shortname = macro_order$shortname
) %>%
mutate(ymin = seq(1, nrow(.)) - 0.5,
ymax = seq(1, nrow(.)) + 0.5) %>%
filter(!str_detect(shortname, '\\*')) %>%
mutate(xmin = -Inf, xmax = Inf,
blue_fill = 'blue_fill')
macro_temporal <- cleaned_macro %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = macro_order$shortname)) %>%
left_join(cross0_macro)  %>%
ggplot() +
stat_pointinterval(aes(x = coeff, y = shortname, col = Cross),.width = c(.66, .95), fatten_point = 1.2) +
geom_rect(data = interaction_terms_macro, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = interaction_fill), alpha = .1) +
geom_rect(data = blue_terms_macro, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = blue_fill) , alpha = .1) +
scale_fill_manual(values=c("interaction_fill" = "lightblue", "blue_fill" = "royalblue")) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "black")) +
theme(axis.text.y = element_text( size = 10),
plot.background = element_rect(fill='transparent', color=NA),
axis.title=element_text(size=10),
#panel.background = element_rect(fill = "#d8dcec",colour = "#d8dcec",size = 0.5, linetype = "solid"),
aspect.ratio=1/1.5)
macro_temporal
# to plot the coeff plot
fg <- read_csv('../data/186_div_model_fg_post_interaction_time_fix.csv')
fg_order <- c( 'Vegetables','abx * Vegetables',
'Oils','abx * Oils',
'Fruits','abx * Fruits',
'Meats','abx * Meats',
'Legumes','abx * Legumes',
'Eggs','abx * Eggs',
'Milk','abx * Milk',
'Grains','abx * Grains',
'Sweets','abx * Sweets',
"TPN" ,"EN" , 'abx')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
fg_label <- tibble(ord = fg_order) %>%
mutate(shortname = str_replace(ord, 'abx \\+ ','')) %>%
left_join(key %>% select(shortname, color)) %>%
mutate(color = if_else(is.na(color), 'black', color))
# to clean the y labels in both of the df
cleaned_fg <- fg  %>% select(starts_with('b_')) %>%
select(-starts_with('b_timebin')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_',''),
item = str_replace(item, 'b_',''),
item = str_replace(item, 'intensity','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname)) %>%
mutate(shortname = case_when(
item ==  'milk_e' ~ 'abx * Milk',
item == 'meat_e' ~ 'abx * Meats',
item ==  'egg_e' ~ 'abx * Eggs',
item ==  'legume_e' ~ 'abx * Legumes',
item == 'grain_e' ~ 'abx * Grains',
item == 'fruit_e' ~ 'abx * Fruits',
item == 'veggie_e' ~ 'abx * Vegetables',
item ==  'oils_e' ~ 'abx * Oils',
item ==  'sweets_e' ~ 'abx * Sweets',
item ==  'nonablative' ~ 'Nonablative',
item ==  'reduced' ~ 'Reduced',
item ==  'ablative' ~ 'Ablative',
item ==  'TPN' ~ 'TPN',
item ==  'EN' ~ 'EN',
item ==  'abx' ~ 'abx',
TRUE ~ `shortname`
)) %>%
mutate(grp = if_else(item %in% c('nonablative','reduced','ablative'), 'patient', 'temporal'))
interaction_terms <- tibble(
shortname = fg_label$ord
) %>%
mutate(ymin = seq(1, nrow(.)) - 0.5,
ymax = seq(1, nrow(.)) + 0.5) %>%
filter(str_detect(shortname, '\\*')) %>%
mutate(xmin = -Inf, xmax = Inf,
interaction_fill = 'interaction_fill')
# this leaves me no choice but I need to fill the other blue area with the blue rectangles
blue_terms <- tibble(
shortname = fg_label$ord
) %>%
mutate(ymin = seq(1, nrow(.)) - 0.5,
ymax = seq(1, nrow(.)) + 0.5) %>%
filter(!str_detect(shortname, '\\*')) %>%
mutate(xmin = -Inf, xmax = Inf,
blue_fill = 'blue_fill')
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot() +
stat_pointinterval(aes(x = coeff, y = shortname, col = Cross), .width = c(.66, .95), fatten_point = 1.2) +
geom_rect(data = interaction_terms, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = interaction_fill), alpha = .1) +
geom_rect(data = blue_terms, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = blue_fill) , alpha = .1) +
scale_fill_manual(values=c("interaction_fill" = "lightblue", "blue_fill" = "royalblue")) +
scale_color_manual(values = c("#EC0000", "black")) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text = element_text( size = 10),
plot.background = element_rect(fill='transparent', color=NA),
axis.title=element_text(size=10),
aspect.ratio=1.5)
fg_temporal
# to plot the coeff plot
fg <- read_csv('../data/186_div_model_fg_post_interaction_time_fix.csv')
fg_order <- c( 'Vegetables','abx * Vegetables',
'Oils','abx * Oils',
'Fruits','abx * Fruits',
'Meats','abx * Meats',
'Legumes','abx * Legumes',
'Eggs','abx * Eggs',
'Milk','abx * Milk',
'Grains','abx * Grains',
'Sweets','abx * Sweets',
"TPN" ,"EN" , 'abx')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
fg_label <- tibble(ord = fg_order) %>%
mutate(shortname = str_replace(ord, 'abx \\+ ','')) %>%
left_join(key %>% select(shortname, color)) %>%
mutate(color = if_else(is.na(color), 'black', color))
# to clean the y labels in both of the df
cleaned_fg <- fg  %>% select(starts_with('b_')) %>%
select(-starts_with('b_timebin')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_',''),
item = str_replace(item, 'b_',''),
item = str_replace(item, 'intensity','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname)) %>%
mutate(shortname = case_when(
item ==  'milk_e' ~ 'abx * Milk',
item == 'meat_e' ~ 'abx * Meats',
item ==  'egg_e' ~ 'abx * Eggs',
item ==  'legume_e' ~ 'abx * Legumes',
item == 'grain_e' ~ 'abx * Grains',
item == 'fruit_e' ~ 'abx * Fruits',
item == 'veggie_e' ~ 'abx * Vegetables',
item ==  'oils_e' ~ 'abx * Oils',
item ==  'sweets_e' ~ 'abx * Sweets',
item ==  'nonablative' ~ 'Nonablative',
item ==  'reduced' ~ 'Reduced',
item ==  'ablative' ~ 'Ablative',
item ==  'TPN' ~ 'TPN',
item ==  'EN' ~ 'EN',
item ==  'abx' ~ 'abx',
TRUE ~ `shortname`
)) %>%
mutate(grp = if_else(item %in% c('nonablative','reduced','ablative'), 'patient', 'temporal'))
interaction_terms <- tibble(
shortname = fg_label$ord
) %>%
mutate(ymin = seq(1, nrow(.)) - 0.5,
ymax = seq(1, nrow(.)) + 0.5) %>%
filter(str_detect(shortname, '\\*')) %>%
mutate(xmin = -Inf, xmax = Inf,
interaction_fill = 'interaction_fill')
# this leaves me no choice but I need to fill the other blue area with the blue rectangles
blue_terms <- tibble(
shortname = fg_label$ord
) %>%
mutate(ymin = seq(1, nrow(.)) - 0.5,
ymax = seq(1, nrow(.)) + 0.5) %>%
filter(!str_detect(shortname, '\\*')) %>%
mutate(xmin = -Inf, xmax = Inf,
blue_fill = 'blue_fill')
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot() +
stat_pointinterval(aes(x = coeff, y = shortname, col = Cross), .width = c(.66, .95), fatten_point = 1.2) +
geom_rect(data = interaction_terms, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = interaction_fill), alpha = .1) +
geom_rect(data = blue_terms, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = blue_fill) , alpha = .1) +
scale_fill_manual(values=c("interaction_fill" = "lightblue", "blue_fill" = "royalblue")) +
scale_color_manual(values = c("#EC0000", "black")) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text = element_text( size = 10),
plot.background = element_rect(fill='transparent', color=NA),
axis.title=element_text(size=10),
aspect.ratio=1.5)
fg_temporal
# to plot the coeff plot
fg <- read_csv('../data/186_div_model_fg_post_interaction_time_fix.csv')
fg_order <- c( 'Vegetables','abx * Vegetables',
'Oils','abx * Oils',
'Fruits','abx * Fruits',
'Meats','abx * Meats',
'Legumes','abx * Legumes',
'Eggs','abx * Eggs',
'Milk','abx * Milk',
'Grains','abx * Grains',
'Sweets','abx * Sweets',
"TPN" ,"EN" , 'abx')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
fg_label <- tibble(ord = fg_order) %>%
mutate(shortname = str_replace(ord, 'abx \\+ ','')) %>%
left_join(key %>% select(shortname, color)) %>%
mutate(color = if_else(is.na(color), 'black', color))
# to clean the y labels in both of the df
cleaned_fg <- fg  %>% select(starts_with('b_')) %>%
select(-starts_with('b_timebin')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_',''),
item = str_replace(item, 'b_',''),
item = str_replace(item, 'intensity','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname)) %>%
mutate(shortname = case_when(
item ==  'milk_e' ~ 'abx * Milk',
item == 'meat_e' ~ 'abx * Meats',
item ==  'egg_e' ~ 'abx * Eggs',
item ==  'legume_e' ~ 'abx * Legumes',
item == 'grain_e' ~ 'abx * Grains',
item == 'fruit_e' ~ 'abx * Fruits',
item == 'veggie_e' ~ 'abx * Vegetables',
item ==  'oils_e' ~ 'abx * Oils',
item ==  'sweets_e' ~ 'abx * Sweets',
item ==  'nonablative' ~ 'Nonablative',
item ==  'reduced' ~ 'Reduced',
item ==  'ablative' ~ 'Ablative',
item ==  'TPN' ~ 'TPN',
item ==  'EN' ~ 'EN',
item ==  'abx' ~ 'abx',
TRUE ~ `shortname`
)) %>%
mutate(grp = if_else(item %in% c('nonablative','reduced','ablative'), 'patient', 'temporal'))
interaction_terms <- tibble(
shortname = fg_label$ord
) %>%
mutate(ymin = seq(1, nrow(.)) - 0.5,
ymax = seq(1, nrow(.)) + 0.5) %>%
filter(str_detect(shortname, '\\*')) %>%
mutate(xmin = -Inf, xmax = Inf,
interaction_fill = 'interaction_fill')
# this leaves me no choice but I need to fill the other blue area with the blue rectangles
blue_terms <- tibble(
shortname = fg_label$ord
) %>%
mutate(ymin = seq(1, nrow(.)) - 0.5,
ymax = seq(1, nrow(.)) + 0.5) %>%
filter(!str_detect(shortname, '\\*')) %>%
mutate(xmin = -Inf, xmax = Inf,
blue_fill = 'blue_fill')
cross0 <- cleaned_fg %>%
filter(grp == 'temporal') %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 >= 0 | q97.5 <= 0, F, T))
fg_temporal <- cleaned_fg %>%
filter(grp == 'temporal') %>%
mutate(shortname = factor(shortname, levels = fg_label$ord)) %>%
left_join(cross0) %>%
ggplot() +
stat_pointinterval(aes(x = coeff, y = shortname, col = Cross), .width = c(.66, .95), fatten_point = 1.2) +
geom_rect(data = interaction_terms, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = interaction_fill), alpha = .1) +
geom_rect(data = blue_terms, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = blue_fill) , alpha = .1) +
scale_fill_manual(values=c("interaction_fill" = "lightblue", "blue_fill" = "royalblue")) +
scale_color_manual(values = c("#EC0000", "black")) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change', y = '') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text = element_text( size = 10),
plot.background = element_rect(fill='transparent', color=NA),
axis.title=element_text(size=10),
aspect.ratio=1.5)
fg_temporal
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vdbR)
connect_database()
get_table_from_database('isabl_api_analysis')
View(isabl_api_analysis)
get_table_from_database('isabl_api_application')
View(isabl_api_application)
get_table_from_database('mgx_metaphlan')
View(mgx_metaphlan)
