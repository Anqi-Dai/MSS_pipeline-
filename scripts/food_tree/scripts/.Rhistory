filter(use_nar == 'TRUE')
meta_new <- meta %>%
mutate(narcotics = if_else(sampleid %in% use_nar_samp$sampleid, T, F))  %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100) %>%
mutate(inten_non = if_else(intensity == 'nonablative', 1, 0),
inten_ab = if_else(intensity == 'ablative', 1, 0),
inten_re = if_else(intensity == 'reduced', 1, 0))
model_nar <- log(simpson_reciprocal)~ 1 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
narcotics +
(1 | mrn) +
(1 | timebin)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for narcotics
prior(normal(0, 0.1), class = 'b', coef = "narcoticsTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
prior(normal(2, 0.1), class = 'Intercept'))
model_narcotics <- brm( model_nar,
data = meta_new,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
post_samples  <- posterior_samples(model_narcotics, '^b_')
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(nodes) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
mutate(fdesc = fct_reorder(fdesc, coeff, .fun=median, .desc = F)) %>%
left_join(key %>% select(fgrp1, color))
post_coeff <- post_samples %>%
select(starts_with('b_fg'))
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(nodes) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
mutate(fdesc = fct_reorder(fdesc, coeff, .fun=median, .desc = F)) %>%
left_join(key %>% select(fgrp1, color))
fg_colors <- post_coeff %>%
distinct(fdesc, color) %>%
deframe()
post_coeff %>%
ggplot(aes(x = coeff, y = fdesc, col = fdesc)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'High-level food categories\n(FNDDS)') +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(nodes) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
mutate(fdesc = fct_reorder(fdesc, coeff, .fun=median, .desc = F)) %>%
left_join(key %>% select(fgrp1, color))
fg_colors <- post_coeff %>%
distinct(fdesc, color) %>%
deframe()
post_coeff %>%
ggplot(aes(x = coeff, y = fdesc, col = fdesc)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'High-level food categories\n(FNDDS)') +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11),
aspect.ratio=1)
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
))
View(coeff_bi)
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure',
item == 'b_narcoticsTRUE' ~ 'narcotics exposure'
))
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure',
item == 'b_narcoticsTRUE' ~ 'narcotics exposure'
)) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme(legend.position = 'none',
aspect.ratio=1)
knitr::opts_chunk$set(echo = TRUE)
library(gtsummary)
PTB <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
final <- PTB %>%
select(age, sex, Disease = disease.simple, source,  intensity) %>%
mutate(Disease = case_when(
Disease == 'NHL' ~ "Non-Hodgkin's lymphoma",
Disease == 'MDS/MPN' ~ 'Myelodysplastic/myeloproliferative neoplasms',
Disease == 'AML' ~ 'Acute myeloid leukemia',
Disease == 'ALL' ~ 'Acute lymphoid leukemia',
Disease == 'CLL' ~ 'Chronic lymphocytic leukemia',
Disease == 'CML' ~ 'Other',
Disease == 'Hodgkins' ~ "Other",
Disease == 'Myeloma' ~ 'Myeloma',
Disease == 'AA' ~ 'Other'
)) %>%
mutate(source = case_when(
source == 'unmodified' ~ "Unmodified bone marrow or PBSC",
source == 'cord' ~ "Cord blood",
source == 'TCD' ~ "T-cell depleted PBSC"
)) %>%
mutate(intensity = case_when(
intensity == 'nonablative' ~ "Nonmyeloablative",
intensity == 'ablative' ~ "Ablative",
intensity == 'reduced' ~ "Reduced intensity"
)) %>%
mutate(intensity = fct_reorder(intensity, intensity, .fun=length, .desc = T),
source = fct_reorder(source, source, .fun=length, .desc = T),
Disease = fct_reorder(Disease, Disease, .fun=length, .desc = T),
sex = fct_reorder(sex, sex, .fun=length, .desc = T)) %>%
rename(`Graft type` = source,
#`HCT-CI` = ci,
`Intensity of conditioning regimen` = intensity )
final %>%
tbl_summary(
type = list(all_integer() ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})")
) %>%
bold_labels()
library(gtsummary)
PTB <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
final <- PTB %>%
select(age, sex, Disease = disease.simple, source,  intensity) %>%
mutate(Disease = case_when(
Disease == 'NHL' ~ "Non-Hodgkin's lymphoma",
Disease == 'MDS/MPN' ~ 'Myelodysplastic/myeloproliferative neoplasms',
Disease == 'AML' ~ 'Acute myeloid leukemia',
Disease == 'ALL' ~ 'Acute lymphoid leukemia',
Disease == 'CLL' ~ 'Chronic lymphocytic leukemia',
Disease == 'CML' ~ 'Other',
Disease == 'Hodgkins' ~ "Other",
Disease == 'Myeloma' ~ 'Myeloma',
Disease == 'AA' ~ 'Other'
)) %>%
mutate(source = case_when(
source == 'unmodified' ~ "Unmodified bone marrow or PBSC",
source == 'cord' ~ "Cord blood",
source == 'TCD' ~ "T-cell depleted PBSC"
)) %>%
mutate(intensity = case_when(
intensity == 'nonablative' ~ "Nonmyeloablative",
intensity == 'ablative' ~ "Ablative",
intensity == 'reduced' ~ "Reduced intensity"
)) %>%
mutate(intensity = fct_reorder(intensity, intensity, .fun=length, .desc = T),
source = fct_reorder(source, source, .fun=length, .desc = T),
Disease = fct_reorder(Disease, Disease, .fun=length, .desc = T),
sex = fct_reorder(sex, sex, .fun=length, .desc = T)) %>%
rename(`Graft type` = source,
#`HCT-CI` = ci,
`Intensity of conditioning regimen` = intensity )
final %>%
tbl_summary(
type = list(all_integer() ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})")
) %>%
bold_labels()
?gtsave
final %>%
tbl_summary(
type = list(all_integer() ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})")
) %>%
bold_labels() %>%
gtsave(filename = "../data/cleaned_diet_data/003_table_1_patient_summary.pdf")
final %>%
tbl_summary(
type = list(all_integer() ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})")
) %>%
bold_labels() %>%
gt::gtsave(filename = "../data/cleaned_diet_data/003_table_1_patient_summary.pdf")
final %>%
tbl_summary(
type = list(all_integer() ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})")
) %>%
bold_labels() %>%
as_gt() %>%
gt::gtsave(filename = "../data/cleaned_diet_data/003_table_1_patient_summary.pdf")
install.packages('webshot')
final %>%
tbl_summary(
type = list(all_integer() ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})")
) %>%
bold_labels() %>%
as_gt() %>%
gt::gtsave(filename = "../data/cleaned_diet_data/003_table_1_patient_summary.pdf")
webshot::install_phantomjs()
final %>%
tbl_summary(
type = list(all_integer() ~ "continuous"),
statistic = list(all_continuous() ~ "{mean} ({sd})")
) %>%
bold_labels() %>%
as_gt() %>%
gt::gtsave(filename = "../data/cleaned_diet_data/003_table_1_patient_summary.pdf")
??gtsave
View(narcotic)
narcotic %>%
count(mrn, sort = T)
narcotic <- dat %>%
filter(is_narcotic == "Y") %>%
filter(grepl("PCA", med_name)) %>%
mutate(mrn = as.numeric(MRN)) %>%
filter(mrn %in% ptb$mrn) %>%
select(mrn, start_date, stop_date)
narcotic %>%
count(mrn, sort = T)
View(nar_all)
nar_all %>%
distinct(mrn)
View(use_nar_samp)
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(nodes) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
mutate(fdesc = fct_reorder(fdesc, coeff, .fun=median, .desc = F)) %>%
left_join(key %>% select(fgrp1, color))
fg_colors <- post_coeff %>%
distinct(fdesc, color) %>%
deframe()
post_coeff %>%
ggplot(aes(x = coeff, y = fdesc, col = fdesc)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'High-level food categories\n(FNDDS)') +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11),
aspect.ratio=1)
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure',
item == 'b_narcoticsTRUE' ~ 'narcotics exposure'
)) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme(legend.position = 'none',
aspect.ratio=1)
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure',
item == 'b_narcoticsTRUE' ~ 'narcotics exposure'
)) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme(legend.position = 'none',
aspect.ratio=1)
ggsave('../figs/paper/084_narcotics_model_binary.pdf', width = 5)
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(nodes) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
mutate(fdesc = fct_reorder(fdesc, coeff, .fun=median, .desc = F)) %>%
left_join(key %>% select(fgrp1, color))
fg_colors <- post_coeff %>%
distinct(fdesc, color) %>%
deframe()
post_coeff %>%
ggplot(aes(x = coeff, y = fdesc, col = fdesc)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'High-level food categories\n(FNDDS)') +
theme(legend.position = 'none') +
scale_color_manual(values = fg_colors) +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11),
aspect.ratio=1)
ggsave('../figs/paper/084_narcotics_model_fg_coeff.jpg', width = 5)
coeff_bi <- post_samples %>%
select(!starts_with('b_fg')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure',
item == 'b_narcoticsTRUE' ~ 'narcotics exposure'
)) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme(legend.position = 'none',
aspect.ratio=1)
ggsave('../figs/paper/084_narcotics_model_binary.jpg', width = 5)
