f2 <-  plot_grid(left,right,
rel_widths = c(1,1),
nrow = 1)
combined <- plot_grid(
title, f2,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
) +theme(plot.margin = unit(c(1,0.5,0.5,0.5), "cm"))
ggsave('../data/F2_model_results_176.pdf',
width = 210, height = 217, units = "mm", device = 'pdf',
#plot = combined,
dpi = 300)
combined <- plot_grid(
title, f2,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
ggsave('../data/F2_model_results_176.pdf',
width = 210, height = 217, units = "mm", device = 'pdf',
#plot = combined,
dpi = 300)
combined <- plot_grid(
title, f2,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
) +theme(plot.margin = unit(c(1,0.5,0.5,0.5), "cm"))
ggsave('../data/F2_model_results_176.pdf',
width = 210, height = 217, units = "mm", device = 'pdf',
#plot = combined,
dpi = 300)
combined <- plot_grid(
title, f2,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
) +theme(plot.margin = unit(c(1,1,1,1), "cm"))
ggsave('../data/F2_model_results_176.pdf',
width = 210, height = 217, units = "mm", device = 'pdf',
#plot = combined,
dpi = 300)
f2a <- twoscore %>%
mutate(pNd = str_extract(pNd, '\\d')) %>%
arrange(desc(grp)) %>%
mutate(pNd =  factor(pNd)) %>%
ggplot(aes(x = pNd, y = score, group = grp, linetype = grp)) +
geom_line(size = 0.3) +
geom_point(size = 1.3) +
labs(x = 'Number of previous days\nof dietary intake',y = 'Procrustes score') +
scale_linetype_manual(values = c('solid','dashed')) +
theme_classic()  +
theme(aspect.ratio=1/3,
legend.position = c(0.75,0.4),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_text_size),
legend.title = element_blank(),
axis.text.x = element_text(angle=0, hjust=0.5))
f2a
twoscore <- read_csv('../data/086_twoscore_procrustes.csv')
f2a <- twoscore %>%
mutate(pNd = str_extract(pNd, '\\d')) %>%
arrange(desc(grp)) %>%
mutate(pNd =  factor(pNd)) %>%
ggplot(aes(x = pNd, y = score, group = grp, linetype = grp)) +
geom_line(size = 0.3) +
geom_point(size = 1.3) +
labs(x = 'Number of previous days\nof dietary intake',y = 'Procrustes score') +
scale_linetype_manual(values = c('solid','dashed')) +
theme_classic()  +
theme(aspect.ratio=1/1.5,
legend.position = c(0.75,0.4),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_text_size),
legend.title = element_blank(),
axis.text.x = element_text(angle=0, hjust=0.5))
f2a
left <- plot_grid(f2a, macro_side,
#labels = c('A', 'B'),
rel_heights = c(1,2.2),
nrow = 2)
right <- plot_grid(diagram, fg_side,
#labels = c('A', 'B'),
rel_heights = c(1,5),
nrow = 2)
f2 <-  plot_grid(left,right,
rel_widths = c(1,1),
nrow = 1)
combined <- plot_grid(
title, f2,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
) +theme(plot.margin = unit(c(1,1,1,1), "cm"))
ggsave('../data/F2_model_results_176.pdf',
width = 210, height = 217, units = "mm", device = 'pdf',
#plot = combined,
dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(tidybayes)
library(cowplot)
theme_set(theme_pubr(base_size = 8))
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
library(tidyverse)
library(ggpubr)
library(tidybayes)
library(cowplot)
theme_set(theme_pubr(base_size = 8))
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
res <- read_csv('../data/172_spearman_all.csv') %>%
filter(passthre_perc > 10) %>%
mutate(padj = p.adjust(pval)) %>%
mutate(sig05 = if_else(padj < 0.05, T, F)) %>%
mutate(grp = if_else(rho >= 0, 'positive', 'negative')) %>%
arrange(rho, desc(genus)) %>%
mutate(y = 1 - padj)
View(res)
knitr::opts_chunk$set(echo = TRUE)
# correlate top genus abundance with diversity, check if entero and kleb have most negative correlation
meta <- read_csv('../data/153_combined_META.csv')
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal))
spearman_res <- df %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
spearman_cor = cor.test(.x$simpson_reciprocal, .x$relab, method = c( "spearman"), exact = T)
spearman_rho = round(spearman_cor$estimate, 2)
spearman_pval = round(spearman_cor$p.value , 2)
return(list(genus = .y, rho = spearman_rho, pval = spearman_pval))
} )
# just calculate the spearman correlation and p value
spearman_res <- df %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
spearman_cor = cor.test(.x$simpson_reciprocal, .x$relab, method = c( "spearman"), exact = T)
spearman_rho = round(spearman_cor$estimate, 2)
spearman_pval = round(spearman_cor$p.value , 2)
return(list(genus = .y, rho = spearman_rho, pval = spearman_pval))
} )
spearman_res <- g_relab %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
spearman_cor = cor.test(.x$simpson_reciprocal, .x$relab, method = c( "spearman"), exact = T)
spearman_rho = round(spearman_cor$estimate, 2)
spearman_pval = round(spearman_cor$p.value , 2)
return(list(genus = .y, rho = spearman_rho, pval = spearman_pval))
} )
perc_thre <- g_relab %>%
count(genus, relab > 10^-4) %>%
filter(`relab > 10^-4` == 'TRUE') %>%
mutate(passthre_perc = round(n/1009*100, 0))
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc))
spearman_all %>% write_csv('../data/172_spearman_all.csv')
View(spearman_all)
?cor.test
spearman_res <- g_relab %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
spearman_cor = cor.test(.x$simpson_reciprocal, .x$relab, method = c( "kendall"), exact = T)
spearman_rho = round(spearman_cor$estimate, 2)
spearman_pval = round(spearman_cor$p.value , 2)
return(list(genus = .y, rho = spearman_rho, pval = spearman_pval))
} )
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus')
View(res)
View(test)
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus') %>% distinct(simpson_reciprocal)
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus')
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus') %>% distinct(relab)
View(test)
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus') %>% distinct(relab)
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus') %>% distinct(relab)
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus') %>% distinct(relab, keep.all = T)
View(test)
?distinct
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus') %>% distinct(relab, keep_all = T)
View(test)
test <- g_relab %>% filter(genus == 'Enterococcus'
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus') %>% distinct(relab, keep_all = T)
g_relab
test
test <- g_relab %>% filter(genus == 'Enterococcus')
test
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus') %>%
distinct(relab, keep_all = T)
test
# if I manually remove the ties in the dataset
test <- g_relab %>% filter(genus == 'Enterococcus') %>%
distinct(relab, .keep_all = T)
?cor.test
spearman_cor = cor.test(test$simpson_reciprocal, test$relab, method = c( "spearman"), exact = T)
spearman_cor
spearman_cor$$p.value
spearman_cor$p.value
spearman_cor$p.value
spearman_cor$p.value
spearman_cor$p.value
spearman_res <- g_relab %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
df = .x %>% distinct(relab, .keep_all = T)
spearman_cor = cor.test(df$simpson_reciprocal, df$relab, method = c( "kendall"), exact = T)
spearman_rho = round(spearman_cor$estimate, 2)
spearman_pval = round(spearman_cor$p.value , 2)
return(list(genus = .y, rho = spearman_rho, pval = spearman_pval))
} )
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(brms)
# correlate top genus abundance with diversity, check if entero and kleb have most negative correlation
meta <- read_csv('../data/153_combined_META.csv')
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal))
spearman_res <- g_relab %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
df = .x %>% distinct(relab, .keep_all = T)
spearman_cor = cor.test(df$simpson_reciprocal, df$relab, method = c( "spearman"), exact = T)
spearman_rho = round(spearman_cor$estimate, 2)
spearman_pval = round(spearman_cor$p.value , 2)
return(list(genus = .y, rho = spearman_rho, pval = spearman_pval))
} )
perc_thre <- g_relab %>%
count(genus, relab > 10^-4) %>%
filter(`relab > 10^-4` == 'TRUE') %>%
mutate(passthre_perc = round(n/1009*100, 0))
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc))
spearman_all %>% write_csv('../data/172_spearman_all.csv')
View(spearman_all)
View(spearman_res)
spearman_res <- g_relab %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
df = .x %>% distinct(relab, .keep_all = T)
spearman_cor = cor.test(df$simpson_reciprocal, df$relab, method = c( "spearman"), exact = T)
return(list(genus = .y, rho = spearman_cor$estimate, pval = spearman_cor$p.value))
} )
perc_thre <- g_relab %>%
count(genus, relab > 10^-4) %>%
filter(`relab > 10^-4` == 'TRUE') %>%
mutate(passthre_perc = round(n/1009*100, 0))
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc))
spearman_all %>% write_csv('../data/172_spearman_all.csv')
View(spearman_all)
spearman_all$pval
spearman_all
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc)) %>%
mutate(neglogp = -log10(pval))
.Machine$double.eps
spearman_res
?p.adjust
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc)) %>%
mutate(neglogp = -log10(pval),
padj = p.adjust(pval, method = 'BH'))
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal))
View(g_relab)
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal))
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal))
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal))
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal))
View(g_relab)
?runif
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal)) %>%
mutate(changedrelab = relab + runif(1, min = 0, max = 10^-10))
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal)) %>%
mutate(pseudotiny = runif(nrow(.), min = 0, max = 10^-10))
?runif
# correlate top genus abundance with diversity, check if entero and kleb have most negative correlation
set.seed(1)
meta <- read_csv('../data/153_combined_META.csv')
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal)) %>%
mutate(pseudotiny = runif(nrow(.), min = 0, max = 10^-10) )
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal)) %>%
mutate(pseudotiny = runif(nrow(.), min = 0, max = 10^-10) ) %>%
mutate(changed_relab = relab + pseudotiny)
# correlate top genus abundance with diversity, check if entero and kleb have most negative correlation
set.seed(1)
set.seed(1)
meta <- read_csv('../data/153_combined_META.csv')
set.seed(1)
meta <- read_csv('../data/153_combined_META.csv')
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal)) %>%
mutate(pseudotiny = runif(nrow(.), min = 0, max = 10^-10) ) %>%
mutate(changed_relab = relab + pseudotiny)
spearman_res <- g_relab %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
spearman_cor = cor.test(.x$simpson_reciprocal, .x$changed_relab, method = c( "spearman"), exact = T)
return(list(genus = .y, rho = spearman_cor$estimate, pval = spearman_cor$p.value))
} )
View(spearman_res)
perc_thre <- g_relab %>%
count(genus, relab > 10^-4) %>%
filter(`relab > 10^-4` == 'TRUE') %>%
mutate(passthre_perc = round(n/1009*100, 0))
# show the % of the samples that have the relab of the genus > 10^-4
perc_thre <- g_relab %>%
count(genus, relab > 10^-4) %>%
filter(`relab > 10^-4` == 'TRUE') %>%
mutate(passthre_perc = round(n/1009*100, 0))
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc)) %>%
mutate(
padj = p.adjust(pval, method = 'BH'),
neglogp = -log10(padj))
View(spearman_all)
spearman_res
# just calculate the spearman correlation and p value
spearman_res <- g_relab %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
spearman_cor = cor.test(.x$simpson_reciprocal, .x$changed_relab, method = c( "spearman"), exact = T)
return(list(genus = .y, rho = spearman_cor$estimate, pval = spearman_cor$p.value))
} ) %>%
# add a tiny number to the pvalue == 0 cases
mutate(changed_pval = if_else(pval == 0, pval + .Machine$double.eps, pval))
set.seed(1)
meta <- read_csv('../data/153_combined_META.csv')
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal)) %>%
mutate(pseudotiny = runif(nrow(.), min = 0, max = 10^-10) ) %>%
mutate(changed_relab = relab + pseudotiny)
set.seed(1)
meta <- read_csv('../data/153_combined_META.csv')
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal)) %>%
mutate(pseudotiny = runif(nrow(.), min = 0, max = 10^-10) ) %>%
mutate(changed_relab = relab + pseudotiny)
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal))
spearman_res <- g_relab %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
spearman_cor = cor.test(.x$simpson_reciprocal, .x$relab, method = c( "spearman"), exact = T)
return(list(genus = .y, rho = spearman_cor$estimate, pval = spearman_cor$p.value))
} ) %>%
# add a tiny number to the pvalue == 0 cases
mutate(changed_pval = if_else(pval == 0, pval + .Machine$double.eps, pval))
g_relab <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(!is.na(genus)) %>%
spread('genus','relab', fill = 0) %>%
gather('genus','relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(meta %>% select(sampleid, simpson_reciprocal)) %>%
mutate(pseudotiny = runif(nrow(.), min = 0, max = 10^-10) ) %>%
mutate(changed_relab = relab + pseudotiny)
spearman_res <- g_relab %>%
split(.$genus) %>%
imap_dfr(function(.x, .y ){
# the spearman correlation
spearman_cor = cor.test(.x$simpson_reciprocal, .x$changed_relab, method = c( "spearman"), exact = T)
return(list(genus = .y, rho = spearman_cor$estimate, pval = spearman_cor$p.value))
} ) %>%
# add a tiny number to the pvalue == 0 cases
mutate(changed_pval = if_else(pval == 0, pval + .Machine$double.eps, pval))
# show the % of the samples that have the relab of the genus > 10^-4
perc_thre <- g_relab %>%
count(genus, relab > 10^-4) %>%
filter(`relab > 10^-4` == 'TRUE') %>%
mutate(passthre_perc = round(n/1009*100, 0))
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc))
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc)) %>%
mutate(
padj = p.adjust(changed_pval, method = 'BH'),
neglogp = -log10(padj))
spearman_all %>% write_csv('../data/172_spearman_all.csv')
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc)) %>%
filter(passthre_perc > 10) %>%
mutate(padj = p.adjust(changed_pval, method = 'BH'),
neglogp = -log10(padj)) %>%
mutate(sig05 = if_else(padj < 0.05, T, F)) %>%
mutate(grp = if_else(rho >= 0, 'positive', 'negative')) %>%
arrange(rho, desc(genus))
# show the % of the samples that have the relab of the genus > 10^-4
perc_thre <- g_relab %>%
count(genus, relab > 10^-4) %>%
filter(`relab > 10^-4` == 'TRUE') %>%
mutate(passthre_perc = round(n/1009*100, 0))
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc)) %>%
filter(passthre_perc > 10) %>%
mutate(padj = p.adjust(changed_pval, method = 'BH'),
neglogp = -log10(padj)) %>%
mutate(sig05 = if_else(padj < 0.05, T, F)) %>%
mutate(grp = if_else(rho >= 0, 'positive', 'negative')) %>%
arrange(rho, desc(genus))
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc)) %>%
filter(passthre_perc > 10) %>%
mutate(padj = p.adjust(changed_pval, method = 'BH'),
neglogp = -log10(padj))
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc)) %>%
filter(passthre_perc > 10)
spearman_all <- spearman_res %>%
left_join(perc_thre) %>%
mutate(n = ifelse(is.na(n), 0, n),
passthre_perc = ifelse(is.na(passthre_perc), 0, passthre_perc))
spearman_res
spearman_all <- spearman_res %>%
left_join(perc_thre)
View(perc_thre)
