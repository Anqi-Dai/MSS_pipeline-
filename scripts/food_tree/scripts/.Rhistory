xmin <- lowerday - 1
xmax <- higherday + 1
# sweets and fruits
each_pt_sweets <- dtb %>%
filter(mrn == mrn_ & fdrt %in% lowerday:higherday) %>%
mutate(Food_code = as.character(Food_code) ) %>%
filter(str_detect(Food_code, '^9')) %>%
group_by(fdrt) %>%
summarise(sweetsum = sum(dehydrated_weight)) %>%
mutate(p_size  = if_else(sweetsum > s_q75, 3, 1))
each_pt_sweets %>%
ggplot(aes(x = fdrt, y = sweetsum )) +
annotate('rect', xmin = xmin, xmax = xmax, ymin = s_q25, ymax = s_q75, fill='gray',  alpha=0.3) +
geom_line(aes(x = fdrt, y = sweetsum), linetype = 'solid', size = 0.5, col = 'black') +
geom_point(aes(size = sweetsum > s_q75, col = sweetsum > s_q75)) +
scale_size_manual(values = c(2, 4)) +
scale_color_manual(values = c('black', 'red')) +
xlim(xmin, xmax) +
labs(x = '',
y = 'Sweets(g)',
title = '') +
theme_classic() +
#ylim(0, max(p11_sweets$sweetsum))+
theme(aspect.ratio=shorter_ratio, legend.position = 'none' ,
#axis.ticks.x=element_blank(),
#axis.text.x=element_blank(),
plot.margin = margin(l=-0.8,unit="cm"),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(colour = "grey85"))
sweets_panel <- each_pt_sweets %>%
ggplot(aes(x = fdrt, y = sweetsum )) +
annotate('rect', xmin = xmin, xmax = xmax, ymin = s_q25, ymax = s_q75, fill='gray',  alpha=0.3) +
geom_line(aes(x = fdrt, y = sweetsum), linetype = 'solid', size = 0.5, col = 'black') +
geom_point(aes(size = sweetsum > s_q75, col = sweetsum > s_q75)) +
scale_size_manual(values = c(2, 4)) +
scale_color_manual(values = c('black', 'red')) +
xlim(xmin, xmax)
sweets_panel
max_genus
ids <- max_genus %>%
mutate(pid = str_glue('P{as.numeric(as.factor(mrn))}'))
ids
max_genus
ids
ids <- max_genus %>%
mutate(pid = str_glue('P{as.numeric(as.factor(as.character(mrn)))}'))
ids
ids <- max_genus %>%
mutate(pid = str_glue('P{as.character(as.factor(mrn))}'))
ids
ids <- max_genus %>%
mutate(pid = str_glue('P{as.numeric(as.factor(mrn))}'))
ids
ids <- max_genus %>%
mutate(pid = str_glue('P{as.character(as.numeric(as.factor(mrn)))}'))
ids
max_genus %>%
mutate(pid = as.character(mrn))
max_genus %>%
mutate(pid = as.factor(mrn))
max_genus %>%
mutate(pid = as.factor(mrn)) %>%
mutate(pid = as.numeric(pid))
max_genus %>%
mutate(pid = as.factor(mrn)) %>%
mutate(pid = as.numeric(pid)) %>%
mutate(pid = as.character(pid))
max_genus %>%
mutate(pid = str_glue('P{as.character(as.numeric(as.factor(mrn)))}'))
max_genus %>%
mutate(pid = as.character(as.numeric(as.factor(mrn))))
max_genus %>%
mutate(pid = as.character(as.numeric(factor(mrn))))
max_genus %>%
mutate(pid = character(as.numeric(factor(mrn))))
max_genus %>%
mutate(pid = as.character(as.numeric(factor(mrn))))
max_genus %>%
mutate(pid = as.factor(mrn)) %>%
mutate(pid = as.numeric(pid)) %>%
mutate(pid = as.character(pid))
max_genus %>%
mutate(pid = as.factor(mrn)) %>%
mutate(pid = as.numeric(pid)) %>%
mutate(pid = as.character(pid)) %>%
mutate(pid = str_glue('P{pid}'))
max_genus %>%
mutate(pid = as.factor(mrn)) %>%
mutate(pid = as.numeric(pid)) %>%
mutate(pid = as.character(pid)) %>%
mutate(pid = str_glue('P{pid}'))
ids <- max_genus %>%
mutate(pid = as.factor(mrn)) %>%
mutate(pid = as.numeric(pid)) %>%
mutate(pid = as.character(pid)) %>%
mutate(pid = str_glue('P{pid}'))
ids
# do this for all of the 10 patients
plot_all4 <- function(mrn_, genus_){
# for the sake of xmin and xmax
# irep
ge_irep_all <- irep %>%
filter(str_detect(best_species, genus_)) %>%
inner_join(all802 %>%
select(sampleid, sdrt))
ge_irep_q25 <- quantile(x = ge_irep_all$iRep, 0.25)
ge_irep_q50 <- quantile(x = ge_irep_all$iRep, 0.5)
ge_irep_q75 <- quantile(x = ge_irep_all$iRep, 0.75)
ge_irep_highest <- max(ge_irep_all$iRep) + 0.05
ge_irep <- irep %>%
filter(mrn == mrn_ & str_detect(best_species, genus_))
lowerday_irep <- min(ge_irep$sdrt)
higherday_irep <- max(ge_irep$sdrt)
# cts of the 16s
sam <- samples_castori_ag %>%
filter(mrn %in% mrn_) %>%
distinct(sampleid) %>%
pull(sampleid)
samps <- samples_castori_ag %>%
filter(mrn %in% mrn_) %>%
distinct(sampleid, mrn)
cts <- get_counts_subset(sam)
cts_ge_df <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == genus_) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct) %>%
filter(!is.na(ge_copy)) %>%
mutate(sdrt = as.numeric(sdrt))
lowerday_cts <- min(cts_ge_df$sdrt)
higherday_cts <- max(cts_ge_df$sdrt)
lowerday <- min(lowerday_cts, lowerday_irep)
higherday <- max(higherday_cts, higherday_irep)
xmin <- lowerday - 1
xmax <- higherday + 1
# sweets and fruits
each_pt_sweets <- dtb %>%
filter(mrn == mrn_ & fdrt %in% lowerday:higherday) %>%
mutate(Food_code = as.character(Food_code) ) %>%
filter(str_detect(Food_code, '^9')) %>%
group_by(fdrt) %>%
summarise(sweetsum = sum(dehydrated_weight)) %>%
mutate(p_size  = if_else(sweetsum > s_q75, 3, 1))
sweets_panel <- each_pt_sweets %>%
ggplot(aes(x = fdrt, y = sweetsum )) +
annotate('rect', xmin = xmin, xmax = xmax, ymin = s_q25, ymax = s_q75, fill='gray',  alpha=0.3) +
geom_line(aes(x = fdrt, y = sweetsum), linetype = 'solid', size = 0.5, col = 'black') +
geom_point(aes(size = sweetsum > s_q75, col = sweetsum > s_q75)) +
scale_size_manual(values = c(2, 4)) +
scale_color_manual(values = c('black', 'red')) +
xlim(xmin, xmax) +
labs(x = '',
y = 'Sweets(g)',
title = '') +
theme_classic() +
#ylim(0, max(p11_sweets$sweetsum))+
theme(aspect.ratio=shorter_ratio, legend.position = 'none' ,
#axis.ticks.x=element_blank(),
#axis.text.x=element_blank(),
plot.margin = margin(l=-0.8,unit="cm"),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(colour = "grey85"))
each_pt_fruits <- dtb %>%
filter(mrn == mrn_ & fdrt %in% lowerday:higherday) %>%
mutate(Food_code = as.character(Food_code) ) %>%
filter(str_detect(Food_code, '^6')) %>%
group_by(fdrt) %>%
summarise(fruitsum = sum(dehydrated_weight)) %>%
mutate(p_size  = if_else(fruitsum > f_q75, 3, 1))
fruits_panel <- each_pt_fruits %>%
ggplot(aes(x = fdrt, y = fruitsum )) +
annotate('rect', xmin = xmin, xmax = xmax, ymin = f_q25, ymax = f_q75, fill='gray',  alpha=0.3) +
geom_line(aes(x = fdrt, y = fruitsum), linetype = 'solid', size = 0.5, col = 'black') +
geom_point(aes(size = fruitsum > f_q75, col = fruitsum > f_q75)) +
scale_size_manual(values = c(2, 4)) +
scale_color_manual(values = c('black', 'red')) +
xlim(xmin, xmax) +
labs(x = '',
y = 'Fruits(g)',
title = '') +
theme_classic() +
#ylim(0, max(p11_fruits$fruitsum))+
theme(aspect.ratio=shorter_ratio, legend.position = 'none' ,
#axis.ticks.x=element_blank(),
#axis.text.x=element_blank(),
plot.margin = margin(l=-0.8,unit="cm"),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(colour = "grey85"))
# plot the total abundance data
cts_ge <- cts_ge_df %>%
mutate(max_pt = if_else(ge_copy == max(cts_ge_df$ge_copy), T, F))
# find the samples that have zero relab in this genus
ge_copies <- cts_ge %>%
#filter(sdrt %in% -5:15) %>%
#mutate(ge_copy = ge_copy/1e7) %>%
ggplot(aes(x = sdrt, y = ge_copy )) +
geom_line(aes(x = sdrt, y = ge_copy), linetype = 'solid', size = 0.5, col = 'black') +
geom_point(aes(size = max_pt, col = max_pt)) +
scale_size_manual(values = c(2, 4)) +
scale_color_manual(values = c('black', 'red')) +
xlim(xmin, xmax) +
labs(x = 'Transplant day',
y = str_glue('{genus_}\ncopies /g'),
title = '') +
theme_classic() +
theme(aspect.ratio=shorter_ratio,legend.position = 'none',
plot.margin = margin(l=-0.8,unit="cm"),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(colour = "grey85"))
# plot the irep and total abundance data for those patients for the genus with the highest irep value
ge_irep <-  ge_irep_all %>%
#filter(sdrt %in% -5:15) %>%
filter(mrn == mrn_) %>%
ggplot(aes(x = sdrt, y = iRep )) +
annotate('rect', xmin = xmin, xmax = xmax, ymin = ge_irep_q25, ymax = ge_irep_q75, fill='gray',  alpha=0.3) +
geom_point(aes(size = iRep > ge_irep_q75, col = iRep > ge_irep_q75)) +
scale_size_manual(values = c(2, 4)) +
scale_color_manual(values = c('black', 'red')) +
labs(title = str_glue('{}')) +
xlim(xmin, xmax) +
ylim(1, ge_irep_highest) +
labs(x = '',
y = str_glue('{genus_}\ngrowth rate'),
title = '')+
theme_classic()+
theme(aspect.ratio=shorter_ratio, legend.position = 'none' ,
#axis.text.x=element_blank(),
#axis.ticks.x=element_blank(),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(color = "grey85"))
id <- ids %>%
filter(mrn == mrn_) %>%
pull(pid)
all4 <-  plot_grid(sweets_panel, fruits_panel,ge_irep, ge_copies,
ncol = 1,axis = 'lbrt', align = 'hv')
ggsave(str_glue('../data/133_{id}_all4.pdf'), height = 8)
return(all4)
}
pt_df <- max_genus %>% ungroup() %>%
slice(8)
pt <- pt_df %>% pull(mrn)
ge <- pt_df %>% pull(best_genus)
plot_all4(pt,ge)
other10 <- pmap(max_genus %>% select(-iRep), function(mrn, best_genus){
plot_all4(mrn,best_genus)
})
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(cowplot)
library(ggimage)
library(lemon)
axis_text_size <- 8
axis_title_size <- 10
stip_txt_size <- 8
alpha_val <- 0.05
point_size <- 1.2
scatter_col <- 'gray14'
pick_point_size <- 1
pick_line_size <- 0.5
example_pt_line_size <- 0.3
diet_line_color <- '#E41A1C'
stool_line_color <- 'blue'
umap_pt_size <- 1
# the colors for each food group specified and saved here
fpalette <- tribble(
~fg1_name, ~color, ~fgrp1,
#--|--|
'fg_milk' , '#3498DB', '1',
'fg_meat' , '#591605', '2',
'fg_egg' , '#F1C40F', '3',
'fg_legume' , '#E67E22', '4',
'fg_grain' , '#D35400', '5',
'fg_fruit' , '#7D3C98', '6',
'fg_veggie' , '#229954', '7',
'fg_oils' , '#707B7C',  '8',
'fg_sweets' , '#db2589' , '9'
)
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
get_table_from_database('shotgun_lookup_ad')
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
dtb %>% distinct(Food_code)
# how many days of data among all of the patients?
dtb %>% count(mrn,  fdrt) %>%
count(mrn) %>%
summarise(total_days = sum(n))
dtb %>% distinct(Food_NSC)
dtb %>% count(mrn, fdrt) %>%
distinct(mrn, fdrt) %>%
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(brms)
library(ggpubr)
options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
ncores <- parallel::detectCores()
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100)
axis_text_size <- 7
axis_title_size <- 7
cts <- read_csv('../data/cleaned_stool/022_ALL_stool_samples_genus_counts.csv') %>%
filter(sampleid %in% meta$sampleid)
thre <- seq(0.0001, 0.002, 0.0001)
thre %>%
set_names(thre) %>%
map_dfr(function(num){
cts %>%
group_by(genus) %>%
count(relab > num) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 10) %>%
nrow
}) %>%
gather('thre', 'num')
target_genera <-  cts %>%
group_by(genus) %>%
count(relab > 0.002) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 10) %>%
pull(genus)
thre <- seq(0.0001, 0.001, 0.0001)
thre %>%
set_names(thre) %>%
map_dfr(function(num){
topn_cts %>%
group_by(genus) %>%
count(relab > num) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 2) %>%
nrow
}) %>%
gather('thre', 'num')
# please add to S8 klebsiella and other major enterobacteriaceae (e.g. top 5 enterobacteriaceae genera)
# to find out what genera are in enterobacteriaceae
library(vdbR)
connect_database()
get_table_from_database('asv_annotation_blast_ag')
topn <- asv_annotation_blast_ag %>%
filter(family == 'Enterobacteriaceae') %>%
distinct(genus)
topn_cts <- cts %>%
filter(genus %in% topn$genus)
gcts <- read_csv('../data/088_genus_relab_log10_wide.csv') %>%
select(sampleid, all_of(target_genera))
full <- meta %>%
inner_join(gcts)
priors <- c(# for the food group variables
prior(normal(0, 1.2), class = 'b', coef = "fg_egg"),
prior(normal(0, 1.2), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1.2), class = 'b', coef = "fg_grain"),
prior(normal(0, 1.2), class = 'b', coef = "fg_legume"),
prior(normal(0, 1.2), class = 'b', coef = "fg_meat"),
prior(normal(0, 1.2), class = 'b', coef = "fg_milk"),
prior(normal(0, 1.2), class = 'b', coef = "fg_oils"),
prior(normal(0, 1.2), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1.2), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(-3, 1), class = 'b', coef = "intensityreduced"),
prior(normal(-3, 1), class = 'b', coef = "intensityablative"),
prior(normal(-3, 1), class = 'b', coef = "intensitynonablative"))
entero_genus <- brm( Enterococcus  ~
0 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
intensity +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin),
data = full,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 456, sample_prior = T)
post_enterco <- suppressWarnings(posterior_samples(entero_genus))
post_enterco %>%  write_csv('../data/087_Enterococcus_model_fg_post.csv')
prior_entero <- prior_draws(entero_genus)
ave_each_fg_prior <- prior_entero %>%
mutate(mean_fg_prior_entero =
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_intensityreduced ) %>%
select(mean_fg_prior_entero) %>%
mutate(grp = 'ave_each')  %>%
mutate(within_range = if_else(mean_fg_prior_entero >= min(full$Enterococcus) &  mean_fg_prior_entero <= max(full$Enterococcus), T, F))
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
prior_entero <- prior_draws(entero_genus)
ave_each_fg_prior <- prior_entero %>%
mutate(mean_fg_prior_entero =
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_intensityreduced ) %>%
select(mean_fg_prior_entero) %>%
mutate(grp = 'ave_each')  %>%
mutate(within_range = if_else(mean_fg_prior_entero >= min(full$Enterococcus) &  mean_fg_prior_entero <= max(full$Enterococcus), T, F))
prior_enterococcus <- ave_each_fg_prior %>%
gghistogram(x = 'mean_fg_prior_entero', fill = 'within_range', color = 'white',
xlab = 'Predicted log10(Enterococcus)\nwith prior distribution',
title = 'Enterococcus') +
geom_vline(xintercept = min(full$Enterococcus), linetype = 'dashed') +
geom_vline(xintercept = max(full$Enterococcus), linetype = 'dashed')  +
theme(legend.position = 'none')
ave_each_fg_prior %>%
count(within_range) %>%
mutate(perc = n/sum(n)*100)
prior_enterococcus %>%
write_rds('../data/087_prior_enterococcus_hist.rds'
)
prior_enterococcus
ave_each_fg_prior %>%
count(within_range) %>%
mutate(perc = n/sum(n)*100)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(cowplot)
axis_text_size <- 10
axis_title_size <- 10
div_prior <- read_rds('../data/068_prior_diversity_hist.rds')
enter_prior <- read_rds('../data/087_prior_enterococcus_hist.rds')
prior <- plot_grid(  div_prior,enter_prior,
nrow = 1, labels = c('A','B'), rel_widths = c(1, 1))
ggsave('../figs/paper/S4_div_entero_prior_086.pdf',
width = 170, height = 60, units = c("mm"),
dpi = 400, device = 'pdf', plot = prior)
View(mean_fg)
View(meta)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
new <- read_csv('../data/129_new_76_full_patient_info.csv')
View(new)
