item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
macronutrients_alpha_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Factor variables',
title = expression(Microbiome~alpha~diversity)) +
theme_classic() +
theme(legend.position = 'none',
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
ggsave('../figs/paper/078_macronutrients_alpha_model_fat_coeff_forest_binary.eps',
width = 80,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps')
macronutrients_alpha_factor %>%
write_rds('../data/090_macronutrients_alpha_factor.rds')
# the binary vars
coeff_bi <- posterior_samples(model_alpha_macro_fat, '^b_')  %>%
select(!starts_with('b_ave')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
macronutrients_alpha_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Factor variables',
title = expression(Microbiome~alpha~diversity)) +
theme_classic() +
theme(legend.position = 'none',
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
ggsave('../figs/paper/078_macronutrients_alpha_model_fat_coeff_forest_binary.eps',
width = 80,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps')
macronutrients_alpha_factor %>%
write_rds('../data/090_macronutrients_alpha_factor.rds')
alpha_main <- read_rds('../data/090_macronutrients_alpha_main.rds')
alpha_factor <- read_rds('../data/090_macronutrients_alpha_factor.rds')
alpha <-  plot_grid(  alpha_main,alpha_factor,
nrow = 1, labels = c('A','B'), rel_widths = c(1, 1))
alpha_main <- read_rds('../data/090_macronutrients_alpha_main.rds')
alpha_factor <- read_rds('../data/090_macronutrients_alpha_factor.rds')
alpha <-  plot_grid(  alpha_main,alpha_factor,
nrow = 1, labels = c('A','B'), rel_widths = c(1, 1))
alpha
?plot_grid
alpha_main <- read_rds('../data/090_macronutrients_alpha_main.rds')
alpha_factor <- read_rds('../data/090_macronutrients_alpha_factor.rds')
alpha <-  plot_grid(  alpha_main,alpha_factor,
nrow = 1, labels = c('A','B'), rel_widths = c(1, 1), align = 'hv')
alpha
alpha_main <- read_rds('../data/090_macronutrients_alpha_main.rds')
alpha_factor <- read_rds('../data/090_macronutrients_alpha_factor.rds')
alpha <-  plot_grid(  alpha_main,alpha_factor,
nrow = 1, labels = c('A','B'), rel_widths = c(1, 1), align = 'hv', axis = 'tblr')
alpha
alpha_main <- read_rds('../data/090_macronutrients_alpha_main.rds')
alpha_factor <- read_rds('../data/090_macronutrients_alpha_factor.rds')
alpha <-  plot_grid(  alpha_main,alpha_factor,
nrow = 1, labels = c('A','B'), rel_widths = c(1, 1.5), align = 'hv', axis = 'tblr')
alpha
alpha_main <- read_rds('../data/090_macronutrients_alpha_main.rds')
alpha_factor <- read_rds('../data/090_macronutrients_alpha_factor.rds')
alpha <-  plot_grid(  alpha_main,alpha_factor,
nrow = 1, labels = c('A','B'), rel_widths = c(1, 1), align = 'hv', axis = 'tblr')
alpha
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv')
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv')
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_text_color <- ifelse(sort(target_genera, decreasing = F) %in% c('Blautia','Enterococcus'), 'red', 'black')
knitr::opts_chunk$set(echo = TRUE)
cts <- read_csv('../data/cleaned_stool/ALL_stool_samples_genus_counts.csv') %>%
filter(sampleid %in% meta$sampleid)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
cts <- read_csv('../data/cleaned_stool/ALL_stool_samples_genus_counts.csv') %>%
filter(sampleid %in% meta$sampleid)
thre <- seq(0.0001, 0.002, 0.0001)
thre %>%
set_names(thre) %>%
map_dfr(function(num){
cts %>%
group_by(genus) %>%
count(relab > num) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 10) %>%
nrow
}) %>%
gather('thre', 'num')
target_genera <-  cts %>%
group_by(genus) %>%
count(relab > 0.002) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 10) %>%
pull(genus)
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_text_color <- ifelse(sort(target_genera, decreasing = F) %in% c('Blautia','Enterococcus'), 'red', 'black')
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11, colour = genus_text_color),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
library(tidyverse)
library(ggpubr)
library(tidybayes)
library(brms)
library(rstan)
options(mc.cores = parallel::detectCores())
ncores = parallel::detectCores()
rstan_options(auto_write = TRUE)
axis_text_size <- 10
axis_title_size <- 10
full <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_dietall_genera36.csv')
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_text_color <- ifelse(sort(target_genera, decreasing = F) %in% c('Blautia','Enterococcus'), 'red', 'black')
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11, colour = genus_text_color),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_fat_ggplot.pdf', width = 10, height = 3)
ggsave('../figs/paper/078_heatmap_genus_36_macro_fat_ggplot.jpg', width = 10, height = 3)
View(post_res_genera)
post_res_genera
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = if_else(item == 'Fiber', 'Fibers', item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_text_color <- ifelse(sort(target_genera, decreasing = F) %in% c('Blautia','Enterococcus'), 'red', 'black')
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11, colour = genus_text_color),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_fat_ggplot.pdf', width = 10, height = 3)
ggsave('../figs/paper/078_heatmap_genus_36_macro_fat_ggplot.jpg', width = 10, height = 3)
View(post_df)
coeff_factor <- post_df %>%
select(!starts_with('b_ave'))
View(coeff_factor)
coeff_factor <- post_df %>%
select(!starts_with('b_ave')) %>%
select(-b_Intercept)
coeff_factor <- post_df %>%
select(!starts_with('b_ave')) %>%
select(starts_with('b_'))
# the factor variables for the genus macro fat
coeff_factor <- post_df %>%
select(!starts_with('b_ave')) %>%
select(starts_with('b_')) %>%
select(-b_Intercept)
# the factor variables for the genus macro fat
coeff_factor <- post_df %>%
select(!starts_with('b_ave')) %>%
select(starts_with('b_')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_factor %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme_classic() +
theme(legend.position = 'none',
aspect.ratio=1)
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv')
post_df <- read_csv('../data/078_genus_macro_fat_model_post.csv')
# the factor variables for the genus macro fat
coeff_factor <- post_df %>%
select(!starts_with('b_ave')) %>%
select(starts_with('b_')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_factor %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme_classic() +
theme(legend.position = 'none',
aspect.ratio=1)
# the factor variables for the genus macro fat
coeff_factor <- post_df %>%
select(!starts_with('b_ave')) %>%
select(starts_with('b_')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_factor %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Binary variables') +
theme_classic() +
theme(legend.position = 'none',
aspect.ratio=1)
# the factor variables for the genus macro fat
coeff_factor <- post_df %>%
select(!starts_with('b_ave')) %>%
select(starts_with('b_')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
coeff_factor %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Factor variables') +
theme_classic() +
theme(legend.position = 'none',
aspect.ratio=1)
genus_macro_fat_factor <- coeff_factor %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Factor variables') +
theme_classic() +
theme(legend.position = 'none',
aspect.ratio=1)
genus_macro_fat_factor %>%
write_rds('../data/090_genus_macro_fat_factor.rds')
View(post_df)
View(post_df)
# the factor variables for the genus macro fat
coeff_factor <- post_df %>%
select(!starts_with('b_ave')) %>%
select(starts_with('b_')) %>%
select(-b_Intercept) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_inten_non' ~ 'Intensity: nonablative',
item == 'b_inten_ab' ~ 'Intensity: ablative',
item ==  'b_inten_re' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item = factor(item, levels = c('b_empiF','b_empiT','b_inten_non','b_inten_re','b_inten_ab','b_enF','b_enT','b_tpnF','b_tpnT'))) %>%
mutate(item_name = fct_reorder(item_name, coeff, .fun=median, .desc = F))
genus_macro_fat_factor <- coeff_factor %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Factor variables') +
theme_classic() +
theme(legend.position = 'none',
aspect.ratio=1)
genus_macro_fat_factor %>%
write_rds('../data/090_genus_macro_fat_factor.rds')
genus_macro_fat_main %>% write_rds('../data/090_genus_macro_fat_main.rds')
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_text_color <- ifelse(sort(target_genera, decreasing = F) %in% c('Blautia','Enterococcus'), 'red', 'black')
genus_macro_fat_main <- ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11, colour = genus_text_color),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
genus_macro_fat_main %>% write_rds('../data/090_genus_macro_fat_main.rds')
ggsave('../figs/paper/078_heatmap_genus_36_macro_fat_ggplot.pdf', width = 10, height = 3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(tidybayes)
library(brms)
library(rstan)
options(mc.cores = parallel::detectCores())
ncores = parallel::detectCores()
rstan_options(auto_write = TRUE)
axis_text_size <- 10
axis_title_size <- 10
full <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_dietall_genera36.csv')
alpha_macro_fat <- log(simpson_reciprocal) ~ 1 +
ave_fiber +
ave_fat +
ave_Sugars +
inten_non + inten_ab + inten_re +
EN +
TPN +
empirical +
(1 | mrn) +
(1 | timebin)
priors_alpha_macro_fat <- c(
# for the macro nutrients
prior(normal(0, 0.4), class = 'b', coef = "ave_fiber"),
prior(normal(0, 0.4), class = 'b', coef = "ave_fat"),
prior(normal(0, 0.4), class = 'b', coef = "ave_Sugars"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
# for the intercept
prior(normal(2, 0.5), class = 'Intercept'))
# vet the prior
model_alpha_macro_fat  <- brm( alpha_macro_fat,
data = full,
warmup = 1000, iter = 3000,
prior = priors_alpha_macro_fat,
control = list(adapt_delta = 0.99),
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
