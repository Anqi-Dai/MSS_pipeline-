meta
had_cefepime <- meta %>%
select(sampleid, mrn, sdrt)
View(had_cefepime)
?int_overlaps
cefepime
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('samples_castori_ag')
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection))
View(had_cefepime)
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d))
library(lubridate)
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d))
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop))
had_cefepime
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p2d_int)
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
select(-start, -stop)
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p2d_int)
cross <- had_cefepime %>%
full_join(cefepime)
View(cross)
cross <- had_cefepime %>%
full_join(cefepime, by = "mrn")
cross <- had_cefepime %>%
inner_join(cefepime, by = "mrn")
cross
cross <- had_cefepime %>%
inner_join(cefepime, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('samples_castori_ag')
#abx <- read_rds('/Volumes/vandenbrinklab/Nutrition and microbiota/medication_exposures/meds_nutrition_batch1_2022-11-29.rds')
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
ptb <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
picked <-  c("azithromycin","cefepime", "ciprofloxacin", "imipenem_cilastatin", "ertapenem","levofloxacin","linezolid","meropenem","metronidazole","piperacillin_tazobactam","sulfamethoxazole_trimethoprim")
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn) %>%
mutate (drug_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral","vancomycin_oral", "vancomycin_iv"),
if_else (drug_name_clean %in% picked,
drug_name_clean,"atb_other"))) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_p_start = start - hct,
abx_p_stop = stop - hct) %>%
filter (abx_p_start > -30 & abx_p_stop < 70)
get_table_from_database ("antibiotics_antibacterial_multicenter_ag")
picked <-  c("azithromycin","cefepime", "ciprofloxacin", "imipenem_cilastatin", "ertapenem","levofloxacin","linezolid","meropenem","metronidazole","piperacillin_tazobactam","sulfamethoxazole_trimethoprim")
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn) %>%
mutate (drug_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral","vancomycin_oral", "vancomycin_iv"),
if_else (drug_name_clean %in% picked,
drug_name_clean,"atb_other"))) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_p_start = start - hct,
abx_p_stop = stop - hct) %>%
filter (abx_p_start > -30 & abx_p_stop < 70)
View(abx)
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop))
View(cefepime)
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p1d, p2d, p2d_int)
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p1d, p2d, p2d_int)
cross <- had_cefepime %>%
inner_join(cefepime, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int))
View(cross)
cross <- had_cefepime %>%
inner_join(cefepime, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p1d, p2d, p2d_int)
cross <- had_cefepime %>%
inner_join(cefepime, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
# then repeat this for all of the drugs
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p1d, p2d, p2d_int)
cross <- had_cefepime %>%
inner_join(cefepime, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
# then repeat this for all of the drugs
View(abx)
# then repeat this for all of the drugs
# all the drugs that I wanna see if there is an exposure in the previous 2 days
all_drugs <- abx %>%
distinct(drug_clean)
View(all_drugs)
# then repeat this for all of the drugs
# all the drugs that I wanna see if there is an exposure in the previous 2 days
all_drugs <- abx %>%
distinct(drug_clean) %>% pull(drug_clean)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p1d, p2d, p2d_int)
all_drugs <- abx %>%
distinct(drug_clean) %>% pull(drug_clean)
# then repeat this for all of the drugs
# all the drugs that I wanna see if there is an exposure in the previous 2 days
all_drugs <- abx %>%
distinct(drug_clean) %>% pull(drug_clean)
find_exposure <- all_drugs %>%
set_names(all_drugs) %>%
map(function(d){
each_drug = abx %>%
filter(drug_clean == d) %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_drug_res = p2d_df %>%
inner_join(each_drug, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
return(had_drug_res)
})
View(find_exposure)
View(find_exposure[["ciprofloxacin"]])
find_exposure <- all_drugs %>%
set_names(all_drugs) %>%
map_dfr(function(d){
each_drug = abx %>%
filter(drug_clean == d) %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_drug_res = p2d_df %>%
inner_join(each_drug, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
return(had_drug_res)
})
View(find_exposure)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p1d, p2d, p2d_int)
# then repeat this for all of the drugs
# all the drugs that I wanna see if there is an exposure in the previous 2 days
all_drugs <- abx %>%
distinct(drug_clean) %>% pull(drug_clean)
find_exposure <- all_drugs %>%
set_names(all_drugs) %>%
map_dfr(function(d){
each_drug = abx %>%
filter(drug_clean == d) %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_drug_res = p2d_df %>%
inner_join(each_drug, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
return(had_drug_res)
})
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p1d, p2d, p2d_int)
# then repeat this for all of the drugs
# all the drugs that I wanna see if there is an exposure in the previous 2 days
all_drugs <- abx %>%
distinct(drug_clean) %>% pull(drug_clean)
find_exposure <- all_drugs %>%
set_names(all_drugs) %>%
map_dfr(function(d){
each_drug = abx %>%
filter(drug_clean == d) %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_drug_res = p2d_df %>%
inner_join(each_drug, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
return(had_drug_res)
})
View(find_exposure)
find_exposure <- all_drugs %>%
set_names(all_drugs) %>%
map_dfr(function(d){
each_drug = abx %>%
filter(drug_clean == d) %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_drug_res = p2d_df %>%
inner_join(each_drug, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
return(had_drug_res)
}) %>%
left_join(ptb %>% select(mrn, hct))
find_exposure
find_exposure <- all_drugs %>%
set_names(all_drugs) %>%
map_dfr(function(d){
each_drug = abx %>%
filter(drug_clean == d) %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_drug_res = p2d_df %>%
inner_join(each_drug, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
return(had_drug_res)
}) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_start_day = abx_start - hct)
library(ggpubr)
find_exposure %>%
gghistogram(x = 'abx_start_day', facet.by = 'drug_clean')
find_exposure %>%
gghistogram(x = 'abx_start_day', facet.by = 'drug_clean', fill = 'gray')
find_exposure %>%
gghistogram(x = 'abx_start_day', facet.by = 'drug_clean', fill = 'black')
find_exposure %>%
gghistogram(x = 'abx_start_day', facet.by = 'drug_clean', fill = 'black') +
geom_vline( x=0)
find_exposure %>%
gghistogram(x = 'abx_start_day', facet.by = 'drug_clean', fill = 'black') +
geom_vline( xintercept =0)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
# then repeat this for all of the drugs
# all the drugs that I wanna see if there is an exposure in the previous 2 days
all_drugs <- abx %>%
distinct(drug_clean) %>% pull(drug_clean)
find_exposure <- all_drugs %>%
set_names(all_drugs) %>%
map_dfr(function(d){
each_drug = abx %>%
filter(drug_clean == d) %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_drug_res = p2d_df %>%
inner_join(each_drug, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
return(had_drug_res)
}) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_start_day = abx_start - hct)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
# then repeat this for all of the drugs
# all the drugs that I wanna see if there is an exposure in the previous 2 days
all_drugs <- abx %>%
distinct(drug_clean) %>% pull(drug_clean)
find_exposure <- all_drugs %>%
set_names(all_drugs) %>%
map_dfr(function(d){
each_drug = abx %>%
filter(drug_clean == d) %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_drug_res = p2d_df %>%
inner_join(each_drug, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
return(had_drug_res)
}) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_start_day = abx_start - hct)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
# then repeat this for all of the drugs
# all the drugs that I wanna see if there is an exposure in the previous 2 days
all_drugs <- abx %>%
distinct(drug_clean) %>% pull(drug_clean)
find_exposure <- all_drugs %>%
set_names(all_drugs) %>%
map_dfr(function(d){
each_drug = abx %>%
filter(drug_clean == d) %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
rename(abx_start = start,
abx_stop = stop)
had_drug_res = p2d_df %>%
inner_join(each_drug, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
return(had_drug_res)
}) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_start_day = abx_start - hct)
find_exposure %>% write_csv('../data/134_743stool_samples_p2d_drug_exposure.csv')
find_exposure %>% write_rds('../data/134_743stool_samples_p2d_drug_exposure.rds')
all_drugs
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn) %>%
mutate (drug_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral","vancomycin_oral", "vancomycin_iv"),
if_else (drug_name_clean %in% picked,
drug_name_clean,"atb_other"))) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_p_start = start - hct,
abx_p_stop = stop - hct) %>%
filter (abx_p_start > -30 & abx_p_stop < 70)
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn) %>%
mutate (drug_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral","vancomycin_oral", "vancomycin_iv"),
if_else (drug_name_clean %in% picked,
drug_name_clean,"atb_other"))) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_p_start = start - hct,
abx_p_stop = stop - hct) %>%
filter (abx_p_start > -30 & abx_p_stop < 70)
View(abx)
find_exposure
empirical_abx <- c('vancomycin_oral',	'imipenem_cilastatin',	'meropenem',	'ertapenem',		'cefepime',		'linezolid',	'metronidazole',	'piperacillin_tazobactam')
find_exposure
empirical_exposed <- find_exposure %>%
filter(drug_clean %in% empirical_abx)
View(empirical_exposed)
empirical_exposed %>% distinct(sampleid)
empirical_exposed <- find_exposure %>%
filter(drug_clean %in% empirical_abx)
empirical_exposed <- find_exposure %>%
filter(drug_clean %in% empirical_abx)
View(empirical_exposed)
empirical_exposed
empirical_exposed <- find_exposure %>%
filter(drug_clean %in% empirical_abx)
empirical_exposed %>% distinct(sampleid)
new_exposed <- empirical_exposed %>% distinct(sampleid)
View(meta)
old_exposed <- meta %>%
filter(empirical == 'TRUE')
library(ggvenn)
two_list <- list(old = old_exposed$sampleid,new = new_exposed$sampleid)
ggvenn(two_list)
library(ggvenn)
two_list <- list(old = old_exposed$sampleid,new = new_exposed$sampleid)
ggvenn(two_list)
library(ggvenn)
two_list <- list(old = old_exposed$sampleid,new = new_exposed$sampleid)
ggvenn(two_list)
empirical_abx <- c('vancomycin_oral',	'imipenem_cilastatin',	'meropenem',	'ertapenem',		'cefepime',		'linezolid',	'metronidazole',	'piperacillin_tazobactam')
empirical_exposed <- find_exposure %>%
filter(drug_clean %in% empirical_abx)
new_exposed <- empirical_exposed %>% distinct(sampleid)
old_exposed <- meta %>%
filter(empirical == 'TRUE')
library(ggvenn)
two_list <- list(old = old_exposed$sampleid,new = new_exposed$sampleid)
ggvenn(two_list)
empirical_abx <- c('vancomycin_oral',	'imipenem_cilastatin',	'meropenem',	'ertapenem',		'cefepime',		'linezolid',	'metronidazole',	'piperacillin_tazobactam')
empirical_exposed <- find_exposure %>%
filter(drug_clean %in% empirical_abx)
new_exposed <- empirical_exposed %>% distinct(sampleid)
old_exposed <- meta %>%
filter(empirical == 'TRUE')
library(ggvenn)
two_list <- list(old = old_exposed$sampleid,new = new_exposed$sampleid)
ggvenn(two_list)
meta
View(new_exposed)
# need to update my meta table with this newly updated exposure data
new_meta <- meta %>%
mutate(empirical = if_else(sampleid %in% new_exposed$sampleid, T, F))
View(new_meta)
new_meta %>% write_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
