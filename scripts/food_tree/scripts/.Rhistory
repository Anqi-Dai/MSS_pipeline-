mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, .keep_all = T)
smoodf <- unit %>%
filter( Food_code %in% smoocode)
View(smoodf)
nonsmoo <-  unit %>%
filter(! Food_code %in% smoocode) %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, .keep_all = T) %>%
split(.$Food_code) %>%
map_dfr(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
}) %>%
mutate(new_code = str_glue('{Food_code}_{id}')) %>%
select(-id)
View(nonsmoo)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T)
View(smoodf)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
disinct()
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
distinct()
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T)
View(psmoothie)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T)
View(smoodf)
smoodf <- unit %>%
filter( Food_code %in% smoocode)  %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
select(Food_NSC, Food_code, description, ends_with('per_g')) %>%
distinct(Food_code, description, protein_per_g, fat_per_g, Carbohydrate_per_g, Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
split(.$Food_code) %>%
map_dfr(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
}) %>%
mutate(new_code = str_glue('{Food_code}_{id}')) %>%
select(-id)
View(smoodf)
Will <- bind_rows(en_unit, smoodf, nonsmoo)
View(Will)
Will <- bind_rows(en_unit, smoodf, nonsmoo)
Will <- bind_rows(en_unit, smoodf, nonsmoo)
Will <- bind_rows(en_unit, smoodf, nonsmoo)
Will %>%
write_csv('../data/154_for_will_pergram_macronutrients_all.csv')
View(Will)
View(Will)
View(Will)
View(Will)
View(Will)
View(DTB)
View(DTB)
View(Will)
knitr::opts_chunk$set(echo = TRUE)
# convert to the newcode
smoothies <- DTB %>%
filter(Food_code %in% smoocode)
View(smoothies)
View(Will)
# convert to the newcode
smoothies <- DTB %>%
filter(Food_code %in% smoocode) %>%
left_join(Will %>% select(Food_NSC, Food_code, new_code))
# convert to the newcode
smoothies <- DTB %>%
filter(Food_code %in% smoocode) %>%
left_join(Will %>% select(Food_NSC, Food_code, new_code), by = c("Food_NSC", "Food_code"))
View(Will)
# need to have a new table with foodnsc foodcode -- new code
smooall <- unit %>%
filter( Food_code %in% smoocode) %>%
distinct(Food_NSC, Food_code)
Will %>%
filter(Food_code %in% smoocode) %>%
distinct(new_code)
View(smooall)
View(psmoothie)
View(psmoothie)
View(DTB)
View(psmoothie)
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu)
View(redo)
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu)
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu)
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
distinct(Food_code, protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T)
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
distinct(Food_code, protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T)
# but then there are 14 food codes that are in the diet table that don't appear in the macronutrients table
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
distinct(Food_code, protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))
# but then there are 14 food codes that are in the diet table that don't appear in the macronutrients table
redo <- unit %>%
mutate(protein_per_g = Protein_psu/dehydrated_psu,
fat_per_g = Fat_psu/dehydrated_psu,
Carbohydrate_per_g = Carbohydrate_psu/dehydrated_psu,
Fiber_per_g = Fiber_psu/dehydrated_psu,
Sugars_per_g = Sugars_psu/dehydrated_psu) %>%
distinct(Food_code, protein_per_g,fat_per_g, Carbohydrate_per_g,  Fiber_per_g, Sugars_per_g, .keep_all = T) %>%
select( Food_code, description, ends_with('per_g'))
redo %>% distinct(Food_code) %>% nrow
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv')
View(p2d)
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather
p2d
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather %>%
filter(str_detect(key, '\\d'))
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather %>%
filter(str_detect(key, '^\\d'))
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather %>%
filter(str_detect(key, '^\\d')) %>%
distinct(key)
p2d
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather %>%
filter(str_detect(key, '^\\d')) %>%
distinct(key) %>%
mutate_(key = as.numeric(key))
p2d <- read_csv('../data/152_each_food_code_p2d_ave_intake_both_batches.csv') %>%
gather %>%
filter(str_detect(key, '^\\d')) %>%
distinct(key) %>%
mutate(key = as.numeric(key))
redo
length(intersect(redo$Food_code, p2d$key))
setdiff(p2d$key, redo$Food_code)
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(protein_per_g = Protein_g/dehydrated_weight,
fat_per_g = Fat_g/dehydrated_weight,
Carbohydrate_per_g = Carbohydrates_g/dehydrated_weight,
Fiber_per_g = Fibers_g/dehydrated_weight,
Sugars_per_g = Sugars_g/dehydrated_weight) %>%
select(Food_NSC, Food_code, description, ends_with('per_g'))  %>%
split(.$Food_code) %>%
map_dfr(function(eachcode ){
eachcode %>% mutate(id = seq(nrow(eachcode)))
}) %>%
mutate(new_code = str_glue('{Food_code}_{id}')) %>%
select(-id)
View(en_unit)
extra <- en_unit %>%
select(colnames(redo))
View(extra)
redoall <- bind_rows(redo, extra)
View(redoall)
redoall %>% write_csv('../data/154_redo_macronutrients_table.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(lubridate)
# the below table has the more updated data
pts <- read_csv('../data/pts_updated_through_june_2022.csv') %>%
rename_all(~ gsub(" ", "_", .)) %>%
rename(mrn = MRN) %>%
mutate(hct = lubridate::dmy(HCT))
colnames(pts)
ptb1 <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
ptb2 <- read_csv('../data/129_new_76_full_patient_info.csv')
ptb <- bind_rows(
ptb1 %>% select(mrn, hct) %>% mutate(batch = 'batch1'),
ptb2 %>% select(mrn, hct) %>% mutate(batch = 'batch2')
)
View(ptb1)
View(ptb2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vdbR)
library(lubridate)
connect_database()
get_table_from_database()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vdbR)
library(lubridate)
connect_database()
# the table from John that is the pull of the new patients clinical info
newdtb <- read_csv('../data/127_new_pt.csv')
pts <- read_csv('../data/127_new_pt.csv') %>%
distinct(mrn)
pull <- read_csv('../data/pts_updated_through_june_2022.csv') %>%
inner_join(pts, by = c('MRN' = 'mrn')) %>%
# convert the hct date to date
mutate(HCT = dmy(HCT)) %>%
arrange(MRN, desc(HCT)) %>%
# two patients that had two hct, chose the one that is closest to now
distinct(MRN, .keep_all = T) %>%
rename_with(tolower) %>%
rename_all(~ gsub(" ", "_", .))
pull %>% write_csv('../data/129_new_76_full_patient_info.csv')
pull %>% distinct(Disease)
View(pull)
# the table from John that is the pull of the new patients clinical info
newdtb <- read_csv('../data/127_new_pt.csv')
pts <- read_csv('../data/127_new_pt.csv') %>%
distinct(mrn)
pull <- read_csv('../data/pts_updated_through_june_2022.csv') %>%
inner_join(pts, by = c('MRN' = 'mrn')) %>%
# convert the hct date to date
mutate(HCT = dmy(HCT)) %>%
arrange(MRN, desc(HCT)) %>%
# two patients that had two hct, chose the one that is closest to now
distinct(MRN, .keep_all = T) %>%
rename_with(tolower) %>%
rename_all(~ gsub(" ", "_", .))
pull %>% write_csv('../data/129_new_76_full_patient_info.csv')
new <- read_csv('../data/129_new_76_full_patient_info.csv')
# Collapse MSKCC messy diseases into broad, simplified categories
disim <- pull %>%
mutate(disease.simple = case_when(
disease == "Leukemia" & sub_hist == "Acute" & sub_sub_hist == "Myelogenous" ~ 'AML',
disease == "Leukemia" & sub_hist == "Acute" &sub_sub_hist == "Lymphoblastic" ~ "ALL",
disease == "Leukemia" & sub_hist == "Chronic" & sub_sub_hist == "Myelogenous" ~ "CML",
disease == "Leukemia" & sub_hist == "Chronic" & sub_sub_hist == "Myelomonocytic" ~ "MDS/MPN",
disease == "Leukemia (Second Primary)" & sub_hist == "Acute" & sub_sub_hist == "Myelogenous" ~ "AML",
disease == "Leukemia" & sub_hist == "Acute" & sub_sub_hist == "Monoblastic" | sub_sub_hist == "Monocytic" | sub_sub_hist == "Myelomonocytic" | sub_sub_hist =="Promyelocytic" ~ "AML",
str_detect(disease, 'Aplastic') ~ "AA",
str_detect(sub_hist, 'Aplastic') ~ "AA",
str_detect(disease, 'Myelodysplastic|Myeloproliferative') ~ "MDS/MPN",
str_detect(disease, 'Non-Hodgkin') ~ "NHL",
str_detect(disease, 'Myeloma') ~ "Myeloma",
str_detect(disease, "Hodgkin's Disease") ~ "Hodgkins",
str_detect(sub_sub_hist, 'CLL') ~ "CLL",
str_detect(sub_sub_hist, 'Prolymphocytic') ~ "NHL",
str_detect(sub_sub_hist, 'Biphenotypic|Plasmacytoid Dendritic|Ambiguous|NK-LGL') ~ "other",
str_detect(disease, 'Non-Malignant Hemat Disorders') ~ "other"
))
# the NA ones
need_clean <- disim %>%
filter(is.na(disease.simple))
colnames(disim)
ptb_n <- disim %>%
select(mrn, source , intensity, hct, age, sex, disease.simple) %>%
mutate(source = if_else(str_detect(source, 'Cord' ),
'cord',
if_else(str_detect(source, 'SBA|CD34'),
'TCD',
'unmodified'))) %>%
mutate(intensity = if_else(intensity %in% c('Ablative','ABLATIVE'), 'ablative',
if_else(intensity %in% c('NONABL','Nonablative'), 'nonablative','reduced'))) %>%
mutate(disease.simple = if_else(is.na(disease.simple), 'AML', disease.simple))
View(ptb_n)
ptb_n %>% write_csv('../data/129_ptb2.csv')
ptb2 <- read_csv('../data/129_ptb2.csv')
View(ptb2)
View(ptb1)
ptb2 %>% summary
ptb1
ptb1 <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
ptb2 <- read_csv('../data/129_ptb2.csv')
ptb <- bind_rows(
ptb1 %>% select(mrn:disease.simple) %>% mutate(batch = 'batch1'),
ptb2 %>% select(mrn:disease.simple) %>% mutate(batch = 'batch2')
)
pts_tb <- pts %>%
right_join(ptb, by = c("mrn", "hct"))
ptb
pts_tb <- pts %>%
right_join(ptb, by = c("mrn", "hct"))
View(pts)
# the below table has the more updated data
pts <- read_csv('../data/pts_updated_through_june_2022.csv') %>%
rename_all(~ gsub(" ", "_", .)) %>%
rename(mrn = MRN) %>%
mutate(hct = lubridate::dmy(HCT))
colnames(pts)
ptb1 <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
ptb2 <- read_csv('../data/129_ptb2.csv')
ptb <- bind_rows(
ptb1 %>% select(mrn:disease.simple) %>% mutate(batch = 'batch1'),
ptb2 %>% select(mrn:disease.simple) %>% mutate(batch = 'batch2')
)
pts_tb <- pts %>%
right_join(ptb, by = c("mrn", "hct"))
View(pts_tb)
# the gvhd data
library(vdbR)
connect_database()
get_table_from_database('patient_allo_ks_20221104')
colnames(patient_allo_ks_20221104)
ptb_gvhd <- patient_allo_ks_20221104 %>%
right_join(ptb, by = c("mrn", "hct")) %>%
select(mrn, hct, batch, starts_with('d100'))
ptb_all <- pts_tb %>%
full_join(ptb_gvhd, by = c("mrn", "hct", "batch")) %>%
mutate(ANEUT_500_DATE = dmy(ANEUT_500_DATE)) %>%
mutate(ttancday = as.numeric(ANEUT_500_DATE - hct
)) %>%
relocate(ttancday, .after = 'TIME_ANEUT_500') %>%
# correct one patient engraftment date
mutate(ANEUT_500_DATE = if_else(ANEUT_500_DATE == '2021-11-16', '2021-10-23', as.character(ANEUT_500_DATE)),
ANEUT_500_DATE = ymd(ANEUT_500_DATE)) %>%
mutate(ttancday = as.numeric(ANEUT_500_DATE - hct)) %>%
select(-TIME_ANEUT_500)
ptb_all %>% write_csv('../data/156_combined_clinical_data.csv')
View(ptb_all)
# I have attached a table for our 177 patients with the following data:
#
# weight data (including admission weight, BMI, discharge weight, weight loss)
# nutritional needs (kilocalories/day, grams of protein/day)
# nutritional risk (per the nutritional risk index, determined at time of admission)
weight <- readxl::read_excel('../data/DietPatients_WeightData.xlsx') %>%
mutate(mrn = as.numeric(MRN)) %>%
filter(mrn %in% ptb_all$mrn) %>%
rename_all(~ gsub(" ", "_", .)) %>%
rename_all(~ gsub("\\(|\\)", "", .)) %>%
select(mrn, Admission_wt_kg, `Admission_BMI_kg/m^2`,Discharge_wt_kg, Wt_change_kg,`Wt_change_%`,`Kcal_Needs_30_kcal/kg`,`Protein_Needs_1.5_gm/kg`, Nutritional_Risk_Index_NRI ) %>%
mutate_if(is.character, as.numeric)
colnames(weight)
# "/Volumes/vandenbrinklab/Angel_Dai/Nutrition_project/visits_nutrition_cohort"
# key fields include
# admit_date
# discharge_date
# if you just select the visit where the HCT date is in between the admit_date and the discharge_date  you will identify the main transplant hospitalization, and from that can calculate length of stay and, importantly, duration of hospitalization beyond engraftment, which I think is the clinical variable most likely to correlate with nutrition
visits <- read_csv('/Volumes/vandenbrinklab/Angel_Dai/Nutrition_project/visits_nutrition_cohort/nutrition_cohort_visits_2023-02-16.csv')  %>%
mutate(mrn = as.numeric(MRN)) %>%
select(mrn, admit_date, discharge_date) %>%
mutate(visit_int = interval(admit_date, discharge_date)) %>%
inner_join(ptb_all %>% select(mrn, hct)) %>%
mutate(hct_int =  interval(hct, hct)) %>%
mutate(transplant_hospitalization = int_overlaps(visit_int, hct_int)) %>%
distinct()
transplant_stays <- visits %>%
filter(transplant_hospitalization == 'TRUE') %>%
# there is one entry needs to be removed seems wrong
arrange(mrn, admit_date) %>%
distinct(mrn, .keep_all = T) %>%
select(-ends_with('int')) %>%
mutate(leng_of_stay = as.numeric(discharge_date - admit_date)) %>%
full_join(ptb_all , by = c("mrn", "hct")) %>%
# calculate duration of hospitalization beyond engraftment
mutate(discharge_day = as.numeric(discharge_date - hct)) %>%
relocate(discharge_day, .after = 'batch') %>%
mutate(beyond_engraftment = discharge_day - ttancday) %>%
relocate(ttancday, .after = 'HCT') %>%
relocate(beyond_engraftment, .after = 'ttancday') %>%
select(-HCT) %>%
mutate(discharge_date_for_nutrition = if_else(discharge_date == '2017-02-04', '2017-02-06', as.character(discharge_date))) %>%
relocate(discharge_date_for_nutrition, .after = 'hct') %>%
relocate(ANEUT_500_DATE, .after = 'discharge_date_for_nutrition') %>%
mutate(discharge_date_for_nutrition = ymd(discharge_date_for_nutrition),
leng_of_stay = as.numeric(discharge_date_for_nutrition - admit_date)) %>%
relocate(leng_of_stay, .after = 'ANEUT_500_DATE') %>%
mutate(beyond_engraftment = as.numeric(discharge_date_for_nutrition -ANEUT_500_DATE )) %>%
relocate(beyond_engraftment, .after = 'leng_of_stay')
colnames(transplant_stays)
transplant_stays %>%
write_csv('../data/156_transplant_data.csv')
View(transplant_stays)
colnames(transplant_stays)
colnames(transplant_stays)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database()
get_table_from_database('samples_castori_ag')
View(samples_castori_ag)
get_table_from_database('asv_annotation_blast_ag')
View(asv_annotation_blast_ag)
get_table_from_database('asv_annotation_blast_detailed_ag')
View(asv_annotation_blast_detailed_ag)
install.packages('tidycmprsk')
library(survival)
install.packages('biostatR')
knitr::opts_chunk$set(echo = TRUE)
library(biostatR); library(tidyverse)
#library(biostatR);
library(tidyverse)
library(survival);library(tidycmprsk)
#library(biostatR);
library(tidyverse)
library(survival);library(tidycmprsk)
theme_set(mskRvis::theme_biostat()); mskRvis::set_msk_palette()
here_data()
# theme_set(mskRvis::theme_biostat()); mskRvis::set_msk_palette()
# theme_gtsummary_compact()
df_main <- read_rds(file = '../data/df_main.Rds')
View(df_main)
df_main <- read_rds(file = '../data/df_main.Rds')
View(df_main)
colnames(df_main)
??tbl_uvregression
View(df_main)
