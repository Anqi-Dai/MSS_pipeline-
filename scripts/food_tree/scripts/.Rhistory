mutate(pos_x = 0.8, neg_x = -0.9) %>%
mutate(positive = str_glue('{positive}%'),
negative = str_glue('{negative}%'))
# sort the fg in the negative perc desc order
fg_order <- percs %>% arrange(neg_num) %>% pull(shortname)
percs %>% arrange(neg_num) %>% select(shortname) %>% write_csv('../data/068_fg_sorting_order.csv')
# Install scales R package
library("scales")
# Amount of default colors
hex_codes1 <- hue_pal()(2)                             # Identify hex codes
hex_codes1
div_post_ridge <- post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(data = percs, aes(x = pos_x, y = shortname, label = positive, color = after_stat(x > 0))) +
geom_text(data = percs, aes(x = neg_x, y = shortname, label = negative, color =after_stat(x > 0))) +
#scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#F8766D", "#00BFC4")) +
theme(axis.text=element_text(size=axis_text_size, color  = 'black'),
axis.title=element_text(size=axis_text_size),
aspect.ratio=1)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
library(ggridges)
library(brmstools)
dtb <- read_csv('../data/152_combined_DTB.csv')
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
# dtb %>%
#   distinct(mrn) %>%
#   write_csv('../data/nutrition_patients_97_mrns.csv', col_names = T)
div_post_ridge <- post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(data = percs, aes(x = pos_x, y = shortname, label = positive, color = after_stat(x > 0))) +
geom_text(data = percs, aes(x = neg_x, y = shortname, label = negative, color =after_stat(x > 0))) +
#scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#F8766D", "#00BFC4")) +
theme(axis.text=element_text(size=axis_text_size, color  = 'black'),
axis.title=element_text(size=axis_text_size),
aspect.ratio=1)
div_post_ridge
div_post_ridge %>%
write_rds('../data/068_div_post_ridge.rds')
post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye()
?stat_halfeye
post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95))
?stat_pointinterval
post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95), size = 6)
factor(shortname, levels = fg_order)) %>%
post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95), size = 0.5)
post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c(.66, .95), size = 1)
div_post_ridge <- post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c( .95), size = 1) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(data = percs, aes(x = pos_x, y = shortname, label = positive, color = after_stat(x > 0))) +
geom_text(data = percs, aes(x = neg_x, y = shortname, label = negative, color =after_stat(x > 0))) +
#scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#F8766D", "#00BFC4")) +
theme(axis.text=element_text(size=axis_text_size, color  = 'black'),
axis.title=element_text(size=axis_text_size),
aspect.ratio=1)
div_post_ridge
div_post_ridge %>%
write_rds('../data/068_div_post_ridge.rds')
div_post_ridge <- post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c( .95), size = 0.5) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(data = percs, aes(x = pos_x, y = shortname, label = positive, color = after_stat(x > 0))) +
geom_text(data = percs, aes(x = neg_x, y = shortname, label = negative, color =after_stat(x > 0))) +
#scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#F8766D", "#00BFC4")) +
theme(axis.text=element_text(size=axis_text_size, color  = 'black'),
axis.title=element_text(size=axis_text_size),
aspect.ratio=1)
div_post_ridge
div_post_ridge %>%
write_rds('../data/068_div_post_ridge.rds')
div_post_ridge
div_post_ridge <- post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c( .95), size = 0.5, show.legend = c(size = T)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(data = percs, aes(x = pos_x, y = shortname, label = positive, color = after_stat(x > 0))) +
geom_text(data = percs, aes(x = neg_x, y = shortname, label = negative, color =after_stat(x > 0))) +
#scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#F8766D", "#00BFC4")) +
theme(axis.text=element_text(size=axis_text_size, color  = 'black'),
axis.title=element_text(size=axis_text_size),
aspect.ratio=1)
div_post_ridge
div_post_ridge %>%
write_rds('../data/068_div_post_ridge.rds')
div_post_ridge <- post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c( .95, .95), size = 0.5) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(data = percs, aes(x = pos_x, y = shortname, label = positive, color = after_stat(x > 0))) +
geom_text(data = percs, aes(x = neg_x, y = shortname, label = negative, color =after_stat(x > 0))) +
#scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#F8766D", "#00BFC4")) +
theme(axis.text=element_text(size=axis_text_size, color  = 'black'),
axis.title=element_text(size=axis_text_size),
aspect.ratio=1)
div_post_ridge
div_post_ridge %>%
write_rds('../data/068_div_post_ridge.rds')
div_post_ridge <- post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c( .95, .95), size = 6) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(data = percs, aes(x = pos_x, y = shortname, label = positive, color = after_stat(x > 0))) +
geom_text(data = percs, aes(x = neg_x, y = shortname, label = negative, color =after_stat(x > 0))) +
#scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#F8766D", "#00BFC4")) +
theme(axis.text=element_text(size=axis_text_size, color  = 'black'),
axis.title=element_text(size=axis_text_size),
aspect.ratio=1)
div_post_ridge
div_post_ridge %>%
write_rds('../data/068_div_post_ridge.rds')
div_post_ridge <- post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c( .95, .95), size = 0.1) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(data = percs, aes(x = pos_x, y = shortname, label = positive, color = after_stat(x > 0))) +
geom_text(data = percs, aes(x = neg_x, y = shortname, label = negative, color =after_stat(x > 0))) +
#scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#F8766D", "#00BFC4")) +
theme(axis.text=element_text(size=axis_text_size, color  = 'black'),
axis.title=element_text(size=axis_text_size),
aspect.ratio=1)
div_post_ridge
div_post_ridge %>%
write_rds('../data/068_div_post_ridge.rds')
div_post_ridge <- post_coeff %>%
left_join(percs) %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
ggplot(aes(x = coeff, y = shortname, fill = after_stat(x > 0))) +
stat_pointinterval(.width = c( .95, .95), size = 0.1) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(data = percs, aes(x = pos_x, y = shortname, label = positive, color = after_stat(x > 0))) +
geom_text(data = percs, aes(x = neg_x, y = shortname, label = negative, color =after_stat(x > 0))) +
#scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#F8766D", "#00BFC4")) +
theme(axis.text=element_text(size=axis_text_size, color  = 'black'),
axis.title=element_text(size=axis_text_size),
aspect.ratio=1)
div_post_ridge
div_post_ridge %>%
write_rds('../data/068_div_post_ridge.rds')
f2c <- read_rds('../data/068_div_post_ridge.rds')
f2c <- read_rds('../data/068_div_post_ridge.rds')
# the legend for the genus fg panel
legendd <- '../data/genus_fg_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(legendd),   scale = 0.9)
# new version that is without the diversity prediction thing
left <- cowplot::align_plots(f2a, f2c, align = 'v', axis = 'l')
top <- plot_grid(left[[1]], diagram, labels = c('A', 'B'),rel_widths  = c(1, 2) )
bottom <- plot_grid(  left[[2]],f2e, legend,
nrow = 1, labels = c('C','D', NA), rel_widths  = c(1, 1,1), align = 'hv')
f2 <-  plot_grid(top,bottom,
rel_heights = c(1,2),
nrow = 2)
f2
# the legend for the genus fg panel
legendd <- '../data/genus_fg_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(legendd),   scale = 0.9)
# new version that is without the diversity prediction thing
left <- cowplot::align_plots(f2a, f2c, align = 'v', axis = 'l')
top <- plot_grid(left[[1]], diagram, labels = c('A', 'B'),rel_widths  = c(1, 2) )
bottom <- plot_grid(  left[[2]],f2e, legend,
nrow = 1, labels = c('C','D', NA), rel_widths  = c(1, 1,1), align = 'hv')
f2 <-  plot_grid(top,bottom,
rel_heights = c(1,1),
nrow = 2)
f2
# the legend for the genus fg panel
legendd <- '../data/genus_fg_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(legendd),   scale = 0.9)
# new version that is without the diversity prediction thing
left <- cowplot::align_plots(f2a, f2c, align = 'v', axis = 'l')
top <- plot_grid(left[[1]], diagram, labels = c('A', 'B'),rel_widths  = c(1, 2) )
bottom <- plot_grid(  left[[2]],f2e, legend,
nrow = 1, labels = c('C','D', NA), rel_widths  = c(1, 1,1), align = 'hv')
f2 <-  plot_grid(top,bottom,
rel_heights = c(1,2.5),
nrow = 2)
f2
ggsave('../data/F2_model_results_086_new.pdf',
width = 250,
height = 180,
#height = 60,
units = c("mm"),
dpi = 400, plot = f2)
# the legend for the genus fg panel
legendd <- '../data/genus_fg_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(legendd),   scale = 0.9)
# new version that is without the diversity prediction thing
left <- cowplot::align_plots(f2a, f2c, align = 'v', axis = 'l')
top <- plot_grid(left[[1]], diagram, labels = c('A', 'B'),rel_widths  = c(1, 2) )
bottom <- plot_grid(  left[[2]],f2e, legend,
nrow = 1, labels = c('C','D', NA), rel_widths  = c(1, 1,1), align = 'hv')
f2 <-  plot_grid(top,bottom,
rel_heights = c(1,1),
nrow = 2)
f2
ggsave('../data/F2_model_results_086_new.pdf',
width = 250,
height = 180,
#height = 60,
units = c("mm"),
dpi = 400, plot = f2)
# the legend for the genus fg panel
legendd <- '../data/genus_fg_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(legendd),   scale = 0.9)
# new version that is without the diversity prediction thing
left <- cowplot::align_plots(f2a, f2c, align = 'v', axis = 'l')
top <- plot_grid(left[[1]], diagram, labels = c('A', 'B'),rel_widths  = c(1, 2) )
bottom <- plot_grid(  left[[2]],f2e, legend,
nrow = 1, labels = c('C','D', NA), rel_widths  = c(1, 1,1), align = 'hv')
f2 <-  plot_grid(top,bottom,
rel_heights = c(1,1),
nrow = 2)
f2
ggsave('../data/F2_model_results_086_new.pdf',
width = 250,
height = 200,
#height = 60,
units = c("mm"),
dpi = 400, plot = f2)
# the legend for the genus fg panel
legendd <- '../data/genus_fg_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(legendd),   scale = 0.9)
# new version that is without the diversity prediction thing
left <- cowplot::align_plots(f2a, f2c, align = 'v', axis = 'l')
top <- plot_grid(left[[1]], diagram, labels = c('A', 'B'),rel_widths  = c(1, 2) )
bottom <- plot_grid(  left[[2]],f2e, legend,
nrow = 1, labels = c('C','D', NA), rel_widths  = c(1, 1,1), align = 'hv')
f2 <-  plot_grid(top,bottom,
rel_heights = c(1,1),
nrow = 2)
f2
ggsave('../data/F2_model_results_086_new.pdf',
width = 250,
height = 170,
#height = 60,
units = c("mm"),
dpi = 400, plot = f2)
# the legend for the genus fg panel
legendd <- '../data/genus_fg_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(legendd),   scale = 0.9)
# new version that is without the diversity prediction thing
left <- cowplot::align_plots(f2a, f2c, align = 'v', axis = 'l')
top <- plot_grid(left[[1]], diagram, labels = c('A', 'B'),rel_widths  = c(1, 2) )
bottom <- plot_grid(  left[[2]],f2e, legend,
nrow = 1, labels = c('C','D', NA), rel_widths  = c(1, 1,1), align = 'hv')
f2 <-  plot_grid(top,bottom,
rel_heights = c(1,1),
nrow = 2)
f2
ggsave('../data/F2_model_results_086_new.pdf',
width = 220,
height = 170,
#height = 60,
units = c("mm"),
dpi = 400, plot = f2)
# the legend for the genus fg panel
legendd <- '../data/genus_fg_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(legendd),   scale = 0.9)
# new version that is without the diversity prediction thing
left <- cowplot::align_plots(f2a, f2c, align = 'v', axis = 'l')
top <- plot_grid(left[[1]], diagram, labels = c('A', 'B'),rel_widths  = c(1, 2) )
bottom <- plot_grid(  left[[2]],f2e, legend,
nrow = 1, labels = c('C','D', NA), rel_widths  = c(1, 1,1), align = 'hv')
f2 <-  plot_grid(top,bottom,
rel_heights = c(1,1),
nrow = 2)
f2
ggsave('../data/F2_model_results_086_new.pdf',
width = 250,
height = 170,
#height = 60,
units = c("mm"),
dpi = 400, plot = f2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vdbR)
connect_database()
get_table_from_database('shotgun_lookup_ad')
get_table_from_database('samples_castori_ag')
full <- read_csv('../data/117_irep_full_table.csv') %>%
distinct(sampleid) %>%
inner_join(shotgun_lookup_ad, by = "sampleid") %>%
arrange(sampleid, desc(projectid)) %>%
distinct(sampleid, .keep_all = T)
View(full)
full <- read_csv('../data/117_irep_full_table.csv') %>%
distinct(sampleid) %>%
inner_join(shotgun_lookup_ad, by = "sampleid") %>%
arrange(sampleid, desc(projectid)) %>%
distinct(sampleid, .keep_all = T)
full <- read_csv('../data/117_irep_full_table.csv') %>%
distinct(sampleid)
full <- read_csv('../data/117_irep_full_table.csv') %>%
distinct(sampleid) %>%
inner_join(shotgun_lookup_ad, by = "sampleid") %>%
arrange(sampleid, desc(projectid)) %>%
distinct(sampleid, .keep_all = T)
full <- read_csv('../data/117_irep_full_table.csv') %>%
distinct(sampleid) %>%
inner_join(shotgun_lookup_ad, by = "sampleid") %>%
arrange(sampleid, desc(projectid)) %>%
distinct(sampleid, .keep_all = T)
knitr::opts_chunk$set(echo = TRUE,
fig.width = 3,
fig.height = 3,
fig.align = 'center')
library(rethinking)
library(dplyr)
library(ggplot2)
library(quantreg)
library(ggpmisc)
library(broom)
df <- read.csv(file='../data/sum of sugar intake vs max zscore family(E,E).csv')
outpath <- '../data'
encode_ordinal <- function(x, order = unique(x)) {
x <- as.numeric(factor(x, levels = order, exclude = NULL))
x
}
df$pid_encoded <- encode_ordinal(df$pid)
## remove NA
df <- df %>% filter(!is.na(sum_sugar) )
## standardize
df$sum_sugar_s <- (df$sum_sugar - mean(df$sum_sugar)) / sd(df$sum_sugar)
df <- df %>% select(iRep_zscore,sum_sugar,sum_sugar_s,genus,best_species,pid,pid_encoded,family)
head(df)
ggplot(df, aes(x = sum_sugar, y = iRep_zscore)) + geom_point() +
theme_classic()+
xlab('Sum of sugar (g) standardized') +
ylab('iRep zscore') +
ggtitle(paste0('Sum of sugar intake vs irep zscore \nsamples=',nrow(df))) +
theme(plot.title = element_text(size = 10, face = "bold")) +
stat_smooth(method = "lm",formula = y~x) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y ~ x),
geom = 'text',
aes(label = paste("p-value=", signif(..p.value.., digits = 3),
sep = "")),
label.x = 3, label.y = 3, size = 4)
df <- read.csv(file='../data/sum of sugar intake vs max zscore family(E,E).csv')
outpath <- '../data'
### process dataframe
encode_ordinal <- function(x, order = unique(x)) {
x <- as.numeric(factor(x, levels = order, exclude = NULL))
x
}
df$pid_encoded <- encode_ordinal(df$pid)
## remove NA
df <- df %>% filter(!is.na(sum_sugar) )
## standardize
df$sum_sugar_s <- (df$sum_sugar - mean(df$sum_sugar)) / sd(df$sum_sugar)
df <- df %>% select(iRep_zscore,sum_sugar,sum_sugar_s,genus,best_species,pid,pid_encoded,family)
head(df)
ggplot(df, aes(x = sum_sugar, y = iRep_zscore)) + geom_point() +
theme_classic()+
xlab('Sum of sugar (g) standardized') +
ylab('iRep zscore') +
ggtitle(paste0('Sum of sugar intake vs irep zscore \nsamples=',nrow(df))) +
theme(plot.title = element_text(size = 10, face = "bold")) +
stat_smooth(method = "lm",formula = y~x) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y ~ x),
geom = 'text',
aes(label = paste("p-value=", signif(..p.value.., digits = 3),
sep = "")),
label.x = 3, label.y = 3, size = 4)
ggplot(df, aes(x = sum_sugar, y = iRep_zscore)) + geom_point() +
theme_classic()+
xlab('Sum of sugar (g) standardized') +
ylab('iRep zscore') +
ggtitle(paste0('Sum of sugar intake vs irep zscore \nsamples=',nrow(df))) +
theme(plot.title = element_text(size = 10, face = "bold")) +
stat_smooth(method = "lm",formula = y~x) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y ~ x),
geom = 'text',
aes(label = paste("p-value=", signif(..p.value.., digits = 3),
sep = "")),
label.x = 3, label.y = 3, size = 1)
ggplot(df, aes(x = sum_sugar, y = iRep_zscore)) + geom_point() +
theme_classic()+
xlab('Sum of sugar (g) standardized') +
ylab('iRep zscore') +
ggtitle(paste0('Sum of sugar intake vs irep zscore \nsamples=',nrow(df))) +
theme(plot.title = element_text(size = 10, face = "bold")) +
stat_smooth(method = "lm",formula = y~x) +
stat_fit_glance(method = 'lm',
method.args = list(formula = y ~ x),
geom = 'text',
aes(label = paste("p-value=", signif(..p.value.., digits = 3),
sep = "")),
label.x = 3, label.y = 3, size = 2)
View(df)
knitr::opts_chunk$set(echo = TRUE)
them <- read_csv('../data/sum of sugar intake vs max zscore family(E,E).csv') %>%
select(sampleid, samplebin, iRep, genus, p1d_Sweets, p2d_Sweets,p1d_Fruits, p2d_Fruits, iRep_zscore, pid, sum_sugar)
View(them)
# if there is any sample that is not in the 145
should <- read_csv('../data/135_selected_samples_for_irep_analysis.csv')
View(should)
them %>%
filter(!sampleid %in% should$sampleid)
