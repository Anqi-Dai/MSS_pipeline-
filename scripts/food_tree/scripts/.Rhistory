prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "intensityreduced"),
prior(normal(2, 0.1), class = 'b', coef = "intensityablative"),
prior(normal(2, 0.1), class = 'b', coef = "intensitynonablative"))
# samples are drawn solely from the priors ignoring the likelihood
# model_wo_EN  means the usual model that the EN is still a binary variable and not ann inndivicual group
model_div <- brm( model_formular,
data = meta,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
# actually draw samples from the priors
samples_prior <- prior_draws(model_div)
# save it for future use
post_res <- suppressWarnings(posterior_samples(model_div))
post_res %>%  write_csv('../data/068_div_model_fg_post.csv')
prior_div <- prior_draws(model_div)
colnames(prior_div)
ave_each_fg_prior <- prior_div %>%
mutate(mean_fg_prior_div =
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_intensityreduced ) %>%
select(mean_fg_prior_div) %>%
mutate(grp = 'ave_each')  %>%
mutate(within_range = if_else(mean_fg_prior_div >= min(log(meta$simpson_reciprocal)) &  mean_fg_prior_div <= max(log(meta$simpson_reciprocal)), T, F))
prior_diversity <- ave_each_fg_prior %>%
gghistogram(x = 'mean_fg_prior_div', fill = 'within_range', color = 'white',
xlab = 'Predicted ln(diversity)\nwith prior distribution',
title = 'Diversity') +
geom_vline(xintercept = min(log(meta$simpson_reciprocal)), linetype = 'dashed') +
geom_vline(xintercept = max(log(meta$simpson_reciprocal)), linetype = 'dashed')  +
theme(legend.position = 'none')
ave_each_fg_prior %>%
count(within_range) %>%
mutate(perc = n/(sum(n))*100)
prior_diversity %>%
write_rds('../data/068_prior_diversity_hist.rds'
)
prior_diversity
# make
post_all <-  read_csv('../data/068_div_model_fg_post.csv')
colnames(post_all)
# the mrn ones need to be anonymized
# make  a forest  plot of the mrn intercepts
mrn_forest <- post_all %>%
gather() %>%
filter(str_detect(key, 'r_mrn')) %>%
mutate(mrn = str_extract(key, '\\[.+,'),
mrn = str_replace(mrn, '\\[', ''),
mrn = str_replace(mrn, ',', ''),
patient = as.numeric(factor(mrn)),
pid = str_pad(as.character(patient), width = 2, side = 'left', pad = '0') ,
pid = str_glue('P{pid}'),
key = str_glue('r_mrn[{pid},Intercept]'))
mrn_figure <- mrn_forest %>%
ggplot(aes(x = value, y = pid)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = '',
y = '',
title = '') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=11),
axis.title=element_text(size=11),
aspect.ratio=1)
mrn_figure
ggsave('../figs/paper/S_mrn_intercepts_forest.pdf',
width = 280,
height = 320,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = mrn_figure)
ggsave('../figs/paper/S_mrn_intercepts_forest.jpg',
width = 280,
height = 320,
#height = 60,
units = c("mm"),
dpi = 400, device = 'jpg', plot = mrn_figure)
# make a table with the median , thinner interval two sides, thicker interval two sides for all of the parameters.
mrn_part <- post_all %>%
gather() %>%
filter(str_detect(key, 'r_mrn')) %>%
mutate(mrn = str_extract(key, '\\[.+,'),
mrn = str_replace(mrn, '\\[', ''),
mrn = str_replace(mrn, ',', ''),
patient = as.numeric(factor(mrn)),
pid = str_pad(as.character(patient), width = 2, side = 'left', pad = '0') ,
pid = str_glue('P{pid}'),
key = str_glue('r_mrn[{pid},Intercept]')) %>%
group_by(key) %>%
tidybayes::median_qi(value , .width = c( .66, .95))
others <-  post_all %>%
gather() %>%
filter(!str_detect(key, 'r_mrn')) %>%
group_by(key) %>%
tidybayes::median_qi(value , .width = c( .66, .95))
all_params <- bind_rows(mrn_part, others) %>%
rename(median = value) %>%
gather('side', 'value', median:.upper) %>%
mutate(name = str_glue('{side}{.width}')) %>%
mutate(name = str_replace(name, '^\\.','')) %>%
select(key, name, value) %>%
spread('name','value') %>%
select(-median0.66) %>%
rename(median = median0.95,
param = key)
all_params %>%
write_csv('../figs/paper/Supplementary_table1_main_model_all_params_coeff_068.csv')
# extract posterior samples for the coeff
post_samples  <- read_csv('../data/068_div_model_fg_post.csv')
# save it out for the forest plot of the coeff
post_fg_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'value')
post_fg_coeff_mean <- post_fg_coeff  %>%
group_by(item) %>%
summarise(meanperitem = mean(value))
# make the forest plot of the post coeff
# like the one on the ash abstract
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_labels <- levels(post_coeff$shortname)
cross0 <- post_coeff %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
# to find the quantiles of the post_coeff
post_coeff %>%
group_by(item) %>%
tidybayes::median_qi(coeff, .width = c( .66, .95))
post_coeff %>%
group_by(item) %>%
summarise(q50 = median(coeff))
post_coeff %>%
filter(item == 'fruit') %>%
count(coeff < 0) %>%
mutate(perc = n/sum(n)*100)
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
title1 <- bquote(Outcome: log[e]~(Simpsons~reciprocal))
div_post <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post %>%
write_rds('../data/068_div_post.rds')
div_post
# make the forest plot of the post coeff
# like the one on the ash abstract
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_labels <- levels(post_coeff$shortname)
cross0 <- post_coeff %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
# to find the quantiles of the post_coeff
post_coeff %>%
group_by(item) %>%
tidybayes::median_qi(coeff, .width = c( .66, .95))
post_coeff %>%
group_by(item) %>%
summarise(q50 = median(coeff))
post_coeff %>%
filter(item == 'fruit') %>%
count(coeff < 0) %>%
mutate(perc = n/sum(n)*100)
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
title1 <- bquote(Outcome: log[e]~(Simpsons~reciprocal))
div_post <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post %>%
write_rds('../data/068_div_post.rds')
div_post
div_post
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
# modify it to be the look that we have discussed
diversity_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
diversity_factor %>%
write_rds('../data/068_diversity_factor_forest.rds')
diversity_factor
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(cowplot)
library(ggpubr)
combined <- read_csv('../data/growth/069_irep_combined_res.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc') %>%
select(fg = fg1_name,shortname )
scatter_alpha <- 0.35
cor_text_size <- 3
axis_text_size <- 11
axis_title_size <- 11
# the median of the fruits
median6 <- median(combined$fg_fruit)
median9 <- median(combined$fg_sweets)
tbt_ent <- bind_rows(
combined %>%
filter(str_detect(best_species, 'Enterococcus')) %>%
group_by(sampleid) %>%
summarise(ave_irep = mean(aveirep)) %>%
inner_join(meta) %>%
mutate(grp = 'Enterococcus only'),
combined %>%
filter(!str_detect(best_species, 'Enterococcus')) %>%
group_by(sampleid) %>%
summarise(ave_irep = mean(aveirep)) %>%
inner_join(meta) %>%
mutate(grp = 'All taxa excl. Enterococcus')
) %>%
select(sampleid, ave_irep, grp, fg_sweets, fg_fruit ) %>%
gather('fg', 'gram', fg_sweets:fg_fruit) %>%
mutate(grp = factor(grp, levels = c('Enterococcus only','All taxa excl. Enterococcus'))) %>%
left_join(key)
tbt_ent_f <- tbt_ent %>% filter(shortname == 'Fruits') %>%
mutate(tier = if_else(gram >= median6, 'higher', 'lower'))
t3a_box <- tbt_ent_f  %>%
ggboxplot(x = 'tier', y = 'ave_irep', alpha = scatter_alpha,
xlab = 'Fruits intake in previous 2 days (g)',
ylab = 'Average growth rate\n(iRep estimation)') +
facet_grid(. ~ grp) +
theme_classic() +
stat_compare_means(comparisons= list(c('higher', 'lower')),
label= "p.signif",
method= 'wilcox.test',
correct=FALSE) +
theme(plot.background = element_blank(),
aspect.ratio = 1,
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(size = 8))
# I want the top row and bottom row to have different x scales.
t3a <- tbt_ent_f  %>%
ggscatter(x = 'gram', y = 'ave_irep', alpha = scatter_alpha,
xlab = 'Fruits intake in previous 2 days (g)',
ylab = 'Average growth rate\n(iRep estimation)',
add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE,
cor.coef = TRUE,
cor.coeff.args = list(method = "spearman",  label.sep = ",   ", size = cor_text_size)) +
facet_grid(. ~ grp) +
theme_classic() +
theme(plot.background = element_blank(),
aspect.ratio = 1,
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(size = 8))
b3a <- tbt_ent %>% filter(shortname == 'Sweets') %>%
ggscatter(x = 'gram', y = 'ave_irep', alpha = scatter_alpha,
xlab = 'Sweets intake in previous 2 days (g)',
ylab = '',
add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE,
cor.coef = TRUE,
cor.coeff.args = list(method = "spearman",  label.sep =",   ", size = cor_text_size)) +
facet_grid(. ~ grp) +
theme_classic() +
theme( plot.background = element_blank(),
aspect.ratio = 1,
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(size = 8))
tbt_kle <- bind_rows(
combined %>%
filter(str_detect(best_species, 'Klebsiella')) %>%
group_by(sampleid) %>%
summarise(ave_irep = mean(aveirep)) %>%
inner_join(meta) %>%
mutate(grp = 'Klebsiella only'),
combined %>%
filter(!str_detect(best_species, 'Klebsiella')) %>%
group_by(sampleid) %>%
summarise(ave_irep = mean(aveirep)) %>%
inner_join(meta) %>%
mutate(grp = 'All taxa excl. Klebsiella')
) %>%
select(sampleid, ave_irep, grp, fg_sweets, fg_fruit ) %>%
gather('fg', 'gram', fg_sweets:fg_fruit) %>%
mutate(grp = factor(grp, levels = c('Klebsiella only','All taxa excl. Klebsiella'))) %>%
left_join(key)
# I want the top row and bottom row to have different x scales.
t3b <- tbt_kle %>% filter(shortname == 'Fruits') %>%
ggscatter(x = 'gram', y = 'ave_irep', alpha = scatter_alpha,
xlab = 'Fruits intake in previous 2 days (g)',
ylab = 'Average growth rate\n(iRep estimation)',
add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE,
cor.coef = TRUE,
cor.coeff.args = list(method = "spearman",  label.sep = ",   ", size = cor_text_size)) +
facet_grid(. ~ grp) +
theme_classic() +
theme(plot.background = element_blank(),
aspect.ratio = 1,
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(size = 8))
b3b <- tbt_kle %>% filter(shortname == 'Sweets') %>%
ggscatter(x = 'gram', y = 'ave_irep', alpha = scatter_alpha,
xlab = 'Sweets intake in previous 2 days (g)',
ylab = '',
add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE,
cor.coef = TRUE,
cor.coeff.args = list(method = "spearman",  label.sep = ",   ", size = cor_text_size )) +
facet_grid(. ~ grp) +
theme_classic() +
theme(
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
strip.text.x = element_text(size = 8))
# assemble the top and bottom of 3b
f3b <- plot_grid(t3b, b3b,
byrow = T,
ncol = 1, axis = 'ltbr', align = 'hv', rel_widths = c(1, 1))
# decided to just use the enterococcus and fruit & klebsiella with sweets
ent_fruit <- tbt_ent %>%
filter(shortname == 'Fruits' & grp == 'Enterococcus only')
# calculate the p value of the slope of the regression line
res_ent_fruit <- summary(lm(ave_irep ~ gram, data = ent_fruit ))
ent_fruit_p <- round(res_ent_fruit$coefficients[2, 'Pr(>|t|)'], 2)
f3a <- ent_fruit %>%
ggscatter(x = 'gram', y = 'ave_irep', alpha = scatter_alpha, shape = 16,
xlab = 'Fruits intake in\nprevious 2 days (g)',
ylab = 'Growth rate',
title = 'Enterococcus',
add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE) +
annotate("text", x = 40, y = 1, label = str_glue("paste(italic(p), \" = {ent_fruit_p}\")"), parse = TRUE) +
theme_classic() +
theme(
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
strip.text.x = element_text(size = 8))
f3a
ggsave('../figs/paper/094_f3a.pdf',
width = 60,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400, plot = f3a)
f3a %>% write_rds('../data/094_f3a.rds')
ent_fruit %>%
mutate(pid = str_extract(sampleid, '^\\d\\d\\d\\d')) %>%
count(pid)
# klebsiella with sweets
kle_sweet <- tbt_kle %>%
filter(shortname == 'Sweets' & grp == 'Klebsiella only')
# calculate the p value of the slope of the regression line
res_kle_sweet <- summary(lm(ave_irep ~ gram, data = kle_sweet ))
kle_sweet_p <- round(res_kle_sweet$coefficients[2, 'Pr(>|t|)'], 2)
f3b <- kle_sweet %>%
ggscatter(x = 'gram', y = 'ave_irep', alpha = scatter_alpha, shape = 16,
xlab = 'Sweets intake in\nprevious 2 days (g)',
ylab = 'Growth rate',
title = 'Klebsiella',
add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE) +
annotate("text", x = 75, y = 1, label = str_glue("paste(italic(p), \" = {kle_sweet_p}\")"), parse = TRUE) +
theme_classic() +
theme(
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
aspect.ratio = 1,
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
strip.text.x = element_text(size = 8))
ggsave('../figs/paper/094_f3b.pdf',
width = 60,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400, plot = f3b)
f3b %>% write_rds('../data/094_f3b.rds')
kle_sweet %>%
mutate(pid = str_extract(sampleid, '^\\d\\d\\d\\d')) %>%
count(pid)
View(tbt_ent)
