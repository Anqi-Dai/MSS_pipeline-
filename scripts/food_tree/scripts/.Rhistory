bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'q90_',''))
post_pred_q75 <- q75_each_fg_post %>%
as.list() %>%
map(function(vec) {
tibble(
q75_=vec
) %>%
mutate(
post_q75_pred =  exp(q75_))
}) %>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'q75_',''))
all_pred <- bind_rows(
post_pred_min %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_min_pred) %>%
mutate(type = 'min')%>%
select(term, pred_div,type ),
post_pred_q25 %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_q25_pred) %>%
mutate(type = '25%')%>%
select(term, pred_div,type ),
post_pred_q50 %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_q50_pred) %>%
mutate(type = '50%')%>%
select(term, pred_div,type ),
post_pred_q80 %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_q80_pred) %>%
mutate(type = '80%')%>%
select(term, pred_div,type ),
post_pred_q90 %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_q90_pred) %>%
mutate(type = '90%')%>%
select(term, pred_div,type ),
post_pred_q75 %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_q75_pred) %>%
mutate(type = '75%') %>%
select(term, pred_div,type ),
post_pred_max %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_max_pred) %>%
mutate(type = 'max') %>%
select(term, pred_div,type ),
post_pred_ave %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_ave_pred) %>%
mutate(type = 'ave') %>%
select(term, pred_div,type )
)
fg_val_summary <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(quantile(., probs = c(0.25, 0.5, 0.75, 0.8, 0.9)))) %>%
mutate(grp = c('25%','50%','75%', '80%', '90%'))
fg_val_max <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(max))  %>%
mutate(grp = 'max')
fg_val_min <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(min))  %>%
mutate(grp = 'min')
fg_val_summary_all <- bind_rows(fg_val_summary, fg_val_max, fg_val_min) %>%
gather('fg', 'value', fg_egg:fg_veggie) %>%
mutate(ori_value = value*100) %>%
select(-value) %>%
rename(term = fg, type = grp) %>%
mutate(ori_value = round(ori_value))
fg_val_summary_all
all_pred %>%
left_join(key %>% rename(term = fg1_name) %>% select(term, shortname)) %>%
inner_join(fg_val_summary_all) %>%
filter(type  %in% c('min', '50%', 'max')) %>%
mutate(xtext = str_glue('{shortname} {type}: {ori_value}g')) %>%
arrange(shortname, ori_value) %>%
# ggboxplot( data = ., x = 'xtext', y = 'pred_div', fill = 'term', xlab = '', ylab = 'Predicted alpha diversity') +
ggplot(aes(x = xtext, y = pred_div, col = term)) +
stat_pointinterval(.width = c(.8, .95)) +
labs(x = '', y = 'Predicted alpha diversity') +
facet_grid(term ~ ., scales = 'free') +
scale_color_manual(values = c('#7D3C98','#db2589','#229954')) +
coord_flip() +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank())
all_pred %>%
left_join(key %>% rename(term = fg1_name) %>% select(term, shortname)) %>%
inner_join(fg_val_summary_all) %>%
filter(type != 'ave') %>%
mutate(type = factor(type, levels = c('min','25%','50%','75%','80%','90%', 'max'))) %>%
mutate(xtext = str_glue('{shortname} {type}: {ori_value}g')) %>%
arrange(shortname, ori_value) %>%
ggboxplot( data = ., x = 'xtext', y = 'pred_div', fill = 'term',
xlab = '', ylab = 'Predicted alpha diversity') +
facet_grid(term ~ ., scales = 'free') +
scale_fill_manual(values = c('#7D3C98','#db2589','#229954')) +
coord_flip() +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank())
# make the F2D as we discussed
maxs <- max_each_fg_post %>%  as.list()
mins <- min_each_fg_post %>%  as.list()
two_diff <- map2(maxs, mins, .f = function(maxi, mini){
tibble(
max_=maxi,
min_=mini,
ave=ave_each_fg_post$post_res
)  %>%
mutate(diff_max_ave = exp(max_) - exp(ave),
diff_min_ave =  exp(min_) - exp(ave))
})%>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'max_','')) %>%
left_join(key %>%
select(term = fg1_name, color, shortname))
two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
median_qi(post_diff, .width = c(.95, .66)) %>%
ggplot(aes(y = shortname, x = post_diff)) +
geom_interval(aes(xmin = .lower, xmax = .upper)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
facet_grid(~grp ) +
xlim(-5, 2) +
labs(x = expression(Change~`in`~alpha~diversity),
y = '',
title = 'max and ave excluding tube feeds')
View(max_fg)
View(meta)
View(dtb_no_tube)
View(meta)
# the mean food group intake from our data
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
# the mean food group intake from our data
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
# need to recalculate the meta and exclude the EN ones
dtb_no_tube <- dtb %>%
filter(Meal != 'EN') %>%
mutate(fgrp1 = str_sub(Food_code, 1, 1))
stb_loop <- meta %>%
select(mrn, sdrt) %>%
transmute(mrn = mrn,
p1d = sdrt-1,
p2d = sdrt-2)
p2d <- apply(stb_loop, 1, function(Row){
df = dtb_no_tube %>%
filter(mrn == Row[['mrn']]) %>%
filter(fdrt %in% c(Row[['p1d']], Row[['p2d']])) %>%
group_by(fgrp1) %>%
summarise(ave_dewt = sum(dehydrated_weight)/2)
}) %>%
set_names(meta %>% pull(sampleid))  %>%
bind_rows(.id = 'sampleid')
p2d_df <- p2d %>%
left_join(key %>% select(fgrp1, fg1_name)) %>%
select(-fgrp1) %>%
mutate(ave_dewt = ave_dewt/100) %>% # need to divide by 100 here
spread('fg1_name', 'ave_dewt', fill = 0)
meta <- p2d_df
View(p2d)
# the mean food group intake from our data
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
dtb_no_tube
dtb_no_tube %>%
filter(mrn == 35580223)
dtb_no_tube %>%
filter(mrn == 35580223 & fgrp1 == '9')
dtb_no_tube %>%
filter(mrn == 35580223 & fgrp1 %in% c(12,13))
dtb_no_tube %>%
filter(mrn == 35580223 & fdrt %in% c(12,13))
dtb_no_tube %>%
filter(mrn == 35580223 & fdrt %in% c(12,13) & fgrp1 == "9")
dtb_no_tube %>%
filter(mrn == 35580223 & fdrt %in% c(12,13) & fgrp1 == "9")  %>%
mutate(dd = sum(dehydrated_weight)/2)
knitr::opts_chunk$set(echo = TRUE)
dat <- readxl::read_excel('../data/Diet Excel.xlsx', sheet = 1) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'Percent', names(.)[2]:names(.)[4]) %>%
rename(Macronutrient = `Calories_provided_by_(%)`) %>%
arrange(type)
dat %>%
ggbarplot(x = 'type', y = 'Percent', facet.by = 'Macronutrient', sort.by.groups = T,color = 'Macronutrient', palette = 'lancet', fill = 'Macronutrient', xlab = '' ) +
theme(axis.text.x = element_text(angle=45, hjust=1))
ggsave('../data/Pam_three_diets.pdf', width = 8, height = 5)
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2)
View(s2)
readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .))
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2)
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3])
s2
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'lancet', fill = 'Item', xlab = '' ) +
theme(axis.text.x = element_text(angle=45, hjust=1))
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'lancet', fill = 'Item', xlab = '' ) +
facet_grid(item ~ .)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'lancet', fill = 'Item', xlab = '' ) +
facet_grid(Item ~ .)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'lancet', fill = 'Item', xlab = '' ) +
facet_grid(Item ~ ., scales = 'free')
---
title: "Three diets"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r}
library(tidyverse)
library(ggpubr)
```
```{r}
dat <- readxl::read_excel('../data/Diet Excel.xlsx', sheet = 1) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'Percent', names(.)[2]:names(.)[4]) %>%
rename(Macronutrient = `Calories_provided_by_(%)`) %>%
arrange(type)
dat %>%
ggbarplot(x = 'type', y = 'Percent', facet.by = 'Macronutrient', sort.by.groups = T,color = 'Macronutrient', palette = 'lancet', fill = 'Macronutrient', xlab = '' ) +
theme(axis.text.x = element_text(angle=45, hjust=1))
ggsave('../data/Pam_three_diets.pdf', width = 8, height = 5)
```
```{r}
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'lancet', fill = 'Item', xlab = '' ) +
facet_grid(Item ~ ., scales = 'free')
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 8, height = 5)
```
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'lancet', fill = 'Item', xlab = '' ) +
facet_grid(Item ~ ., scales = 'free')
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 5, height = 8)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'lancet', fill = 'Item', xlab = '' , label = T) +
facet_grid(Item ~ ., scales = 'free')
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'lancet', fill = 'Item', xlab = '' , label = T) +
facet_grid(Item ~ ., scales = 'free')
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 5, height = 8)
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'lancet', fill = 'Item', xlab = '' , label = T) +
facet_grid(Item ~ ., scales = 'free')
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 4, height = 10)
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'jco', fill = 'Item', xlab = '' , label = T) +
facet_grid(Item ~ ., scales = 'free')
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 4, height = 10)
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 3, height = 8)
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'jco', fill = 'Item', xlab = '' , label = T) +
facet_grid(Item ~ .)
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 3, height = 8)
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'jco', fill = 'Item', xlab = '' , label = T) +
facet_grid(Item ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1))
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 3, height = 8)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'jco', fill = 'Item', xlab = '' , label = T) +
facet_grid(Item ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'jco', fill = 'Item', xlab = '' , label = T) +
facet_grid(Item ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 3, height = 8)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'jco', fill = 'Item', xlab = '' , label = T, ylab = '') +
facet_grid(Item ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'jco', fill = 'Item', xlab = '' , label = T, ylab = '') +
facet_grid(Item ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 3, height = 8)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3)
View(s3)
readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3])
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm'))
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm'))
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', sort.by.groups = T,color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'percent') +
facet_grid(Fat_Composition ~ .)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', sort.by.groups = T,color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'percent') +
facet_grid(Fat_Composition ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 3, height = 8)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', sort.by.groups = T,color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'percent') +
facet_grid(. ~ Fat_Composition) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 3, height = 8)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', sort.by.groups = T,color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'percent') +
facet_grid(. ~ Fat_Composition) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 8, height = 3)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', sort.by.groups = T,color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'percent') +
facet_grid(. ~ Fat_Composition) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 8, height = 5)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', sort.by.groups = T,color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'percent') +
facet_grid(Fat_Composition ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 3, height = 8)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', sort.by.groups = T,color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'percent') +
facet_grid(Fat_Composition ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
strip.text = element_text(size =8),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 3, height = 8)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', sort.by.groups = T,color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'percent') +
facet_grid(Fat_Composition ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
strip.text = element_text(size =5),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 3, height = 8)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', sort.by.groups = T,color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'percent') +
facet_grid(Fat_Composition ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
strip.text = element_text(size =8),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 3, height = 12)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', sort.by.groups = T,color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'percent') +
facet_grid(Fat_Composition ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
strip.text = element_text(size =8),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 3, height = 12)
s3 %>%
filter(str_detect(Fat_Composition, 'ppm'))
s3 %>%
filter(str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', color = 'forestgreen',  fill = 'Fat_Composition', xlab = '' , label = T, ylab = 'PPM') +
theme(axis.text.x = element_text(angle=45, hjust=1),
strip.text = element_text(size =8),
legend.position = 'none')
s3 %>%
filter(str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', color = 'forestgreen',  fill = 'forestgreen', xlab = '' , label = T, ylab = 'PPM') +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3_ppm.pdf', width = 3, height = 3)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' ,  ylab = 'percent') +
facet_grid(Fat_Composition ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
strip.text = element_text(size =8),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 3, height = 12)
s3 %>%
filter(str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', color = 'forestgreen',  fill = 'forestgreen', xlab = '' ,  ylab = 'PPM') +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3_ppm.pdf', width = 3, height = 3)
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'jco', fill = 'Item', xlab = '' ,ylab = '') +
facet_grid(Item ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 3, height = 8)
