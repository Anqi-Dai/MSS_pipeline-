library(ggimage)
library(ggrastr)
library(lemon)
axis_text_size <- 10
axis_title_size <- 10
stip_txt_size <- 8
alpha_val <- 0.05
point_size <- 0.2
scatter_col <- 'gray14'
pick_point_size <- 1
pick_line_size <- 0.5
example_pt_line_size <- 0.3
diet_line_color <- '#E41A1C'
stool_line_color <- 'blue'
strip_color <- 'gray91'
umap_pt_size <- 0.2
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
# the colors for each food group specified and saved here
fpalette <- tribble(
~fg1_name, ~color, ~fgrp1,
#--|--|
'fg_milk' , '#3498DB', '1',
'fg_meat' , '#591605', '2',
'fg_egg' , '#F1C40F', '3',
'fg_legume' , '#E67E22', '4',
'fg_grain' , '#D35400', '5',
'fg_fruit' , '#7D3C98', '6',
'fg_veggie' , '#229954', '7',
'fg_oils' , '#707B7C',  '8',
'fg_sweets' , '#db2589' , '9'
)
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
get_table_from_database('shotgun_lookup_ad')
dtb  <- read_csv('../data/152_combined_DTB.csv')
meta <- read_csv('../data/153_combined_META.csv')
# how many stool samples per patient
meta %>% count(mrn) %>% summarise(med = median(n))
dtb %>% distinct(Food_code)
# how many days of data among all of the patients?
dtb %>% count(mrn,  fdrt) %>%
count(mrn) %>%
summarise(total_days = sum(n))
dtb %>% distinct(Food_NSC)
dtb %>% count(mrn, fdrt) %>%
distinct(mrn, fdrt)
range(dtb$fdrt)
# summary statistics
# median N samples per patient
n_per_patient <- meta %>%
count(mrn)
summary(n_per_patient$n)
pdf(file = "../figs/paper/F1_spectral_legend.pdf",   # The directory you want to save the file in
width = 4, # The width of the plot in inches
height = 4)
display.brewer.pal(9, "Spectral")
library(RColorBrewer)
pdf(file = "../figs/paper/F1_spectral_legend.pdf",   # The directory you want to save the file in
width = 4, # The width of the plot in inches
height = 4)
display.brewer.pal(9, "Spectral")
dev.off()
library(RColorBrewer)
pdf(file = "../data/072_F1_spectral_legend.pdf",   # The directory you want to save the file in
width = 4, # The width of the plot in inches
height = 4)
display.brewer.pal(9, "Spectral")
dev.off()
library(RColorBrewer)
pdf(file = "../data/072_F1_spectral_legend.pdf",   # The directory you want to save the file in
width = 4, # The width of the plot in inches
height = 1)
display.brewer.pal(9, "Spectral")
library(RColorBrewer)
pdf(file = "../data/072_F1_spectral_legend.pdf",   # The directory you want to save the file in
width = 4, # The width of the plot in inches
height = 3)
display.brewer.pal(9, "Spectral")
dev.off()
# calculate the dominant food group of that day
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv') %>% mutate(fgrp1 = as.character(fgrp1))
fg_daily <- dtb %>%
group_by(mrn, fdrt ) %>%
summarise(daily_total = sum(dehydrated_weight))
fg_sum <- dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1, 1)) %>%
group_by(mrn, fdrt , fgrp1) %>%
summarise(daily_fg = sum(dehydrated_weight)) %>%
left_join(fg_daily) %>%
mutate(fg_relab = daily_fg/daily_total) %>%
ungroup() %>%
left_join(key) %>%
group_by(mrn, fdrt) %>%
arrange(desc(fg_relab)) %>%
slice(1)
# find out why the few dots are on that far island
OUT <- read_csv('../data/taxumap_embedding.csv') %>%
separate(index_column, into = c('mrn','fdrt'), sep = '_') %>%
mutate(mrn = as.numeric(str_replace(mrn, 'P','')),
fdrt = as.numeric(fdrt)) %>%
full_join(fg_sum, by = c("mrn", "fdrt"))
color_key <- OUT %>%
distinct( color, shortname) %>% select(shortname, color) %>%
deframe()
View(OUT)
library(ggplot2)
# Create a data frame
df <- data.frame(x = c("A", "B", "C"), y = c(1, 2, 3))
# Create a color palette
colors <- c("red", "green", "blue")
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = y, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors)
# Create a data frame
df <- data.frame(x = letters[1:9], y = rep(1, 9))
key
library(ggplot2)
# Create a data frame
df <- data.frame(x = letters[1:9], y = rep(1, 9))
# Create a color palette
colors <- c("red", "green", "blue")
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = y, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors)
key
# Create a color palette
colors <- key$color
key
names(colors) <- key$shortname
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9))
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = y + 2, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors) +theme_classic()
df <- data.frame(x = c("A", "B", "C"), y = c(1, 2, 3))
# Create a color palette
colors <- c("red", "green", "blue")
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = y, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors)
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9))
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = y + 2, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors) +theme_classic()
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = x, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors) +theme_classic()
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color)
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = x, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors) +theme_classic()
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color)
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = x, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.title.x=element_text(colour=colors))
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color)
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = x, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.title.x=element_text(colour=colors))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = x, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=colors))
colors
colors <- key$color
names(colors) <- key$shortname
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = x, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=colors))
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color)
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = 'colors') +
geom_text(aes(label = x, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=colors))
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color)
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(label = x, color = colors), position = position_dodge(width = 0.9)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=colors))
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color)
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=colors))
key
fg_colors <- key %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(color = colors))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(color = colors, label = 'x')) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(color = colors, label = x)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(color = fg_colors, label = x)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors))
fg_colors
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(color = fg_colors, label = x)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors))
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color) %>%
arrange(x)
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(color = fg_colors, label = x)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors))
key %>%
distinct(shortname, color) %>%
select(shortname, color)
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color) %>%
arrange(x)
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
fg_colors <- key %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
mutate(shortname = factor(shortname, levels= key$shortname)) %>%
deframe()
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(color = fg_colors, label = x)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors))
fg_colors
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color) %>%
arrange(x) %>%
mutate(x  =  factor(x, levels = key$shortname))
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
fg_colors <- key %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
mutate(shortname = factor(shortname, levels= key$shortname)) %>%
deframe()
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
geom_text(aes(color = fg_colors, label = x)) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors), family = "Times New Roman")
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Times New Roman"))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Ariel"))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial"))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial", fontface = 'bold', size = 10))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial", face = 'bold', size = 10))
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial", face = 'bold', size = 10))
ggsave('../data/072_foodgroup_color_name.pdf')
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial", face = 'bold', size = 10))
ggsave('../data/072_foodgroup_color_name.pdf')
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial", face = 'bold', size = 10))
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color) %>%
arrange(x) %>%
mutate(x  =  factor(x, levels = key$shortname))
# Create a color palette
colors <- key$color
names(colors) <- key$shortname
fg_colors <- key %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
mutate(shortname = factor(shortname, levels= key$shortname)) %>%
deframe()
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial", face = 'bold', size = 10))
ggsave('../data/072_foodgroup_color_name.pdf')
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial", face = 'bold', size = 10))
ggsave('../data/072_foodgroup_color_name.svg')
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial", face = 'bold', size = 10))
ggsave('../data/072_foodgroup_color_name.svg')
ggsave('../data/072_foodgroup_color_name.pdf')
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color) %>%
arrange(x) %>%
mutate(x  =  factor(x, levels = key$shortname))
fg_colors <- key %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
mutate(shortname = factor(shortname, levels= key$shortname)) %>%
deframe()
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial", face = 'bold', size = 10))
ggsave('../data/072_foodgroup_color_name.pdf')
library(ggplot2)
# Create a data frame
df <- data.frame(x = key$shortname, y = rep(1, 9), colors = key$color) %>%
arrange(x) %>%
mutate(x  =  factor(x, levels = key$shortname))
fg_colors <- key %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
mutate(shortname = factor(shortname, levels= key$shortname)) %>%
deframe()
# Create the plot
ggplot(df, aes(x, y)) +
geom_bar(stat = "identity", fill = colors) +
scale_color_manual(values = colors) +theme_classic() +
theme(axis.text.x=element_text(colour=fg_colors, family = "Arial", face = 'bold', size = 10))
ggsave('../data/072_foodgroup_color_name.svg')
# the histogram of the N meals over transplant time
diet_hist <- dtb %>%
distinct(mrn, Meal, fdrt) %>%
gghistogram(x = 'fdrt', xlab = 'Transplant day', ylab = 'Meals recorded', color = diet_line_color, fill = diet_line_color, alpha = 1)+
scale_x_continuous( breaks = seq(-10, 50, 20)) +
annotate("text", x = 5, y = 900, label = "173 patients,\n9,419 total meals\n40,702 food items", hjust = 0, size = 2.5) +
theme_classic(base_size = 8) +
theme(aspect.ratio=1.5,
axis.title=element_text(size=axis_title_size),
#axis.text.x = element_blank(),
axis.title.x = element_blank())
diet_hist
# the histogram of the N meals over transplant time
diet_hist <- dtb %>%
distinct(mrn, Meal, fdrt) %>%
gghistogram(x = 'fdrt', xlab = 'Transplant day', ylab = 'Meals recorded', color = diet_line_color, fill = diet_line_color, alpha = 1)+
scale_x_continuous( breaks = seq(-10, 50, 20)) +
annotate("text", x = 5, y = 900, label = "173 patients,\n9,419 total meals\n40,702 food items", hjust = 0, size = 2.5) +
theme_classic(base_size = 8) +
theme(aspect.ratio=1.5,
axis.title=element_text(size=axis_title_size),
#axis.text.x = element_blank(),
axis.title.x = element_blank())
diet_hist
# Tsoni says: I still think a little figure would be helpful. Perhaps best a small histogram of N samples and N meals recorded over transplant time. That would show both the depth of sampling and emphasize the temporal nature of the dataset
# the histogram of the N stool samples over transplant time
stool_hist <- meta %>%
gghistogram(x = 'sdrt', xlab = 'Transplant day', ylab = 'Stool samples', color = stool_line_color, fill = stool_line_color, alpha = 1) +
scale_x_continuous( breaks = seq(-10, 50, 20)) +
annotate("text", x = 20, y = 110, label = "1,009\nstool samples", hjust = 0, size = 2.5) +
theme_classic(base_size = 8) +
theme(aspect.ratio=1.5,   axis.title=element_text(size=axis_title_size))
stool_hist
# assemble the two hists
two_hist <- plot_grid(diet_hist, NA, stool_hist,
rel_heights = c(1, -0.4, 1) ,
ncol = 1, hjust = 0.5,
align = 'hv',
axis = 'tblr')
# top row
top_row <- plot_grid(two_hist, tree, maps,
nrow = 1,
rel_widths = c(.6,1.5,1.5),
labels = c('A', 'B', NA))
# import the tree from pdf to a ggplot kind of object
p <- '../figs/paper/080_food_tree_ring.png'
tree <- ggdraw() +
draw_image(p,   scale = 1)
# top row
top_row <- plot_grid(two_hist, tree, maps,
nrow = 1,
rel_widths = c(.6,1.5,1.5),
labels = c('A', 'B', NA))
