distinct(Food_NSC,  Unit ) %>%
mutate(current = str_glue('{Food_NSC}__{Unit}'))
new_combo <- fix %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
distinct(Food_NSC,  Unit ) %>%
mutate(new = str_glue('{Food_NSC}__{Unit}'))
length(intersect(current_dtb_combo$current, new_combo$new))
length(intersect(current_dtb_combo$current, new_combo$new))
# the ones that have the food_nsc but different portion eaten
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten)
# all the others already exist so I can use the ratio to scale using the current cleaned dtb data!
already <- dtb %>%
filter(Meal!= 'EN') %>%
distinct(Food_NSC, Unit, Por_eaten, .keep_all = T) %>%
select(Food_NSC: Sodium_g) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}'))
already <- dtb %>%
filter(Meal!= 'EN') %>%
distinct(Food_NSC, Unit, Por_eaten, .keep_all = T) %>%
select(Food_NSC: Sodium_g) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}'))
# all the others already exist so I can use the ratio to scale using the current cleaned dtb data!
already <- dtb %>%
filter(Meal!= 'EN') %>%
distinct(Food_NSC, Unit, Por_eaten, .keep_all = T) %>%
select(Food_NSC: Sodium_g) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
arrange(Food_NSC, Unit, Por_eaten)
already
already %>%
distinct(Food_NSC, Unit, .keep_all = T)
already %>%
distinct(Food_NSC, Unit, .keep_all = T)
already %>%
distinct(Food_NSC, Unit, .keep_all = T)
already %>%
distinct(Food_NSC, Unit, .keep_all = T)
# the ones that have the food_nsc but different portion eaten
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten)
already %>%
distinct(item, .keep_all = T)
# the ones that have the food_nsc but different portion eaten
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten) %>%
inner_join(already %>%
distinct(item, .keep_all = T) %>%
select(item, Por_eaten:Sodium_g))
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten)
# the ones that have the food_nsc but different portion eaten
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten) %>%
inner_join(already %>%
distinct(item, .keep_all = T) %>%
select(item, Por_eaten:Sodium_g))
# the ones that have the food_nsc but different portion eaten
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten) %>%
inner_join(already %>%
distinct(item, .keep_all = T) %>%
select(item, Por_eaten:Sodium_g)) %>%
mutate(scale_ratio = target_portion/Por_eaten)
scale_
2*0.665
# the ones that have the food_nsc but different portion eaten
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten) %>%
inner_join(already %>%
distinct(item, .keep_all = T) %>%
select(item, Por_eaten:Sodium_g)) %>%
mutate(scale_ratio = target_portion/Por_eaten) %>%
mutate(Calories_kcal = Calories_kcal*scale_ratio,
Carbohydrates_g = Carbohydrates_g*scale_ratio,
Fibers_g = Fibers_g*scale_ratio,
Sugars_g = Sugars_g*scale_ratio,
Sodium_g = Sodium_g*scale_ratio,
Protein_g = Protein_g*scale_ratio,
Fat_g = Fat_g*scale_ratio)
# the ones that have the food_nsc but different portion eaten
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten) %>%
inner_join(already %>%
distinct(item, .keep_all = T) %>%
select(item, Por_eaten:Sodium_g)) %>%
mutate(scale_ratio = target_portion/Por_eaten) %>%
mutate(Calories_kcal = Calories_kcal*scale_ratio,
Carbohydrates_g = Carbohydrates_g*scale_ratio,
Fibers_g = Fibers_g*scale_ratio,
Sugars_g = Sugars_g*scale_ratio,
Sodium_g = Sodium_g*scale_ratio,
Protein_g = Protein_g*scale_ratio,
Fat_g = Fat_g*scale_ratio)
# the ones that have the food_nsc but different portion eaten
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten) %>%
inner_join(already %>%
distinct(item, .keep_all = T) %>%
select(item, Por_eaten:Sodium_g)) %>%
mutate(scale_ratio = target_portion/Por_eaten) %>%
mutate(Calories_kcal = Calories_kcal*scale_ratio,
Carbohydrates_g = Carbohydrates_g*scale_ratio,
Fibers_g = Fibers_g*scale_ratio,
Sugars_g = Sugars_g*scale_ratio,
Sodium_g = Sodium_g*scale_ratio,
Protein_g = Protein_g*scale_ratio,
Fat_g = Fat_g*scale_ratio)
# the ones that have the food_nsc but different portion eaten
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten) %>%
inner_join(already %>%
distinct(item, .keep_all = T) %>%
select(item, Por_eaten:Sodium_g)) %>%
mutate(scale_ratio = target_portion/Por_eaten) %>%
mutate(Calories_kcal = Calories_kcal*scale_ratio,
Carbohydrates_g = Carbohydrates_g*scale_ratio,
Fibers_g = Fibers_g*scale_ratio,
Sugars_g = Sugars_g*scale_ratio,
Sodium_g = Sodium_g*scale_ratio,
Protein_g = Protein_g*scale_ratio,
Fat_g = Fat_g*scale_ratio) %>%
select(-Por_eaten ) %>%
rename(Por_eaten = target_portion)
# the ones that have the food_nsc but different portion eaten
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten) %>%
inner_join(already %>%
distinct(item, .keep_all = T) %>%
select(item, Por_eaten:Sodium_g)) %>%
mutate(scale_ratio = target_portion/Por_eaten) %>%
mutate(Calories_kcal = Calories_kcal*scale_ratio,
Carbohydrates_g = Carbohydrates_g*scale_ratio,
Fibers_g = Fibers_g*scale_ratio,
Sugars_g = Sugars_g*scale_ratio,
Sodium_g = Sodium_g*scale_ratio,
Protein_g = Protein_g*scale_ratio,
Fat_g = Fat_g*scale_ratio) %>%
select(-Por_eaten ) %>%
rename(Por_eaten = target_portion) %>%
select(-item, -scale_ratio)
scale_ <- exact %>%
filter(!Food_NSC %in% setdiff(new, dtb$Food_NSC)) %>%
filter(is.na(Calories_kcal)) %>%
arrange(Food_NSC) %>%
select(-ends_with('_g'), -Calories_kcal) %>%
mutate(item = str_glue('{Food_NSC}__{Unit}')) %>%
rename(target_portion = Por_eaten) %>%
inner_join(already %>%
distinct(item, .keep_all = T) %>%
select(item, Por_eaten:Sodium_g)) %>%
mutate(scale_ratio = target_portion/Por_eaten) %>%
mutate(Calories_kcal = Calories_kcal*scale_ratio,
Carbohydrates_g = Carbohydrates_g*scale_ratio,
Fibers_g = Fibers_g*scale_ratio,
Sugars_g = Sugars_g*scale_ratio,
Sodium_g = Sodium_g*scale_ratio,
Protein_g = Protein_g*scale_ratio,
Fat_g = Fat_g*scale_ratio) %>%
select(-Por_eaten ) %>%
rename(Por_eaten = target_portion) %>%
select(-item, -scale_ratio)
# to look at the 4 new items related entries
new_food_nsc <- setdiff(new, dtb$Food_NSC)
new_food_nsc
View(dtb)
View(fix)
new_food_nsc <- setdiff(new, dtb$Food_NSC)
new_food_nsc <- setdiff(new, dtb$Food_NSC)
new_food_nsc
109*0.67
221/3
221/3
8.6/3
19.4/3
74*0.75
74*1.5
View(fix)
checked1 <- fix %>%
select(-ends_with('_g'), -Calories_kcal) %>%
left_join(already)
View(checked1)
# to combine all the fixed/double checked entries
checked1 <- fix %>%
select(-ends_with('_g'), -Calories_kcal) %>%
left_join(already) %>%
filter(!is.na(Calories_kcal)) %>%
# to combine all the fixed/double checked entries
checked1 <- fix %>%
select(-ends_with('_g'), -Calories_kcal) %>%
left_join(already) %>%
ungroup() %>%
filter(!is.na(Calories_kcal)) %>%
checked1 <- fix %>%
select(-ends_with('_g'), -Calories_kcal) %>%
left_join(already)
# to combine all the fixed/double checked entries
checked1 <- fix %>%
select(-ends_with('_g'), -Calories_kcal) %>%
left_join(already)
View(checked1)
# to combine all the fixed/double checked entries
checked1 <- fix %>%
select(-ends_with('_g'), -Calories_kcal) %>%
left_join(already) %>%
ungroup() %>%
filter(!is.na(Calories_kcal))
View(checked1)
# to combine all the fixed/double checked entries
checked1 <- fix %>%
select(-ends_with('_g'), -Calories_kcal) %>%
left_join(already) %>%
#ungroup() %>%
filter(!is.na(Calories_kcal))
checked1 <- fix %>%
select(-ends_with('_g'), -Calories_kcal) %>%
left_join(already)
# to combine all the fixed/double checked entries
checked1 <- fix %>%
select(-ends_with('_g'), -Calories_kcal) %>%
left_join(already) %>%
filter(!is.na(Calories_kcal))
View(scale_)
checked2 <- scale_
checked3 <- fix %>%
filter(Food_NSC %in% new_food_nsc)
checked_all <- bind_rows(checked1, checked2, checked3)
View(checked3)
checked_all <- bind_rows(checked1, checked2, checked3)
View(checked_all)
checked_all <- bind_rows(checked1, checked2, checked3)
checked_all <- bind_rows(checked1, checked2, checked3) %>%
select(colnames(fix))
View(checked_all)
checked_all <- bind_rows(checked1, checked2, checked3) %>%
select(colnames(fix))
checked_all <- bind_rows(checked1, checked2, checked3)
checked_all <- bind_rows(checked1, checked2, checked3) %>%
select(colnames(fix))
View(dtb)
View(dtb)
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g)
View(engy)
# calculate the dehydrated weight for the entries
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g))
checked_all
engy
View(dtb)
# calculate the dehydrated weight for the entries
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g),
Food_code = as.numeric(Food_code))
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g),
Food_code = as.numeric(Food_code))
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g),
Food_code = as.numeric(Food_code))
# calculate the dehydrated weight for the entries
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g),
Food_code = as.numeric(Food_code))
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g),
Food_code = as.numeric(Food_code))
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g),
Food_code = as.numeric(Food_code))
# calculate the dehydrated weight for the entries
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g),
Food_code = as.numeric(Food_code))
View(checked_all)
engy <- read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g),
Food_code = as.numeric(Food_code))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')
View(checked_need_conversion)
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
select(colnames(dtb))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
select(colnames(dtb))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
View(checked_need_conversion)
checked_need_conversion <-  checked_all %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
select(colnames(dtb))
View(dtb)
dtb
new_dtb <- bind_rows(
dtb %>%
filter(mrn != 35594872),
checked_need_conversion
)
View(new_dtb)
new_dtb <- bind_rows(
dtb %>%
filter(mrn != 35594872),
checked_need_conversion
)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
dtb %>%
filter(mrn != 35594872)
22587+253
dtb %>%
filter(mrn != 35594872)
new_dtb <- bind_rows(
dtb %>%
filter(mrn != 35594872),
checked_need_conversion
)
new_dtb %>% write_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(seqinr)
install.packages('seqinr')
library(seqinr)
# look at what is in that bile acid genes IMG fasta file
bile <- read.fasta('../data/bile_acid_genes_IMG.fa', seqtype = 'aa')
# look at what is in that bile acid genes IMG fasta file
bile <- read.fasta('../data/bile_acid_genes_IMG.fa', seqtype = 'AA')
View(bile)
# look at what is in that bile acid genes IMG fasta file
bile <- read.fasta('../data/bile_acid_genes_IMG.fa', seqtype = 'AA', as.string = T)
View(bile)
# look at what is in that bile acid genes IMG fasta file
bile <- read.fasta('../data/bile_acid_genes_IMG.fa', seqtype = 'AA', as.string = T, whole.header = T)
View(bile)
headers <- names(bile)
headers
headers <- tibble(header = names(bile) )
View(headers)
headers <- tibble(header = names(bile) ) %>%
mutate(header = str_replace(header, " ", "|"))
headers <- tibble(header = names(bile) ) %>%
mutate(header = str_replace(header, " ", "|"))  %>%
separate(header, into = c("first", "rest"), sep = "\\|")
headers <- tibble(header = names(bile) ) %>%
filter(str_detect(header, '\\|'))
View(headers)
headers <- tibble(header = names(bile) ) %>%
mutate(header = str_replace(header, " ", "__"))  %>%
separate(header, into = c("first", "rest"), sep = "__")
headers <- tibble(header = names(bile) ) %>%
mutate(header = str_replace(header, " ", "||"))  %>%
separate(header, into = c("first", "rest"), sep = "\\|\\|")
View(headers)
headers <- tibble(header = names(bile) ) %>%
mutate(header = str_replace(header, " ", "||"))  %>%
separate(header, into = c("first", "rest"), sep = "\\|\\|")
View(headers)
View(bile)
View(bile)
View(bile)
headers <- tibble(header = names(bile) ) %>%
mutate(header = str_replace(header, " ", "||"))  %>%
separate(header, into = c("first", "rest"), sep = "\\|\\|")
View(headers)
View(headers)
res <- read_tsv('~/222_short_bile.txt')
View(res)
res
headers
res
res <- read_tsv('~/222_short_bile.txt', col_types = 'cddd') %>%
inner_join(headers)
headers <- tibble(header = names(bile) ) %>%
mutate(header = str_replace(header, " ", "||"))  %>%
separate(header, into = c("first", "rest"), sep = "\\|\\|") %>%
rename(Family = first)
res <- read_tsv('~/222_short_bile.txt', col_types = 'cddd') %>%
inner_join(headers)
View(res)
