count(coeff < 0) %>%
mutate(perc = n/sum(n)*100)
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
title1 <- bquote(Outcome: log[e]~(Simpsons~reciprocal))
div_post <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post
# find the sorting order of the tree, which should be number of food codes in each fg
fg_order <- dtb %>% distinct(Food_code) %>% mutate(fgrp1 = str_sub(as.character(Food_code),1, 1))
View(fg_order)
# find the sorting order of the tree, which should be number of food codes in each fg
fg_order <- dtb %>% distinct(Food_code) %>% mutate(fgrp1 = str_sub(as.character(Food_code),1, 1)) %>%
count(fgrp1)
# find the sorting order of the tree, which should be number of food codes in each fg
fg_order <- dtb %>% distinct(Food_code) %>% mutate(fgrp1 = str_sub(as.character(Food_code),1, 1)) %>%
count(fgrp1) %>%
full_join(key)
# find the sorting order of the tree, which should be number of food codes in each fg
fg_order <- dtb %>% distinct(Food_code) %>% mutate(fgrp1 = str_sub(as.character(Food_code),1, 1)) %>%
count(fgrp1) %>%
full_join(key) %>% arrange(desc(n))
# find the sorting order of the tree, which should be number of food codes in each fg
fg_order <- dtb %>% distinct(Food_code) %>% mutate(fgrp1 = str_sub(as.character(Food_code),1, 1)) %>%
count(fgrp1) %>%
full_join(key) %>% arrange(desc(n)) %>% pull(shortname)
fg_order
div_post_ridge <- post_coeff %>%
left_join(cross0)
View(div_post_ridge)
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +geom_density_ridges(scale = 4) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
??geom_density_ridges
library(ggridges)
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +geom_density_ridges(scale = 4) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +geom_density_ridges(scale = 1) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +geom_density_ridges(scale = 1) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
?geom_density_ridges
# what priors I can set
model_formular <- log(simpson_reciprocal) ~ 0 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
intensity +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "intensityreduced"),
prior(normal(2, 0.1), class = 'b', coef = "intensityablative"),
prior(normal(2, 0.1), class = 'b', coef = "intensitynonablative"))
# samples are drawn solely from the priors ignoring the likelihood
# model_wo_EN  means the usual model that the EN is still a binary variable and not ann inndivicual group
model_div <- brm( model_formular,
data = meta,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 123, sample_prior = T)
# actually draw samples from the priors
samples_prior <- prior_draws(model_div)
# save it for future use
post_res <- suppressWarnings(posterior_samples(model_div))
post_res %>%  write_csv('../data/068_div_model_fg_post.csv')
forest(model_div)
library(brmtools)
library(brmstools)
forest(model_div)
tidybayes(model_div)
?forest
foret(model_div)
forest(model_div)
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
# make a forest plot of the fg coeff and annotate the percentage
# sort the fg in the order of
# find the sorting order of the tree, which should be number of food codes in each fg
fg_order <- dtb %>% distinct(Food_code) %>% mutate(fgrp1 = str_sub(as.character(Food_code),1, 1)) %>%
count(fgrp1) %>%
full_join(key) %>% arrange(n) %>% pull(shortname)
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname)) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
?stat_halfeye
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, fill = stat(x < 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
View(post_coeff)
post_coeff
# calculate the percentage of > 0 and < 0 and annotate that to the figure
percs <- post_coeff %>%
count(item, coeff > 0)
View(percs)
percs
# calculate the percentage of > 0 and < 0 and annotate that to the figure
percs <- post_coeff %>%
count(item, coeff > 0) %>%
mutate(perc =round(n/4000*100,1))
percs
post_coeff %>%
count(item, coeff > 0) %>%
mutate(perc =round(n/4000*100,1))  %>% select(-n) %>%
spread('coeff > 0', 'perc')
# calculate the percentage of > 0 and < 0 and annotate that to the figure
percs <- post_coeff %>%
count(item, coeff > 0) %>%
mutate(perc =round(n/4000*100,1))  %>% select(-n) %>%
spread('coeff > 0', 'perc') %>%
rename(positive = TRUE, negative = FALSE)
# calculate the percentage of > 0 and < 0 and annotate that to the figure
percs <- post_coeff %>%
count(item, coeff > 0) %>%
mutate(perc =round(n/4000*100,1))  %>% select(-n) %>%
spread('coeff > 0', 'perc') %>%
rename(positive = 'TRUE', negative = 'FALSE')
# calculate the percentage of > 0 and < 0 and annotate that to the figure
percs <- post_coeff %>%
count(shortname, coeff > 0) %>%
mutate(perc =round(n/4000*100,1))  %>% select(-n) %>%
spread('coeff > 0', 'perc') %>%
rename(positive = 'TRUE', negative = 'FALSE')
percs
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, fill = stat(x < 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(mapping = percs,
aes(label = negative),
position = position_dodge(0.9),
vjust = 0
) +
scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, fill = stat(x < 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(
aes(mapping = percs,label = negative),
position = position_dodge(0.9),
vjust = 0
) +
scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(perc)
post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(percs)
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(percs) %>%
ggplot(aes(x = coeff, y = shortname, fill = stat(x < 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(
aes(x = -0.5, y = negative)
) +
scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(percs) %>%
ggplot(aes(x = coeff, y = shortname, fill = stat(x < 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(
aes(x = -0.5, label = negative)
) +
scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
?geom_text
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(percs) %>%
ggplot(aes(x = coeff, y = shortname, fill = stat(x < 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(
aes(data = percs,x = -0.5, label = negative)
) +
scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(percs) %>%
ggplot(aes(x = coeff, y = shortname, fill = stat(x < 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(aes(x = -0.9, label = negative)) +
geom_text(aes(x = 0.5, label = positive)) +
scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
div_post_ridge <- post_coeff %>%
mutate(shortname = factor(shortname, levels = fg_order)) %>%
left_join(percs) %>%
ggplot(aes(x = coeff, y = shortname, fill = stat(x < 0))) +
stat_pointinterval(.width = c(.66, .95)) +stat_halfeye() +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
geom_text(aes(x = -0.9, label = negative)) +
geom_text(aes(x = 1, label = positive)) +
scale_fill_manual(values = c("gray80", "skyblue")) +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
#scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post_ridge
div_post_ridge %>%
write_rds('../data/068_div_post_ridge.rds')
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
library(tidyverse)
axis_title_size <- 8
axis_text_size <- 8
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
# import the model post results
entero <- read_csv('../data/087_Enterococcus_model_fg_post.csv') %>%
mutate(genus = 'Enterococcus') %>%
relocate(genus, .before = b_fg_fruit)
extra5 <- read_csv('../data/087_genus_foodgroup_model_post_extra_few.csv')
post <- bind_rows(entero, extra5) %>%
select(genus, starts_with('b_fg')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)])
post_res_genera <- post %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item)) %>%
mutate(item = str_replace(item, 'B_','')) %>%
left_join(key %>% select(item = fg1_name, shortname))
# calculate the percentage of interval that is >|< 0 for each genus/food combo
perc_side <- post %>%
group_by(genus,item ) %>%
count(coeff >= 0) %>%
mutate(perc = round(n/4000, 2)) %>%
mutate(side = if_else(`coeff >= 0` == 'TRUE', 'positive', 'negative')) %>%
ungroup() %>%
select(genus, item, perc, side) %>%
spread('side', 'perc') %>%
mutate(item = str_replace(item, 'b_','')) %>%
left_join(key %>% select(item = fg1_name, shortname), by = "item") %>%
mutate(color = if_else(positive >= 0.75, 'maroon', if_else(negative >= 0.75, 'steelblue', 'white'))) %>%
mutate(mark = if_else(negative >= 0.99 | positive >= 0.99, '***', if_else(negative >= 0.975 | positive >= 0.975, '**', if_else(negative >= 0.95 | positive >= 0.95, '*', '')))) %>%
mutate(genus = factor(genus, levels = c('Enterococcus','Klebsiella','Cronobacter','Enterobacter','Citrobacter','Cedecea','Escherichia'))) %>%
mutate(shortname = factor(shortname, levels = rev(c('Oils','Eggs','Legumes','Milk','Grains','Meats','Vegetables','Sweets','Fruits'))))
View(perc_side)
# calculate the percentage of interval that is >|< 0 for each genus/food combo
dtb <- read_csv('../data/152_combined_DTB.csv')
fg_order <- dtb %>% distinct(Food_code) %>% mutate(fgrp1 = str_sub(as.character(Food_code),1, 1)) %>%
count(fgrp1) %>%
full_join(key) %>% arrange(n) %>% pull(shortname)
fg_order
perc_side <- post %>%
group_by(genus,item ) %>%
count(coeff >= 0) %>%
mutate(perc = round(n/4000, 2)) %>%
mutate(side = if_else(`coeff >= 0` == 'TRUE', 'positive', 'negative')) %>%
ungroup() %>%
select(genus, item, perc, side) %>%
spread('side', 'perc') %>%
mutate(item = str_replace(item, 'b_','')) %>%
left_join(key %>% select(item = fg1_name, shortname), by = "item") %>%
mutate(color = if_else(positive >= 0.75, 'maroon', if_else(negative >= 0.75, 'steelblue', 'white'))) %>%
mutate(mark = if_else(negative >= 0.99 | positive >= 0.99, '***', if_else(negative >= 0.975 | positive >= 0.975, '**', if_else(negative >= 0.95 | positive >= 0.95, '*', '')))) %>%
mutate(genus = factor(genus, levels = c('Enterococcus','Klebsiella','Cronobacter','Enterobacter','Citrobacter','Cedecea','Escherichia'))) %>%
mutate(shortname = factor(shortname, levels = fg_order))
col_key <- perc_side %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
genus_fg_extra <- ggplot(perc_side, aes(x = genus, y = shortname)) +
geom_tile(aes(fill = color,  x = genus, y =  shortname), alpha = 0.5, color='gray0', width=1, height=1) +
geom_text(aes(label = mark, x = genus,y =  shortname),
nudge_y = -0.05, nudge_x = 0,size = 3) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0', '75% CI < 0 negative','75% CI > 0 positive')) +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=90, hjust=1, size=axis_text_size),
axis.text.y=element_text(size=axis_text_size, hjust=0.95,vjust=0.2),
axis.title=element_text(size=axis_title_size),
legend.position = 'none',legend.text=element_text(size=8),
legend.key = element_rect( colour = "gray50"))
genus_fg_extra %>% write_rds('../data/120_F2E_extra_genera.rds')
ggsave('../data/120_F2E_extra_genera.pdf', width =  60,plot = genus_fg_extra,
height = 70,
units = c("mm"),
dpi = 400)
div_post_ridge
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(cowplot)
f2c <- read_rds('../data/068_div_post_ridge.rds')
f2c
genus_fg_extra
