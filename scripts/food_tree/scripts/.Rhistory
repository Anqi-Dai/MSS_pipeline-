ggscatter(data =  day_calori[[.x]], x = 'fdrt', y = 'daycal', alpha = alpha_val, size = point_size,
color = diet_line_color,
xlab = 'Day relative to HCT',
title = str_glue('{.x}'),
ylab = ''
)  +
geom_line(data = day_calori[[.x]], aes(x = fdrt, y = daycal), linetype = 'solid', size = pt_line_size, col = diet_line_color) +
# the diet faith
geom_point(data = faith[[.x]], aes(x = fdrt, y = faith_pd), col = diet_line_color, size = point_size) +
geom_line(data = faith[[.x]], aes(x = fdrt, y = faith_pd), linetype = 'dashed', size = pt_line_size, col = diet_line_color) +
# the stool data
geom_point(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), col = stool_line_color, size = point_size, shape = 'triangle') +
geom_line(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), linetype = 'solid', size = pt_line_size, col = stool_line_color) +
scale_y_continuous(name = "Diet daily caloric intake/faith diversity",
sec.axis = sec_axis(~./scale_factor, name = "Microbiome alpha diversity")) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
axis.title.y = element_text(color = diet_line_color),
axis.title.y.right = element_text(color = stool_line_color),
aspect.ratio=1)
})
for (i in 1:length(mrns)){
print(every_pt_list[[i]])
}
for (i in 1:length(mrns)){
print(i)
print(every_pt_list[[i]])
}
mrns[21]
View(stool)
# keep the patients that have stool data
mrns <- names(meta)
# keep the patients that have stool data
mrns <- names(meta)
# to put the stool data in the same dimension as the diet data use a scaling factor to bring them to same level when plotting the y but then show on the  y axis scale that they are different
scale_factor <- 50
every_pt_list <-  mrns %>%
set_names(mrns) %>%
map(function(.x) {
ggscatter(data =  day_calori[[.x]], x = 'fdrt', y = 'daycal', alpha = alpha_val, size = point_size,
color = diet_line_color,
xlab = 'Day relative to HCT',
title = str_glue('{.x}'),
ylab = ''
)  +
geom_line(data = day_calori[[.x]], aes(x = fdrt, y = daycal), linetype = 'solid', size = pt_line_size, col = diet_line_color) +
# the diet faith
geom_point(data = faith[[.x]], aes(x = fdrt, y = faith_pd), col = diet_line_color, size = point_size) +
geom_line(data = faith[[.x]], aes(x = fdrt, y = faith_pd), linetype = 'dashed', size = pt_line_size, col = diet_line_color) +
# the stool data
geom_point(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), col = stool_line_color, size = point_size, shape = 'triangle') +
geom_line(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), linetype = 'solid', size = pt_line_size, col = stool_line_color) +
scale_y_continuous(name = "Diet daily caloric intake/faith diversity",
sec.axis = sec_axis(~./scale_factor, name = "Microbiome alpha diversity")) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
axis.title.y = element_text(color = diet_line_color),
axis.title.y.right = element_text(color = stool_line_color),
aspect.ratio=1)
})
for (i in 1:length(mrns)){
print(i)
print(every_pt_list[[i]])
}
# to put the stool data in the same dimension as the diet data use a scaling factor to bring them to same level when plotting the y but then show on the  y axis scale that they are different
scale_factor <- 50
every_pt_list <-  mrns %>%
set_names(mrns) %>%
map(function(.x) {
ggscatter(data =  day_calori[[.x]], x = 'fdrt', y = 'daycal', alpha = alpha_val, size = point_size,
color = diet_line_color,
xlab = 'Day relative to HCT',
#title = str_glue('{.x}'),
ylab = ''
)  +
geom_line(data = day_calori[[.x]], aes(x = fdrt, y = daycal), linetype = 'solid', size = pt_line_size, col = diet_line_color) +
# the diet faith
geom_point(data = faith[[.x]], aes(x = fdrt, y = faith_pd), col = diet_line_color, size = point_size) +
geom_line(data = faith[[.x]], aes(x = fdrt, y = faith_pd), linetype = 'dashed', size = pt_line_size, col = diet_line_color) +
# the stool data
geom_point(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), col = stool_line_color, size = point_size, shape = 'triangle') +
geom_line(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), linetype = 'solid', size = pt_line_size, col = stool_line_color) +
scale_y_continuous(name = "Diet daily caloric intake/faith diversity",
sec.axis = sec_axis(~./scale_factor, name = "Microbiome alpha diversity")) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
axis.title.y = element_text(color = diet_line_color),
axis.title.y.right = element_text(color = stool_line_color),
aspect.ratio=1)
})
for (i in 1:length(mrns)){
print(i)
print(every_pt_list[[i]])
}
# arrange the above into a facet-wrap
library(gridExtra)
n <- length(every_pt_list)
nCol <- floor(sqrt(n))
do.call("grid.arrange", c(every_pt_list, ncol=nCol))
ggsave('../figs/paper/085_all_patients_timecourse.eps', width = 10)
all <- do.call("grid.arrange", c(every_pt_list, ncol=nCol))
ggsave('../figs/paper/085_all_patients_timecourse.eps', width = 10, plot = all)
nCol <- 6
all <- do.call("grid.arrange", c(every_pt_list, ncol=nCol))
ggsave('../figs/paper/085_all_patients_timecourse.eps', width = 10, plot = all)
ggsave('../figs/paper/085_all_patients_timecourse.eps',
width = 10,
height = 30,
plot = all)
# to put the stool data in the same dimension as the diet data use a scaling factor to bring them to same level when plotting the y but then show on the  y axis scale that they are different
scale_factor <- 50
every_pt_list <-  mrns %>%
set_names(mrns) %>%
map(function(.x) {
ggscatter(data =  day_calori[[.x]], x = 'fdrt', y = 'daycal', alpha = alpha_val, size = point_size,
color = diet_line_color,
xlab = 'Day relative to HCT',
#title = str_glue('{.x}'),
ylab = ''
)  +
geom_line(data = day_calori[[.x]], aes(x = fdrt, y = daycal), linetype = 'solid', size = pt_line_size, col = diet_line_color) +
# the diet faith
geom_point(data = faith[[.x]], aes(x = fdrt, y = faith_pd), col = diet_line_color, size = point_size) +
geom_line(data = faith[[.x]], aes(x = fdrt, y = faith_pd), linetype = 'dashed', size = pt_line_size, col = diet_line_color) +
# the stool data
geom_point(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), col = stool_line_color, size = point_size, shape = 'triangle') +
geom_line(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), linetype = 'solid', size = pt_line_size, col = stool_line_color) +
scale_y_continuous(name = "Daily cal/Faith div",
sec.axis = sec_axis(~./scale_factor, name = expression(Fecal~alpha~diversity))) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
axis.title.y = element_text(color = diet_line_color),
axis.title.y.right = element_text(color = stool_line_color),
aspect.ratio=1)
})
# arrange the above into a facet-wrap
library(gridExtra)
n <- length(every_pt_list)
nCol <- 6
all <- do.call("grid.arrange", c(every_pt_list, ncol=nCol))
ggsave('../figs/paper/085_all_patients_timecourse.eps',
width = 10,
height = 30,
plot = all)
axis_text_size <- 8
axis_title_size <- 8
# to put the stool data in the same dimension as the diet data use a scaling factor to bring them to same level when plotting the y but then show on the  y axis scale that they are different
scale_factor <- 50
every_pt_list <-  mrns %>%
set_names(mrns) %>%
map(function(.x) {
ggscatter(data =  day_calori[[.x]], x = 'fdrt', y = 'daycal', alpha = alpha_val, size = point_size,
color = diet_line_color,
xlab = 'Day relative to HCT',
#title = str_glue('{.x}'),
ylab = ''
)  +
geom_line(data = day_calori[[.x]], aes(x = fdrt, y = daycal), linetype = 'solid', size = pt_line_size, col = diet_line_color) +
# the diet faith
geom_point(data = faith[[.x]], aes(x = fdrt, y = faith_pd), col = diet_line_color, size = point_size) +
geom_line(data = faith[[.x]], aes(x = fdrt, y = faith_pd), linetype = 'dashed', size = pt_line_size, col = diet_line_color) +
# the stool data
geom_point(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), col = stool_line_color, size = point_size, shape = 'triangle') +
geom_line(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), linetype = 'solid', size = pt_line_size, col = stool_line_color) +
scale_y_continuous(name = "Daily cal/Faith div",
sec.axis = sec_axis(~./scale_factor, name = expression(Fecal~alpha~diversity))) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
axis.title.y = element_text(color = diet_line_color),
axis.title.y.right = element_text(color = stool_line_color),
aspect.ratio=1)
})
# arrange the above into a facet-wrap
library(gridExtra)
n <- length(every_pt_list)
nCol <- 6
all <- do.call("grid.arrange", c(every_pt_list, ncol=nCol))
ggsave('../figs/paper/085_all_patients_timecourse.eps',
width = 10,
height = 30,
plot = all)
library(ggpubr)
library(tidyverse)
pt_line_size <- 0.5
alpha_val <- 1
point_size <- 1
diet_line_color <- 'darkolivegreen2'
axis_text_size <- 8
axis_title_size <- 8
stool_line_color <- 'yellow4'
# to put the stool data in the same dimension as the diet data use a scaling factor to bring them to same level when plotting the y but then show on the  y axis scale that they are different
scale_factor <- 50
every_pt_list <-  mrns %>%
set_names(mrns) %>%
map(function(.x) {
ggscatter(data =  day_calori[[.x]], x = 'fdrt', y = 'daycal', alpha = alpha_val, size = point_size,
color = diet_line_color,
xlab = 'Day relative to HCT',
#title = str_glue('{.x}'),
ylab = ''
)  +
geom_line(data = day_calori[[.x]], aes(x = fdrt, y = daycal), linetype = 'solid', size = pt_line_size, col = diet_line_color) +
# the diet faith
geom_point(data = faith[[.x]], aes(x = fdrt, y = faith_pd), col = diet_line_color, size = point_size) +
geom_line(data = faith[[.x]], aes(x = fdrt, y = faith_pd), linetype = 'dashed', size = pt_line_size, col = diet_line_color) +
# the stool data
geom_point(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), col = stool_line_color, size = point_size, shape = 'triangle') +
geom_line(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), linetype = 'solid', size = pt_line_size, col = stool_line_color) +
scale_y_continuous(name = "Daily cal/Faith div",
sec.axis = sec_axis(~./scale_factor, name = expression(Fecal~alpha~diversity))) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
axis.title.y = element_text(color = diet_line_color),
axis.title.y.right = element_text(color = stool_line_color),
aspect.ratio=1)
})
# arrange the above into a facet-wrap
library(gridExtra)
n <- length(every_pt_list)
nCol <- 6
all <- do.call("grid.arrange", c(every_pt_list, ncol=nCol))
ggsave('../figs/paper/085_all_patients_timecourse.eps',
width = 10,
height = 30,
plot = all)
ggsave('../figs/paper/085_all_patients_timecourse.eps',
width = 10,
height = 25,
plot = all)
ggsave('../figs/paper/085_all_patients_timecourse.eps',
width = 10,
height = 20,
plot = all)
knitr::opts_chunk$set(echo = TRUE)
cts <- read_csv('../data/cleaned_stool/ALL_stool_samples_genus_counts.csv') %>%
filter(sampleid %in% meta$sampleid)
library(tidyverse)
library(ggpubr)
library(vdbR)
connect_database('~/dbConfig.txt')
library(tidyverse)
library(ggpubr)
library(vdbR)
connect_database('~/dbConfig.txt')
list_table_from_database('nutri')
get_table_from_database('samples_castori_ag')
library(brms)
library(rstan)
options(mc.cores = parallel::detectCores())
ncores = parallel::detectCores()
rstan_options(auto_write = TRUE)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
cts <- read_csv('../data/cleaned_stool/ALL_stool_samples_genus_counts.csv') %>%
filter(sampleid %in% meta$sampleid)
thre <- seq(0.0001, 0.002, 0.0001)
thre %>%
set_names(thre) %>%
map_dfr(function(num){
cts %>%
group_by(genus) %>%
count(relab > num) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 10) %>%
nrow
}) %>%
gather('thre', 'num')
target_genera <-  cts %>%
group_by(genus) %>%
count(relab > 0.002) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 10) %>%
pull(genus)
gcts <- cts %>%
filter(genus %in% target_genera) %>%
mutate(relablog = log10(relab + 2*10^-6)) %>%
dplyr::select(-relab) %>%
spread(key = 'genus', value = 'relablog', fill = 0)
View(gcts)
# the daily caloric intake :
all_daily_pt <- dtb %>%
group_by(mrn, fdrt) %>%
summarise(total_daily = sum(Calories_kcal))
# the previous two days average for each stool sample
stb_pair <- meta %>%
select(mrn, sdrt) %>%
transmute(mrn = mrn,
p1d = sdrt-1,
p2d = sdrt-2)
mean_p2d_cal <-  function(mrn_, p1d_, p2d_){
df = all_daily_pt %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_cal = sum(total_daily)/2)
return(df)
}
mean_p2d_df_cal <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_cal(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
View(mean_p2d_df_cal)
nutrients <- dtb %>%
select(mrn, fdrt, Protein_g:Sugars_g)
View(nutrients)
# the daily total of each nutrients
nutrients <- dtb %>%
select(mrn, fdrt, Protein_g:Sugars_g) %>%
gather('type','gram', Protein_g:Sugars_g) %>%
group_by(mrn, fdrt, type) %>%
summarise(total_daily = sum(gram)) %>%
split(.$type)
mean_p2d_fiber <-  function(mrn_, p1d_, p2d_){
df = nutrients$Fibers_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_fiber = sum(total_daily)/2)
return(df)
}
mean_p2d_carb <-  function(mrn_, p1d_, p2d_){
df = nutrients$Carbohydrates_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_carb = sum(total_daily)/2)
return(df)
}
mean_p2d_fat <-  function(mrn_, p1d_, p2d_){
df = nutrients$Fat_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_fat = sum(total_daily)/2)
return(df)
}
mean_p2d_Protein <-  function(mrn_, p1d_, p2d_){
df = nutrients$Protein_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_Protein = sum(total_daily)/2)
return(df)
}
mean_p2d_Sugars <-  function(mrn_, p1d_, p2d_){
df = nutrients$Sugars_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_Sugars = sum(total_daily)/2)
return(df)
}
mean_p2d_fiber <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_fiber(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_fat <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_fat(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_Protein <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_Protein(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_Sugars <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_Sugars(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_carb <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_carb(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
p2d_diet <- mean_p2d_df_cal %>%
full_join(mean_p2d_fiber, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_fat, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_Protein, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_Sugars, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_carb, by = c("sampleid", "mrn"))
full <- meta %>%
full_join(p2d_diet, by = c("sampleid", "mrn")) %>%
full_join(gcts, by = "sampleid") %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(mrn = factor(mrn)) %>%
mutate(ave_fiber = ave_fiber/100,
ave_fat = ave_fat/100,
ave_Protein = ave_Protein/100,
ave_Sugars = ave_Sugars/100,
ave_carb = ave_carb/100,
) %>%
mutate(inten_non = if_else(intensity == 'nonablative', 1, 0),
inten_ab = if_else(intensity == 'ablative', 1, 0),
inten_re = if_else(intensity == 'reduced', 1, 0))
full %>%
write_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_dietall_genera36.csv')
View(full)
View(mean_p2d_carb)
alpha_cal <- log(simpson_reciprocal) ~ 1 +
ave_cal +
inten_non + inten_ab + inten_re +
EN +
TPN +
empirical +
(1 | mrn) +
(1 | timebin)
mean_ave_cal <- mean(full$ave_cal)
mean_ave_cal
alpha_cal <- log(simpson_reciprocal) ~ 1 +
ave_cal +
inten_non + inten_ab + inten_re +
EN +
TPN +
empirical +
(1 | mrn) +
(1 | timebin)
priors_alpha_cal <- c(# for the food group variables
prior(normal(0, 1.5), class = 'b', coef = "ave_cal"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "tpnF"),
prior(normal(0, 0.1), class = 'b', coef = "tpnT"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "enF"),
prior(normal(0, 0.1), class = 'b', coef = "enT"),
# for the empirical
prior(normal(0, 0.6), class = 'b', coef = "empiF"),
prior(normal(0, 0.6), class = 'b', coef = "empiT"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
# for the intercept
prior(normal(2, 0.1), class = 'Intercept'))
# vet the prior
model_alpha_cal  <- brm( alpha_cal,
data = full,
warmup = 1000, iter = 3000,
prior = priors_alpha_cal,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
alpha_cal <- log(simpson_reciprocal) ~ 1 +
ave_cal +
inten_non + inten_ab + inten_re +
EN +
TPN +
empirical +
(1 | mrn) +
(1 | timebin)
priors_alpha_cal <- c(# for the food group variables
prior(normal(0, 1.5), class = 'b', coef = "ave_cal"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.6), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
# for the intercept
prior(normal(2, 0.1), class = 'Intercept'))
# vet the prior
model_alpha_cal  <- brm( alpha_cal,
data = full,
warmup = 1000, iter = 3000,
prior = priors_alpha_cal,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
mean_ave_cal <- mean(full$ave_cal)
mean_ave_cal_prior <- prior_draws(model_alpha_cal) %>%
mutate(mean_ave_cal_div = Intercept +
b_ave_cal * mean_ave_cal+
b_inten_re +
b_empiF +
b_tpnF +
b_enF) %>%
select(mean_ave_cal_div) %>%
mutate(grp = 'mean_ave_cal') %>%
rename(prior_res = mean_ave_cal_div) %>%
select(grp, prior_res)
mean_ave_cal_prior <- prior_draws(model_alpha_cal)
View(mean_ave_cal_prior)
mean_ave_cal_prior <- prior_draws(model_alpha_cal) %>%
mutate(mean_ave_cal_div = Intercept +
b_ave_cal * mean_ave_cal+
b_inten_re ) %>%
select(mean_ave_cal_div) %>%
mutate(grp = 'mean_ave_cal') %>%
rename(prior_res = mean_ave_cal_div) %>%
select(grp, prior_res)
View(mean_ave_cal_prior)
