ggplot(aes(x = sdrt, y = ge_copy )) +
geom_line(aes(x = sdrt, y = ge_copy), linetype = 'solid', size = 0.5, col = 'black') +
geom_point(aes(size = max_pt, col = max_pt)) +
scale_size_manual(values = c(2, 4)) +
scale_color_manual(values = c('black', 'red')) +
#xlim(xmin, xmax) +
labs(x = 'Transplant day',
y = str_glue('{ge}\ncopies /g'),
title = '') +
theme_classic() +
theme(aspect.ratio=shorter_ratio,legend.position = 'none',
plot.margin = margin(l=-0.8,unit="cm"),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(colour = "grey85"))
# plot the total abundance data
sam <- samples_castori_ag %>%
filter(mrn %in% pt) %>%
distinct(sampleid) %>%
pull(sampleid)
samps <- samples_castori_ag %>%
filter(mrn %in% pt) %>%
distinct(sampleid, mrn)
cts <- get_counts_subset(sam)
library(vdbR)
connect_database('~/dbConfig.txt')
# plot the total abundance data
sam <- samples_castori_ag %>%
filter(mrn %in% pt) %>%
distinct(sampleid) %>%
pull(sampleid)
samps <- samples_castori_ag %>%
filter(mrn %in% pt) %>%
distinct(sampleid, mrn)
cts <- get_counts_subset(sam)
cts_ge <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
filter(genus == ge)  %>%
left_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct) %>%
mutate(max_pt = if_else(ge_copy == max(cts_ge$ge_copy), T, F))
ge_copies <- cts_ge %>%
#filter(sdrt %in% -5:15) %>%
#mutate(ge_copy = ge_copy/1e7) %>%
ggplot(aes(x = sdrt, y = ge_copy )) +
geom_line(aes(x = sdrt, y = ge_copy), linetype = 'solid', size = 0.5, col = 'black') +
geom_point(aes(size = max_pt, col = max_pt)) +
scale_size_manual(values = c(2, 4)) +
scale_color_manual(values = c('black', 'red')) +
#xlim(xmin, xmax) +
labs(x = 'Transplant day',
y = str_glue('{ge}\ncopies /g'),
title = '') +
theme_classic() +
theme(aspect.ratio=shorter_ratio,legend.position = 'none',
plot.margin = margin(l=-0.8,unit="cm"),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(colour = "grey85"))
ge_copies
sam
cts_ge <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative))
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
filter(genus == ge)
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative))
cts_ge
cts_ge <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0)
cts_ge
cts_ge <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge)
cts_ge
cts_ge <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab')
cts_ge
cts_ge <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab') %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct) %>%
mutate(max_pt = if_else(ge_copy == max(cts_ge$ge_copy), T, F))
cts_ge <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab')
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge)
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab')
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)])
cts_ge <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct) %>%
mutate(max_pt = if_else(ge_copy == max(cts_ge$ge_copy), T, F))
cts_ge <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
cts_ge
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
cts_ge_df <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
View(cts_ge_df)
cts_ge_df <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
cts_ge <- cts_ge_df %>%
mutate(max_pt = if_else(ge_copy == max(cts_ge_df$ge_copy), T, F))
# plot the total abundance data
sam <- samples_castori_ag %>%
filter(mrn %in% pt) %>%
distinct(sampleid) %>%
pull(sampleid)
samps <- samples_castori_ag %>%
filter(mrn %in% pt) %>%
distinct(sampleid, mrn)
cts <- get_counts_subset(sam)
cts_ge_df <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
spread('sampleid', 'relab', fill = 0) %>%
filter(genus == ge) %>%
gather('sampleid', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
inner_join(updated_qPCR %>%
select(sampleid , copies_16s_per_g)) %>%
mutate(ge_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
cts_ge <- cts_ge_df %>%
mutate(max_pt = if_else(ge_copy == max(cts_ge_df$ge_copy), T, F))
View(cts_ge)
# find the samples that have zero relab in this genus
ge_copies <- cts_ge %>%
#filter(sdrt %in% -5:15) %>%
#mutate(ge_copy = ge_copy/1e7) %>%
ggplot(aes(x = sdrt, y = ge_copy )) +
geom_line(aes(x = sdrt, y = ge_copy), linetype = 'solid', size = 0.5, col = 'black') +
geom_point(aes(size = max_pt, col = max_pt)) +
scale_size_manual(values = c(2, 4)) +
scale_color_manual(values = c('black', 'red')) +
#xlim(xmin, xmax) +
labs(x = 'Transplant day',
y = str_glue('{ge}\ncopies /g'),
title = '') +
theme_classic() +
theme(aspect.ratio=shorter_ratio,legend.position = 'none',
plot.margin = margin(l=-0.8,unit="cm"),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(colour = "grey85"))
ge_copies
ge_copies
summary(cts_ge$copies_16s_per_g)
View(cts)
# extract posterior samples for the coeff
post_samples  <- read_csv('../data/068_div_model_fg_post.csv')
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
# modify it to be the look that we have discussed
diversity_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
dtb %>%
distinct(mrn) %>%
write_csv('../data/nutrition_patients_97_mrns.csv', col_names = T)
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
# modify it to be the look that we have discussed
diversity_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
diversity_factor %>%
write_rds('../data/068_diversity_factor_forest.rds')
coeff_bi %>%
filter(item == 'b_ENTRUE') %>%
count(coeff < 0) %>%
mutate(perc = n / sum(n)*100)
diversity_factor
coeff_bi
coeff_bi %>%
filter(!str_detect(item, 'intensity')) %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
coeff_bi %>%
filter(!str_detect(item, 'intensity')) %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1)
ggsave('../data/068_only_abx_diversity_bi.pdf', width = 4)
ggsave('../data/068_only_abx_diversity_bi.pdf', width = 3, height = 3)
ggsave('../data/068_only_abx_diversity_bi.pdf', width = 3, height = 3)
ggsave('../data/068_only_abx_diversity_bi.pdf', width = 4, height = 3)
ggsave('../data/068_only_abx_diversity_bi.pdf', width = 3.5, height = 3)
