med1
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds') %>%
select(MRN, start_date, stop_date, drug_name, route)
View(med1)
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds') %>%
select(MRN, start_date, stop_date, drug_name, route) %>%
mutate(drug_name_clean = str_replace_all(drug_name, '-', '_')) %>%
mutate(drug_name_clean = str_to_lower(drug_name_clean))
# start the cleaning of the medication data from the raw source
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds') %>%
select(MRN, start_date, stop_date, drug_name, route) %>%
mutate(drug_name_clean = str_replace_all(drug_name, '-', '_')) %>%
mutate(drug_name_clean = str_to_lower(drug_name_clean),
mrn = as.numeric(MRN)) %>%
filter(mrn %in% ptb$mrn)
med1all <-   med1 %>% distinct(drug_name_clean) %>% arrange(desc(n))
med1all <-   med1 %>% distinct(drug_name_clean) %>% arrange(desc(n))
med1all <-   med1 %>% count(drug_name_clean) %>% arrange(desc(n))
View(med1all)
# start the cleaning of the medication data from the raw source
picked <-  c('vancomycin', 'imipenem_cilastatin','meropenem','ertapenem', 'cefepime', 'linezolid','metronidazole','piperacillin_tazobactam')
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds') %>%
select(MRN, start_date, stop_date, drug_name, route) %>%
mutate(drug_name_clean = str_replace_all(drug_name, '-', '_')) %>%
mutate(drug_name_clean = str_to_lower(drug_name_clean),
mrn = as.numeric(MRN)) %>%
filter(mrn %in% ptb$mrn)
now <-   med1 %>% count(drug_name_clean) %>% arrange(desc(n))
allpickes <- tibble(picked = picked) %>%
summarise(text = str_c(picked, collapse = "|"))
View(allpickes)
allhas <- now %>%
filter(str_detect(drug_name_clean, allpickes$text))
View(allhas)
get_table_from_database ("antibiotics_antibacterial_multicenter_ag")
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database ("antibiotics_antibacterial_multicenter_ag")
View(antibiotics_antibacterial_multicenter_ag)
allpickes <- tibble(picked = picked) %>%
summarise(text = str_c(picked, collapse = "|"))
allhas <- now %>%
filter(str_detect(drug_name_clean, allpickes$text))
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'PO') %>%
filter(mrn %in% ptb$mrn)
View(empirical_med_oral1)
med1
allroute <- med1 %>% count(route) %>% arrange(desc(n))
View(allroute)
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name)
View(empirical_med_oral1)
allroute <- empirical_med_oral1 %>% count(route) %>% arrange(desc(n))
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'oral') %>%
filter(mrn %in% ptb$mrn)
View(empirical_med_oral1)
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'oral') %>%
filter(mrn %in% ptb$mrn)
View(empirical_med_oral1)
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name)
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'oral')
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'oral') %>%
filter(mrn %in% ptb$mrn)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('samples_castori_ag')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
View(meta)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
exposed_empirical <- empirical_med_oral1 %>%
mutate(drug_int =  interval(start_date, stop_date)) %>%
inner_join(p2d_df, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
exposed_empirical %>% distinct(sampleid)
316+19
exposed_empirical <- empirical_med_oral1 %>%
mutate(drug_int =  interval(start_date, stop_date)) %>%
inner_join(p2d_df, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
exposed_empirical %>% distinct(sampleid)
exposed_empirical %>% write_rds('../data/134_743stool_samples_p2d_drug_exposure.rds')
View(exposed_empirical)
exposed_empirical %>% distinct(sampleid)
exposed_empirical %>% distinct(sampleid)
exposed_empirical %>% write_rds('../data/134_743stool_samples_p2d_drug_exposure.rds')
exposed_empirical %>% distinct(sampleid)
exposed_empirical %>% write_rds('../data/134_743stool_samples_p2d_drug_exposure.rds')
# need to update my meta table with this newly updated exposure data
new_meta <- meta %>%
mutate(empirical = if_else(sampleid %in% exposed_empirical$sampleid, T, F))
new_meta %>% write_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
knitr::opts_chunk$set(echo = TRUE, message = F)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
dtb %>%
distinct(mrn) %>%
write_csv('../data/nutrition_patients_97_mrns.csv', col_names = T)
tb_rm <- read_csv('../data/112_has_missing_to_be_removed.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv') %>%
filter(!sampleid %in% tb_rm$sampleid) %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100)
# the mean food group intake from our data
ave_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean)) %>%
gather
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
max_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(max))
meta %>% distinct(mrn)
# what priors I can set
model_formular <- log(simpson_reciprocal) ~ 0 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
intensity +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "intensityreduced"),
prior(normal(2, 0.1), class = 'b', coef = "intensityablative"),
prior(normal(2, 0.1), class = 'b', coef = "intensitynonablative"))
# samples are drawn solely from the priors ignoring the likelihood
# model_wo_EN  means the usual model that the EN is still a binary variable and not ann inndivicual group
model_div <- brm( model_formular,
data = meta,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 123, sample_prior = T)
# actually draw samples from the priors
samples_prior <- prior_draws(model_div)
# save it for future use
post_res <- suppressWarnings(posterior_samples(model_div))
post_res %>%  write_csv('../data/068_div_model_fg_post.csv')
# extract posterior samples for the coeff
post_samples  <- read_csv('../data/068_div_model_fg_post.csv')
# make the forest plot of the post coeff
# like the one on the ash abstract
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_labels <- levels(post_coeff$shortname)
cross0 <- post_coeff %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
# to find the quantiles of the post_coeff
post_coeff %>%
group_by(item) %>%
tidybayes::median_qi(coeff, .width = c( .66, .95))
post_coeff %>%
group_by(item) %>%
summarise(q50 = median(coeff))
post_coeff %>%
group_by(item) %>%
summarise(ave = mean(coeff))
post_coeff %>%
filter(item == 'fruit') %>%
count(coeff < 0) %>%
mutate(perc = n/sum(n)*100)
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
title1 <- bquote(Outcome: log[e]~(Simpsons~reciprocal))
div_post <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post %>%
write_rds('../data/068_div_post.rds')
div_post
# extract posterior samples for the coeff
post_samples  <- read_csv('../data/068_div_model_fg_post.csv')
# make the forest plot of the post coeff
# like the one on the ash abstract
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
fg_labels <- levels(post_coeff$shortname)
cross0 <- post_coeff %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
# to find the quantiles of the post_coeff
post_coeff %>%
group_by(item) %>%
tidybayes::median_qi(coeff, .width = c( .66, .95))
post_coeff %>%
group_by(item) %>%
summarise(q50 = median(coeff))
post_coeff %>%
group_by(item) %>%
summarise(ave = mean(coeff))
post_coeff %>%
filter(item == 'fruit') %>%
count(coeff < 0) %>%
mutate(perc = n/sum(n)*100)
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
title1 <- bquote(Outcome: log[e]~(Simpsons~reciprocal))
div_post <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post %>%
write_rds('../data/068_div_post.rds')
div_post
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
# modify it to be the look that we have discussed
diversity_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
diversity_factor %>%
write_rds('../data/068_diversity_factor_forest.rds')
coeff_bi %>%
filter(item == 'b_ENTRUE') %>%
count(coeff < 0) %>%
mutate(perc = n / sum(n)*100)
coeff_bi %>%
filter(!str_detect(item, 'intensity')) %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp ~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1)
ggsave('../data/068_only_abx_diversity_bi.pdf', width = 3.5, height = 3)
coeff_bi
coeff_bi %>%
filter(!str_detect(item, 'intensity')) %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp ~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1)
diversity_factor
# modify it to be the look that we have discussed
diversity_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
diversity_factor
knitr::opts_chunk$set(echo = TRUE)
dtb1 <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
dtb <- read_rds('../data/136_updated_dtb2.rds')
dtb1 <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
View(dtb1)
dtb1
dtb1 <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv') %>%   select(Food_code, Por_eaten,  Por_eaten , Calories_kcal, dehydrated_weight)
dtb1 <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv') %>%   select(Food_code, Por_eaten,  Unit , Calories_kcal, dehydrated_weight)
dtb1 <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv') %>%   select(Food_NSC , Food_code, Por_eaten,  Unit , Calories_kcal, dehydrated_weight)
dtb1 <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv') %>%   select(Food_NSC , Food_code, Por_eaten,  Unit , Calories_kcal, dehydrated_weight) %>%
distinct()
View(dtb1)
dtb1 <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv') %>%   select(Food_NSC , Food_code, Por_eaten,  Unit , Calories_kcal, dehydrated_weight) %>%
distinct() %>%
arrange(Food_NSC, Por_eaten)
dtb1 <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv') %>%   select(Food_NSC , Food_code, Por_eaten,  Unit , Calories_kcal, dehydrated_weight) %>%
distinct() %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, .keep_all = T)
engy <- readxl::read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g))
View(engy)
knitr::opts_chunk$set(echo = TRUE)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')%>% mutate(Food_code = as.character(Food_code))
check1 <-  read_csv('../data/136_check_1_batch_cal.csv')
View(check1)
check1 <-  read_csv('../data/136_check_1_batch_cal.csv')
check1 <-  read_csv('../data/136_check_1_batch_cal.csv')
View(check1)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')%>% mutate(Food_code = as.character(Food_code))
engy <- readxl::read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g))
check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  dehydrated_weight:total_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten)  %>%
distinct(Food_NSC, Unit, .keep_all = T ) %>%
arrange(desc(Water_g))
View(check1)
View(check1)
check2 <- read_csv('../data/136_check_2_batch_cal_peter.csv')
View(check2)
View(check1)
length(intersect(check1$Food_NSC, check2$Food_NSC))
check2
check1_ <- check1 %>%
left_join(check2 %>% select(Food_NSC, Por_eaten, Unit, Calories_kcal))
View(check1_)
check1_ <- check1 %>%
rename(Calories_kcal = old_cal) %>%
left_join(check2 %>% select(Food_NSC, Por_eaten, Unit, Calories_kcal))
check1
check1_ <- check1 %>%
rename(old_cal  = Calories_kcal) %>%
left_join(check2 %>% select(Food_NSC, Por_eaten, Unit, Calories_kcal))
