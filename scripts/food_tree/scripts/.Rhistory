check1 <- dtb %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  dehydrated_weight:total_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten)  %>%
distinct(Food_NSC, Unit, .keep_all = T ) %>%
arrange(desc(Water_g)) %>%
select(colnames(check2))
View(check1)
check1 %>% write_csv('../data/136_check_1_batch_cal.csv')
check2 %>% write_csv('../data/136_check_2_batch_cal.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
new1 <- read_csv('../data/128_new_dtb.csv') %>% mutate(Food_code = as.character(Food_code))
new1 %>% summary
engy <- readxl::read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g))
new2 <- new1 %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
new2 %>% summary
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Unit, .keep_all = T ) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal)
fixed2 <- read_csv('../data/136_check_2_batch_cal_peter.csv')
View(fixed2)
total_fixed2 <-  new2 %>%
filter(dehydrated_weight > 30 & Water_g > 75)
total_fixed2 <-  new2 %>%
filter(dehydrated_weight > 30 & Water_g > 75)
fixed2 <- read_csv('../data/136_check_2_batch_cal_peter.csv')
total_fixed2 <-  new2 %>%
filter(dehydrated_weight > 30 & Water_g > 75)
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten)
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Unit, .keep_all = T )
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten)
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Unit, .keep_all = T )
# sanity check
check2 <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
distinct(Food_NSC, Unit, .keep_all = T ) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal)
View(fixed2)
# expand the 154 to 1815 all different portions
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal)
View(all_portions)
# expand the 154 to 1815 all different portions
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal)
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal)
View(all_portions)
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal)
View(all_portions)
# expand the 154 to 1815 all different portions
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select(-Food_code, -description, -Calories_kcal)
# expand the 154 to 1815 all different portions
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select(-Food_code, -description, -Calories_kcal) %>%
left_join(fixed2)
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select(-Food_code, -description, -Calories_kcal)
# expand the 154 to 1815 all different portions
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select( -Calories_kcal) %>%
left_join(fixed2)
fixed2
new2
fixed2 <- read_csv('../data/136_check_2_batch_cal_peter.csv') %>% mutate(Food_code = as.character(Food_code))
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select( -Calories_kcal) %>%
left_join(fixed2)
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select( -Calories_kcal)
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75)
# expand the 154 to 1815 all different portions
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select( -Calories_kcal)
View(fixed2)
# expand the 154 to 1815 all different portions
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select( -Calories_kcal) %>%
left_join(fixed2)
# expand the 154 to 1815 all different portions
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select( -Calories_kcal) %>%
left_join(fixed2, by = c("Food_NSC", "Food_code", "description", "Por_eaten", "Unit"))
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select( -Calories_kcal) %>%
left_join(fixed2, by = c("Food_NSC", "Food_code", "description", "Por_eaten", "Unit"))
# expand the 154 to 1815 all different portions
all_portions <- new2 %>%
select(Food_NSC, Food_code,description,  Por_eaten, Unit,Calories_kcal,  Energy_kcal:dehydrated_weight) %>%
filter(dehydrated_weight > 30 & Water_g > 75) %>%
arrange(Food_NSC, Por_eaten) %>%
arrange(desc(Water_g)) %>%
select(Food_NSC:Calories_kcal) %>%
select( -Calories_kcal) %>%
left_join(fixed2, by = c("Food_NSC", "Food_code", "description", "Por_eaten", "Unit"))
all_portions
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))
View(all_portions)
View(split_all_portions)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0)
View(split_all_portions)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0)
View(split_all_portions)
View(split_all_portions)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0)
View(split_all_portions)
View(split_all_portions[["2017 Cereal, Homestyle Oatmeal (2) BR.cup"]])
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map_dfr(~ nrow)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map_dfr(~ nrow())
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map_dfr(~ nrow(.))
View(split_all_portions)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map_dfr(~ nrow(.)) %>%
gather()
sum(split_all_portions$value)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0)
View(split_all_portions[["2017 Sides, Baked Potato (2).each"]])
View(split_all_portions)
View(split_all_portions[["2017 Sides, Mashed Potato w/Gravy.serv"]])
?keep
# find the elements that have NA
have_na <- split_all_portions %>%
map(~ filter(.data = ., is.na(Calories_kcal)) %>% nrow)
View(have_na)
have_na[["2017 Cereal, Homestyle Oatmeal (2) LU.cup"]]
have_na
have_na <- split_all_portions %>%
map(~ filter(.data = ., is.na(Calories_kcal)) )
View(have_na)
# find the elements that have NA
have_na <- split_all_portions %>%
map(~ filter(.data = ., is.na(Calories_kcal)) ) %>%
discard( ~nrow(.) == 0)
View(have_na)
View(have_na[["2017 Salad, Chicken Caesar - Entree (1.5).ounce"]])
View(fixed2)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0)
View(split_all_portions)
View(split_all_portions[["2017 Milk, Skim 4 oz (.5) for Cereal BR.each"]])
?any
# find the elements that have NA
have_na <- split_all_portions %>%
keep(.p = any(is.na(x = .$Calories_kcal)))
df <- split_all_portions[[1]]
View(df)
df %>% any(is.na(Calories_kcal))
df %>% any(is.na(.$Calories_kcal))
df %>% filter(is.na(Calories_kcal))
View(have_na[["2017 Juice, Cranberry 10 oz (2).each"]])
View(split_all_portions[["2017 Juice, Cranberry 10 oz (2).each"]])
View(split_all_portions)
df <- split_all_portions[['2017 Juice, Cranberry 10 oz (2).each']]
df
df <- split_all_portions[['2017 Juice, Cranberry 10 oz (2).each']] %>%
arrange(Calories_kcal)
df
df <- split_all_portions[['2017 Juice, Cranberry 10 oz (2).each']] %>%
arrange(Calories_kcal) %>%
mutate(ratio = Por_eaten/Por_eaten[1])
df
df <- split_all_portions[['2017 Juice, Cranberry 10 oz (2).each']] %>%
arrange(Calories_kcal) %>%
mutate(ratio = Por_eaten/Por_eaten[1]) %>%
mutate(scaled_cal = Calories_kcal*ratio)
df
View(df)
df <- split_all_portions[['2017 Juice, Cranberry 10 oz (2).each']] %>%
arrange(Calories_kcal) %>%
mutate(ratio = Por_eaten/Por_eaten[1]) %>%
mutate(scaled_cal = Calories_kcal[1]*ratio)
df
117*1.5
View(split_all_portions)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map(function(df){
df %>%
arrange(Calories_kcal) %>%
mutate(ratio = Por_eaten/Por_eaten[1]) %>%
mutate(scaled_cal = Calories_kcal[1]*ratio)
})
View(split_all_portions)
View(split_all_portions[["2017 Milkshake, Classic Chocolate (2) 11 oz.each"]])
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map(function(df){
df %>%
arrange(Calories_kcal) %>%
mutate(ratio = Por_eaten/Por_eaten[1]) %>%
mutate(scaled_cal = Calories_kcal[1]*ratio)
})  %>%
bind_rows()
View(all_portions)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map(function(df){
df %>%
arrange(Calories_kcal) %>%
mutate(ratio = Por_eaten/Por_eaten[1]) %>%
mutate(scaled_cal = Calories_kcal[1]*ratio)
})  %>%
bind_rows()
View(split_all_portions)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map(function(df){
df %>%
arrange(Calories_kcal) %>%
mutate(ratio = Por_eaten/Por_eaten[1]) %>%
mutate(scaled_cal = Calories_kcal[1]*ratio)
})  %>%
bind_rows()
View(split_all_portions)
split_all_portions
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map(function(df){
df %>%
arrange(Calories_kcal) %>%
mutate(ratio = Por_eaten/Por_eaten[1]) %>%
mutate(scaled_cal = Calories_kcal[1]*ratio)
})  %>%
bind_rows() %>%
select(-Calories_kcal, -ratio) %>%
rename(Calories_kcal = scaled_cal)
View(all_portions)
View(split_all_portions)
View(split_all_portions)
total_fixed2
total_fixed2
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map(function(df){
df %>%
arrange(Calories_kcal) %>%
mutate(ratio = Por_eaten/Por_eaten[1]) %>%
mutate(scaled_cal = Calories_kcal[1]*ratio)
})  %>%
bind_rows() %>%
select(-Calories_kcal, -ratio) %>%
rename(Calories_kcal = scaled_cal)
split_all_portions <- all_portions %>%
split(., list(.$Food_NSC, .$Unit))%>%
discard( ~nrow(.) == 0) %>%
map(function(df){
df %>%
arrange(Calories_kcal) %>%
mutate(ratio = Por_eaten/Por_eaten[1]) %>%
mutate(scaled_cal = Calories_kcal[1]*ratio)
})  %>%
bind_rows() %>%
select(-Calories_kcal, -ratio) %>%
rename(Calories_kcal = scaled_cal) %>%
distinct()
total_fixed2
# expand to have other columns
total_fixed2_df <- total_fixed2 %>%
select(-Calories_kcal) %>%
inner_join(split_all_portions)
# expand to have other columns
total_fixed2_df <- total_fixed2 %>%
select(-Calories_kcal) %>%
inner_join(split_all_portions, by = c("Food_NSC", "Food_code", "Por_eaten", "Unit", "description"))
View(total_fixed2_df)
# expand to have other columns
total_fixed2_df <- total_fixed2 %>%
select(-Calories_kcal) %>%
inner_join(split_all_portions, by = c("Food_NSC", "Food_code", "Por_eaten", "Unit", "description")) %>%
select(colnames(new2))
View(total_fixed2_df)
View(total_fixed2_df)
# the other part of the df that is unchanged
other2 <- new2 %>%
mutate(fixed = if_else(dehydrated_weight > 30 & Water_g > 75, T, F))
View(other2)
# the other part of the df that is unchanged
other2 <- new2 %>%
mutate(fixed = if_else(dehydrated_weight > 30 & Water_g > 75, T, F)) %>%
filter(fixed == 'FALSE')
17871-1815
# the other part of the df that is unchanged
other2 <- new2 %>%
mutate(fixed = if_else(dehydrated_weight > 30 & Water_g > 75, T, F)) %>%
filter(fixed == 'FALSE') %>%
select(-fixed)
new3 <- bind_rows(total_fixed2_df, other2)
new3 <- bind_rows(total_fixed2_df, other2) %>%
# recalculate the dehydrated weight again
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
engy <- readxl::read_excel('../data/source/2015-2016 FNDDS At A Glance - FNDDS Nutrient Values.xlsx', skip = 1, col_types  = 'text') %>%
rename_all(funs(str_replace_all(., ' ','_'))) %>%
rename_all(funs(str_replace_all(., '\\(|\\)',''))) %>%
select(Food_code, Energy_kcal, Water_g) %>%
mutate(Energy_kcal = as.numeric(Energy_kcal),
Water_g = as.numeric(Water_g))
new3 <- bind_rows(total_fixed2_df, other2) %>%
# recalculate the dehydrated weight again
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
new3 <- bind_rows(total_fixed2_df, other2)
new3
engy
new3 <- bind_rows(total_fixed2_df, other2) %>%
# recalculate the dehydrated weight again
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
engy
new3 <- bind_rows(total_fixed2_df, other2) %>%
# recalculate the dehydrated weight again
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
engy
new3 <- bind_rows(total_fixed2_df, other2) %>%
# recalculate the dehydrated weight again
left_join(engy, by  = 'Food_code')
View(new3)
new3 <- bind_rows(total_fixed2_df, other2)
new3
new3 <- bind_rows(total_fixed2_df, other2) %>%
select(-Energy_kcal, -Water_g, -total_weight, -dehydrated_weight) %>%
# recalculate the dehydrated weight again
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
new3 <- bind_rows(total_fixed2_df, other2) %>%
select(-Energy_kcal, -Water_g, -total_weight, -dehydrated_weight) %>%
# recalculate the dehydrated weight again
left_join(engy, by  = 'Food_code')
new3 <- bind_rows(total_fixed2_df, other2) %>%
select(-Energy_kcal, -Water_g, -total_weight, -dehydrated_weight) %>%
# recalculate the dehydrated weight again
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100)))
sanity_check <- new3 %>%
distinct(Food_NSC, Unit, dehydrated_weight)
View(sanity_check)
View(sanity_check)
sanity_check <- new3 %>%
distinct(Food_NSC, Por_eaten, Unit, dehydrated_weight)
View(new2)
# recalculate the dehydrated weight again
new3 <- bind_rows(total_fixed2_df, other2) %>%
select(-Energy_kcal, -Water_g, -total_weight, -dehydrated_weight) %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
filter(Por_eaten > 0)
sanity_check <- new3 %>%
distinct(Food_NSC, Por_eaten, Unit, dehydrated_weight)
View(new3)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')%>% mutate(Food_code = as.character(Food_code))
colnames(dtb)
colnames(new3)
# recalculate the dehydrated weight again
new3 <- bind_rows(total_fixed2_df, other2) %>%
select(-Energy_kcal, -Water_g, -total_weight, -dehydrated_weight) %>%
left_join(engy, by  = 'Food_code')  %>%
mutate(total_weight = if_else(Energy_kcal == 0, 99999, Calories_kcal/Energy_kcal*100)) %>%
mutate(dehydrated_weight = if_else(total_weight == 99999, 0.0001, total_weight*(1 - Water_g/100))) %>%
filter(Por_eaten > 0) %>%
select(colnames(dtb))
View(new3)
new3
new3 %>% write_rds('../data/136_updated_dtb2.rds')
