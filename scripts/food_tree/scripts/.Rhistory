height = 140,
#height = 60,
units = c("mm"),
dpi = 400, plot = f1)
# assemble all
f1 <-  plot_grid(top, bot,
rel_heights = c(1,1),
nrow = 2)
ggsave('../figs/paper/F1_overview_072_Feb8.pdf',
width = 190,
height = 140,
#height = 60,
units = c("mm"),
dpi = 400, plot = f1)
fig1_umap <- df %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'shortname', alpha = 0.7,size = 0.8 , xlab = 'UMAP1', ylab = 'UMAP2') +
scale_color_manual(values = color_key) +
theme_classic() +
theme(legend.position = "none",
legend.title = element_blank(),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1) +
guides(colour = guide_legend(override.aes = list(alpha=1)))
top <- plot_grid(tree, fig1_umap,labels = c('A', "B"),
nrow = 1, rel_widths = c(1.5,1), axis = 'lbrt', align = 'hv')
top
# assemble all
f1 <-  plot_grid(top, bot,
rel_heights = c(1,1),
nrow = 2)
ggsave('../figs/paper/F1_overview_072_Feb8.pdf',
width = 190,
height = 140,
#height = 60,
units = c("mm"),
dpi = 400, plot = f1)
fig1_umap <- df %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'shortname', alpha = 0.7,size = 0.8 ,
xlab = 'TaxUMAP1', ylab = 'TaxUMAP2') +
scale_color_manual(values = color_key) +
theme_classic() +
theme(legend.position = "none",
legend.title = element_blank(),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1) +
guides(colour = guide_legend(override.aes = list(alpha=1)))
top <- plot_grid(tree, fig1_umap,labels = c('A', "B"),
nrow = 1, rel_widths = c(1.5,1), axis = 'lbrt', align = 'hv')
top
# assemble all
f1 <-  plot_grid(top, bot,
rel_heights = c(1,1),
nrow = 2)
ggsave('../figs/paper/F1_overview_072_Feb8.pdf',
width = 190,
height = 140,
#height = 60,
units = c("mm"),
dpi = 400, plot = f1)
knitr::opts_chunk$set(echo = TRUE)
# import the tree from pdf to a ggplot kind of object
# p <- grImport2::readPicture( "../figs/paper/080_food_tree_ring.svg" )
# tree <- grImport2::pictureGrob( p )# soooo freaking slow!!!!!
p <- '../figs/paper/080_food_tree_ring.png'
tree <- ggdraw() +
draw_image(p,   scale = 1.2)
tree
top <- plot_grid(tree, fig1_umap,labels = c('A', "B"),
nrow = 1, rel_widths = c(1.5,1), axis = 'lbrt', align = 'hv')
top
# assemble all
f1 <-  plot_grid(top, bot,
rel_heights = c(1,1),
nrow = 2)
ggsave('../figs/paper/F1_overview_072_Feb8.pdf',
width = 190,
height = 140,
#height = 60,
units = c("mm"),
dpi = 400, plot = f1)
ring_itself <- tibble(
ring_level = c(1),
ring_internal_separator_thickness = 0,
ring_external_separator_thickness = 0,
ring_label_font_size = 5,
ring_separator_color = 'black'
) %>%
gather('key', 'value', ring_internal_separator_thickness:ring_separator_color) %>%
select(key, ring_level, value) %>%
write_tsv('../data/source/ring_itself.txt', col_names = F)
# import the tree from pdf to a ggplot kind of object
# p <- grImport2::readPicture( "../figs/paper/080_food_tree_ring.svg" )
# tree <- grImport2::pictureGrob( p )# soooo freaking slow!!!!!
p <- '../figs/paper/080_food_tree_ring.png'
tree <- ggdraw() +
draw_image(p,   scale = 1.2)
tree
top <- plot_grid(tree, fig1_umap,labels = c('A', "B"),
nrow = 1, rel_widths = c(1.5,1), axis = 'lbrt', align = 'hv')
top
# assemble all
f1 <-  plot_grid(top, bot,
rel_heights = c(1,1),
nrow = 2)
ggsave('../figs/paper/F1_overview_072_Feb8.pdf',
width = 190,
height = 140,
#height = 60,
units = c("mm"),
dpi = 400, plot = f1)
# import the tree from pdf to a ggplot kind of object
# p <- grImport2::readPicture( "../figs/paper/080_food_tree_ring.svg" )
# tree <- grImport2::pictureGrob( p )# soooo freaking slow!!!!!
p <- '../figs/paper/080_food_tree_ring.png'
tree <- ggdraw() +
draw_image(p,   scale = 1.2)
tree
top <- plot_grid(tree, fig1_umap,labels = c('A', "B"),
nrow = 1, rel_widths = c(1.5,1), axis = 'lbrt', align = 'hv')
top
# assemble all
f1 <-  plot_grid(top, bot,
rel_heights = c(1,1),
nrow = 2)
ggsave('../figs/paper/F1_overview_072_Feb8.pdf',
width = 190,
height = 140,
#height = 60,
units = c("mm"),
dpi = 400, plot = f1)
View(key)
install.packages("wesanderson")
library("wesanderson")
names(wes_palettes)
wes_palette("FantasticFox1")
wes_palette("GrandBudapest1")
wes_palette("GrandBudapest2")
plot(iris)
df <- mtcars
ggscatter(df, x = "wt", y = "mpg",
color = "cyl", palette = wes_palette("GrandBudapest2"),
label = "name", repel = TRUE)
ggscatter(df, x = "wt", y = "mpg",
color = "cyl", palette = wes_palette("GrandBudapest2")[1:3],
label = "name", repel = TRUE)
wes_palette("GrandBudapest2")
?wes_palette
ggscatter(df, x = "wt", y = "mpg",
color = "cyl", palette = wes_palette("GrandBudapest2", 3, 'discrete'),
label = "name", repel = TRUE)
ggscatter(df, x = "wt", y = "mpg",
color = "cyl", palette = wes_palette("GrandBudapest2", 3, type = 'discrete'),
label = "name", repel = TRUE)
ggscatter(df, x = "wt", y = "mpg",
color = "cyl", palette = wes_palette("GrandBudapest2", 3, type = c('discrete')),
label = "name", repel = TRUE)
wes_palette("GrandBudapest2", 3, type = c('discrete'))
wes_palette("GrandBudapest2", 3, type = c('discrete'))
knitr::opts_chunk$set(echo = TRUE)
library(phytools)
library(tidyverse)
library(vdbR)
connect_database('~/dbConfig.txt')
tre <- read.newick('../data/cleaned_tree/output_food_tree_datatree.newick')
leaves <- tibble(
fcode = tre$tip.label
)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
matching <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
food_code_sum <- dtb %>%
group_by(Food_code) %>%
summarise(fc_sum = sum(dehydrated_weight)) %>%
mutate(Food_code = as.character(Food_code))  %>%
filter(Food_code %in% leaves$fcode)
food_code_sum_ <- food_code_sum[order(leaves$fcode),]
all.equal(food_code_sum_$Food_code , leaves$fcode)  #I'm fine with 3 mismatches. they are very close anyway
# the newick string for the nodes
tree_df <- read_csv('../data/source/final_table_for_writing_out_to_newick.csv', col_types = cols(.default = col_character())) %>%
select(FoodID, description)
# make the circular bar plot
bars <- food_code_sum_ %>%
mutate(log10gram = log10(fc_sum + 1)) %>%
mutate(fgrp1 = str_sub(Food_code, 1, 1)) %>%
left_join(matching, by = "fgrp1") %>%
mutate(fg1_name = factor(fg1_name, levels = c('fg_egg', 'fg_oils', 'fg_legume', 'fg_fruit', 'fg_sweets', 'fg_milk','fg_meat', 'fg_veggie', 'fg_grain' ))) %>%
arrange(fg1_name)
View(bars)
bars
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
mutate(ringheight = 0.5* log10gram)
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
mutate(ringheight = 0.5* log10gram) %>%
ggbarplot(x = 'Food_code', y = 'ringheight')
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggbarplot(x = 'Food_code', y = 'log10gram')
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggbarplot(x = 'Food_code', y = 'log10gram') +
ylim(0, max(bars$log10gram))
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggbarplot(x = 'Food_code', y = 'log10gram') +
ylim(0, max(bars$log10gram))+ geom_blank()
grid(led = 2)
plot.new()
axis(2, seq(0, 1, 0.2))
grid(led = 2)
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggbarplot(x = 'Food_code', y = 'log10gram') +
ylim(0, max(bars$log10gram))
plot.new()
axis(2, seq(0, max(bars$log10gram), 1))
grid(led = 2)
plot.new()
axis(2, seq(0, max(bars$log10gram, 1)))
grid(led = 2)
seq(0, max(bars$log10gram, 1)
seq(0, max(bars$log10gram), 1)
seq(0, max(bars$log10gram), 1)
plot.new()
axis(2, seq(0, max(bars$log10gram), 1))
grid(led = 2)
axis(2, seq(0,4.2, 1))
plot.new()
axis(2, seq(0,4.2, 1))
grid(led = 2)
plot.new()
axis(2, seq(0,4, 1))
grid(led = 2)
?grid
plot.new()
axis(2, seq(0,4, 1))
?axis
plot.new()
axis(2, at = seq(0,4, 1))
at = seq(0,4, 1)
seq(0,4, 1)
plot.new()
axis(2, at = seq(0,4, 1))
bars %>%
ggbarplot(x = 'Food_code', y = 'log10gram') +
ylim(0, max(bars$log10gram))
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggplot(aes(x = Food_code, y = log10gram)) +
ylim(0, max(bars$log10gram))
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggplot(aes(x = Food_code, y = log10gram)) +
geom_blank() +
ylim(0, max(bars$log10gram))
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggplot(aes(x = Food_code, y = log10gram)) +
geom_blank() +
theme_classic() +
ylim(0, max(bars$log10gram))
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggplot(aes(x = Food_code, y = log10gram)) +
geom_blank() +
theme_classic() +
ylim(0, max(bars$log10gram)) +
theme(axis.text.x = element_blank())
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggplot(aes(x = Food_code, y = log10gram)) +
geom_blank() +
theme_classic() +
ylim(0, max(bars$log10gram)) +
labs(y = '') +
theme(axis.text.x = element_blank())
ggsave('../figs/080_ring_y_axis.pdf')
ggsave('../figs/080_ring_y_axis.pdf', height = 1)
ggsave('../figs/paper/080_ring_y_axis.pdf', height = 1)
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggplot(aes(x = Food_code, y = log10gram)) +
geom_blank() +
theme_classic() +
ylim(0, max(bars$log10gram)) +
labs(y = '') +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank())
ggsave('../figs/paper/080_ring_y_axis.pdf', height = 1.5)
# figure out the y axis for the summed ring
# I was plotting the half of the log10gram
bars %>%
ggplot(aes(x = Food_code, y = log10gram)) +
geom_blank() +
theme_classic() +
ylim(0, max(bars$log10gram)) +
labs(y = '') +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.line.x = element_blank())
ggsave('../figs/paper/080_ring_y_axis.pdf', height = 1.5)
bars %>%
ggplot(aes(x = Food_code, y = log10gram)) +
geom_blank() +
theme_classic() +
ylim(0, max(bars$log10gram)) +
labs(y = '') +
theme(axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.line.x = element_blank())
ggsave('../figs/paper/080_ring_y_axis.pdf', height = 1.2)
ggsave('../figs/paper/080_ring_y_axis.pdf', height = 1)
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
library(tidyverse)
library(cowplot)
combined <- read_csv('../data/growth/069_irep_combined_res.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('qpcr_16s_ag')
get_table_from_database('antibiotics_antibacterial_multicenter_ag')
qpcr <- qpcr_16s_ag %>%
filter(!str_detect(sample_id_unique, 'heat|ethanol')) %>%
filter(!is.na(copies_16s_per_g))
target <- combined %>%
filter(str_detect(best_species, 'Klebsiella')) %>%
arrange(desc(aveirep)) %>%
slice(1) %>%
select(mrn) %>%
pull(mrn)
# all of the stool samples we have of this patient
get_table_from_database('samples_castori_ag')
get_table_from_database('asv_annotation_blast_ag')
sam <- samples_castori_ag %>%
filter(mrn %in% target) %>%
distinct(sampleid) %>%
pull(sampleid)
samps <- samples_castori_ag %>%
filter(mrn %in% target) %>%
distinct(sampleid, mrn)
# get the  relab of these samples
cts <- get_counts_subset(sam)
ptb <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
cts_ <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
filter(genus == 'Klebsiella')  %>%
inner_join(qpcr %>%
select(sampleid = sample_id, copies_16s_per_g)) %>%
mutate(kle_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct)
growth <- combined %>%
filter(mrn == target & str_detect(best_species, 'Klebsiella'))
# fruit intake
lowerday <- min(growth$sdrt)
highday <- max(growth$sdrt)
fruit <- dtb %>%
filter(mrn == target & fdrt %in% lowerday:highday) %>%
mutate(Food_code = as.character(Food_code) ) %>%
filter(str_detect(Food_code, '^6')) %>%
group_by(fdrt) %>%
summarise(fruitsum = sum(dehydrated_weight)) %>%
full_join(tibble(
fdrt = seq(lowerday, highday, 1)
)) %>%
mutate(fruitsum = if_else(is.na(fruitsum), 0, fruitsum))
sweets <- dtb %>%
filter(mrn == target & fdrt %in% lowerday:highday) %>%
mutate(Food_code = as.character(Food_code) ) %>%
filter(str_detect(Food_code, '^9')) %>%
group_by(fdrt) %>%
summarise(sweetsum = sum(dehydrated_weight)) %>%
full_join(tibble(
fdrt = seq(lowerday, highday, 1)
)) %>%
mutate(sweetsum = if_else(is.na(sweetsum), 0, sweetsum))
# abx
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(patient_id == as.character(target) ) %>%
rename(mrn = patient_id) %>%
mutate(mrn = as.numeric(mrn)) %>%
left_join(ptb %>%
select(mrn, hct)) %>%
mutate(startdrt = start - hct,
stopdrt = stop - hct) %>%
# only select the days relevant
filter(startdrt %in% -2:4) %>%
mutate(drugfull = str_glue('{drug_name_clean} ({route_simple})')) %>%
arrange(startdrt, stopdrt) %>%
mutate(yval = seq(1, nrow(.)))
xmin <- lowerday - 1
xmax <- highday + 1
# plotting
copies <- cts_ %>%
ggplot(aes(x = sdrt, y = kle_copy )) +
geom_point() +
geom_line(aes(x = sdrt, y = kle_copy), linetype = 'solid', size = 0.5, col = 'black') +
xlim(xmin, xmax) +
labs(x = 'Day relative to transplant',
y = 'Klebsiella copy\nnumbers',
title = 'Copy numbers') +
theme_classic() +
theme(aspect.ratio=1,
plot.margin = margin(l=-0.8,unit="cm"),
panel.grid.major.x = element_line(colour = "grey85"))
fruit_time <- fruit %>%
ggplot(aes(x = fdrt, y = fruitsum )) +
geom_point() +
geom_line(aes(x = fdrt, y = fruitsum), linetype = 'solid', size = 0.5, col = 'black') +
xlim(xmin, xmax) +
labs(x = '',
y = 'Fruit intake',
title = 'Fruit intake') +
theme_classic() +
#ylim(lowest_daily_fruit_intake, highest_daily_fruit_intake)+
#scale_y_sqrt() +
#geom_hline(yintercept = f_q25, linetype = 'dashed') +
#geom_hline(yintercept = f_q50, linetype = 'dashed') +
#geom_hline(yintercept = f_q75, linetype = 'dashed') +
theme(aspect.ratio=1,
plot.margin = margin(l=-0.8,unit="cm"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid.major.x = element_line(colour = "grey85"))
sweets_time <- sweets %>%
ggplot(aes(x = fdrt, y = sweetsum )) +
geom_point() +
geom_line(aes(x = fdrt, y = sweetsum), linetype = 'solid', size = 0.5, col = 'black') +
xlim(xmin, xmax) +
labs(x = '',
y = 'Sweets intake',
title = 'Sweets intake') +
theme_classic() +
# ylim(lowest_daily_sweet_intake, highest_daily_sweet_intake)+
#scale_y_sqrt() +
#geom_hline(yintercept = s_q25, linetype = 'dashed') +
#geom_hline(yintercept = s_q50, linetype = 'dashed') +
#geom_hline(yintercept = s_q75, linetype = 'dashed') +
theme(aspect.ratio=1,
plot.margin = margin(l=-0.8,unit="cm"),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid.major.x = element_line(colour = "grey85"))
abx_time <- ggplot(abx, aes(x = startdrt, y = yval, xend = stopdrt, yend = yval, label = drugfull )) +
geom_segment(
size = 0.5, lineend = 'round',
arrow = arrow(length = unit(0.05, "inches"))
) +
geom_text(hjust = 'outside', nudge_y = -0.1, nudge_x = 5, size = 2) +
labs(x = '',
y = '',
title = 'Antibiotics') +
theme_classic() +
theme(aspect.ratio=1,
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank(),
panel.grid.major.x = element_line(color = "grey85"))
irep = growth %>%
ggplot(aes(x = sdrt, y = aveirep )) +
geom_point() +
labs(title = str_glue('{}')) +
#geom_hline(yintercept = irep_q25, linetype = 'dashed') +
#geom_hline(yintercept = irep_q50, linetype = 'dashed') +
#geom_hline(yintercept = irep_q75, linetype = 'dashed') +
xlim(xmin, xmax) +
#ylim(1, irep_highest) +
labs(x = '',
y = 'Average replication rate',
title = 'Klebsiella')+
theme_classic()+
theme(aspect.ratio=1,
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid.major.x = element_line(color = "grey85"))
pkle_ver <- plot_grid(abx_time,
sweets_time,
fruit_time,
irep,
copies,
byrow = T,
ncol = 1, axis = 'ltbr', align = 'hv')
pkle_ver
ggsave('../figs/paper/095_irep_kle_vertical.pdf', width = 130,
height = 250, units = 'mm', dpi = 400, plot = pkle_ver)
View(abx)
