prior_coeffs$b_tpnF$prior_coeff * values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * values %>% pluck(val) %>% pluck('Intercept')
})
# create a df with max and min and ave in 9 groups
# create a df with the corresponding value that the samples prior coeff can multiply
max_ <- ave_fg %>%
rename(mean_ = value) %>%
mutate(max_fg_egg = if_else(key == 'fg_egg', max_fg$fg_egg, mean_),
max_fg_fruit = if_else(key == 'fg_fruit', max_fg$fg_fruit, mean_),
max_fg_grain = if_else(key == 'fg_grain', max_fg$fg_grain, mean_),
max_fg_legume = if_else(key == 'fg_legume', max_fg$fg_legume, mean_),
max_fg_meat = if_else(key == 'fg_meat', max_fg$fg_meat, mean_),
max_fg_milk = if_else(key == 'fg_milk', max_fg$fg_milk, mean_),
max_fg_oils = if_else(key == 'fg_oils', max_fg$fg_oils, mean_),
max_fg_sweets = if_else(key == 'fg_sweets', max_fg$fg_sweets, mean_),
max_fg_veggie = if_else(key == 'fg_veggie', max_fg$fg_veggie, mean_)) %>%
select(-mean_) %>%
add_row(key = 'Intercept', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1, .before = 1) %>%
add_row(key = 'b_inten_non', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
add_row(key = 'b_empiT', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
add_row(key = 'b_tpnF', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
add_row(key = 'b_enF', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
mutate(key = if_else(str_detect(key, '^fg'), str_glue('b_{key}'), key))  %>%
arrange(key)
prior_coeffs <- samples_prior %>%
select(Intercept, b_inten_non, b_empiT, b_tpnF, b_enF, starts_with('b_fg')) %>%
gather('term','prior_coeff') %>%
split(.$term)
values <- max_ %>%
select(-key) %>%
as.list()
values <- values %>%
map(~ set_names(x = ., max_$key))
# calculate the resulted prior log div
vals <- names(values)
max_each_fg <- vals  %>%
set_names(vals) %>%
map(function(val) {
res = prior_coeffs$b_empiT$prior_coeff * values %>% pluck(val) %>% pluck('b_empiT') +
prior_coeffs$b_enF$prior_coeff * values %>% pluck(val) %>% pluck('b_enF') +
prior_coeffs$b_fg_egg$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
prior_coeffs$b_fg_fruit$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
prior_coeffs$b_fg_grain$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
prior_coeffs$b_fg_legume$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
prior_coeffs$b_fg_meat$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
prior_coeffs$b_fg_milk$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
prior_coeffs$b_fg_oils$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
prior_coeffs$b_fg_sweets$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
prior_coeffs$b_fg_veggie$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
prior_coeffs$b_inten_non$prior_coeff * values %>% pluck(val) %>% pluck('b_inten_non') +
prior_coeffs$b_tpnF$prior_coeff * values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * values %>% pluck(val) %>% pluck('Intercept')
})
# create a df with max and min and ave in 9 groups
# create a df with the corresponding value that the samples prior coeff can multiply
max_ <- ave_fg %>%
rename(mean_ = value) %>%
mutate(max_fg_egg = if_else(key == 'fg_egg', max_fg$fg_egg, mean_),
max_fg_fruit = if_else(key == 'fg_fruit', max_fg$fg_fruit, mean_),
max_fg_grain = if_else(key == 'fg_grain', max_fg$fg_grain, mean_),
max_fg_legume = if_else(key == 'fg_legume', max_fg$fg_legume, mean_),
max_fg_meat = if_else(key == 'fg_meat', max_fg$fg_meat, mean_),
max_fg_milk = if_else(key == 'fg_milk', max_fg$fg_milk, mean_),
max_fg_oils = if_else(key == 'fg_oils', max_fg$fg_oils, mean_),
max_fg_sweets = if_else(key == 'fg_sweets', max_fg$fg_sweets, mean_),
max_fg_veggie = if_else(key == 'fg_veggie', max_fg$fg_veggie, mean_)) %>%
select(-mean_) %>%
add_row(key = 'Intercept', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1, .before = 1) %>%
add_row(key = 'b_inten_non', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
add_row(key = 'b_empiT', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
add_row(key = 'b_tpnF', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
add_row(key = 'b_enF', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
mutate(key = if_else(str_detect(key, '^fg'), str_glue('b_{key}'), key))  %>%
arrange(key)
prior_coeffs <- samples_prior %>%
select(Intercept, b_inten_non, b_empiT, b_tpnF, b_enF, starts_with('b_fg')) %>%
gather('term','prior_coeff') %>%
split(.$term)
values <- max_ %>%
select(-key) %>%
as.list()
values <- values %>%
map(~ set_names(x = ., max_$key))
# calculate the resulted prior log div
vals <- names(values)
max_each_fg <- vals  %>%
set_names(vals) %>%
map(function(val) {
res = prior_coeffs$b_empiT$prior_coeff * values %>% pluck(val) %>% pluck('b_empiT') +
prior_coeffs$b_enF$prior_coeff * values %>% pluck(val) %>% pluck('b_enF') +
prior_coeffs$b_fg_egg$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
prior_coeffs$b_fg_fruit$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
prior_coeffs$b_fg_grain$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
prior_coeffs$b_fg_legume$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
prior_coeffs$b_fg_meat$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
prior_coeffs$b_fg_milk$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
prior_coeffs$b_fg_oils$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
prior_coeffs$b_fg_sweets$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
prior_coeffs$b_fg_veggie$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
prior_coeffs$b_inten_non$prior_coeff * values %>% pluck(val) %>% pluck('b_inten_non') +
prior_coeffs$b_tpnF$prior_coeff * values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * values %>% pluck(val) %>% pluck('Intercept')
})
View(max_each_fg)
max_each_fg <- vals  %>%
set_names(vals) %>%
map(function(val) {
res = prior_coeffs$b_empiT$prior_coeff * values %>% pluck(val) %>% pluck('b_empiT') +
prior_coeffs$b_enF$prior_coeff * values %>% pluck(val) %>% pluck('b_enF') +
prior_coeffs$b_fg_egg$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
prior_coeffs$b_fg_fruit$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
prior_coeffs$b_fg_grain$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
prior_coeffs$b_fg_legume$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
prior_coeffs$b_fg_meat$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
prior_coeffs$b_fg_milk$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
prior_coeffs$b_fg_oils$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
prior_coeffs$b_fg_sweets$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
prior_coeffs$b_fg_veggie$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
prior_coeffs$b_inten_non$prior_coeff * values %>% pluck(val) %>% pluck('b_inten_non') +
prior_coeffs$b_tpnF$prior_coeff * values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * values %>% pluck(val) %>% pluck('Intercept')
}) %>%
bind_rows(.id = 'grp')
View(max_each_fg)
max_each_fg <- vals  %>%
set_names(vals) %>%
map(function(val) {
res = prior_coeffs$b_empiT$prior_coeff * values %>% pluck(val) %>% pluck('b_empiT') +
prior_coeffs$b_enF$prior_coeff * values %>% pluck(val) %>% pluck('b_enF') +
prior_coeffs$b_fg_egg$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
prior_coeffs$b_fg_fruit$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
prior_coeffs$b_fg_grain$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
prior_coeffs$b_fg_legume$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
prior_coeffs$b_fg_meat$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
prior_coeffs$b_fg_milk$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
prior_coeffs$b_fg_oils$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
prior_coeffs$b_fg_sweets$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
prior_coeffs$b_fg_veggie$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
prior_coeffs$b_inten_non$prior_coeff * values %>% pluck(val) %>% pluck('b_inten_non') +
prior_coeffs$b_tpnF$prior_coeff * values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * values %>% pluck(val) %>% pluck('Intercept')
}) %>%
bind_rows(.id = 'grp')
max_each_fg <- vals  %>%
set_names(vals) %>%
map(function(val) {
res = prior_coeffs$b_empiT$prior_coeff * values %>% pluck(val) %>% pluck('b_empiT') +
prior_coeffs$b_enF$prior_coeff * values %>% pluck(val) %>% pluck('b_enF') +
prior_coeffs$b_fg_egg$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
prior_coeffs$b_fg_fruit$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
prior_coeffs$b_fg_grain$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
prior_coeffs$b_fg_legume$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
prior_coeffs$b_fg_meat$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
prior_coeffs$b_fg_milk$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
prior_coeffs$b_fg_oils$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
prior_coeffs$b_fg_sweets$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
prior_coeffs$b_fg_veggie$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
prior_coeffs$b_inten_non$prior_coeff * values %>% pluck(val) %>% pluck('b_inten_non') +
prior_coeffs$b_tpnF$prior_coeff * values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * values %>% pluck(val) %>% pluck('Intercept')
}) %>%
bind_rows(.id = 'grp')
max_each_fg <- vals  %>%
set_names(vals) %>%
map(function(val) {
res = prior_coeffs$b_empiT$prior_coeff * values %>% pluck(val) %>% pluck('b_empiT') +
prior_coeffs$b_enF$prior_coeff * values %>% pluck(val) %>% pluck('b_enF') +
prior_coeffs$b_fg_egg$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
prior_coeffs$b_fg_fruit$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
prior_coeffs$b_fg_grain$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
prior_coeffs$b_fg_legume$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
prior_coeffs$b_fg_meat$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
prior_coeffs$b_fg_milk$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
prior_coeffs$b_fg_oils$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
prior_coeffs$b_fg_sweets$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
prior_coeffs$b_fg_veggie$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
prior_coeffs$b_inten_non$prior_coeff * values %>% pluck(val) %>% pluck('b_inten_non') +
prior_coeffs$b_tpnF$prior_coeff * values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * values %>% pluck(val) %>% pluck('Intercept')
}) %>%
bind_rows(.id = 'grp')
vals  %>%
set_names(vals) %>%
map(function(val) {
res = prior_coeffs$b_empiT$prior_coeff * values %>% pluck(val) %>% pluck('b_empiT') +
prior_coeffs$b_enF$prior_coeff * values %>% pluck(val) %>% pluck('b_enF') +
prior_coeffs$b_fg_egg$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
prior_coeffs$b_fg_fruit$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
prior_coeffs$b_fg_grain$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
prior_coeffs$b_fg_legume$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
prior_coeffs$b_fg_meat$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
prior_coeffs$b_fg_milk$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
prior_coeffs$b_fg_oils$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
prior_coeffs$b_fg_sweets$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
prior_coeffs$b_fg_veggie$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
prior_coeffs$b_inten_non$prior_coeff * values %>% pluck(val) %>% pluck('b_inten_non') +
prior_coeffs$b_tpnF$prior_coeff * values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * values %>% pluck(val) %>% pluck('Intercept')
})
max_each_fg <- vals  %>%
set_names(vals) %>%
map(function(val) {
res = prior_coeffs$b_empiT$prior_coeff * values %>% pluck(val) %>% pluck('b_empiT') +
prior_coeffs$b_enF$prior_coeff * values %>% pluck(val) %>% pluck('b_enF') +
prior_coeffs$b_fg_egg$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_egg') +
prior_coeffs$b_fg_fruit$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_fruit') +
prior_coeffs$b_fg_grain$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_grain') +
prior_coeffs$b_fg_legume$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_legume') +
prior_coeffs$b_fg_meat$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_meat') +
prior_coeffs$b_fg_milk$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_milk') +
prior_coeffs$b_fg_oils$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_oils') +
prior_coeffs$b_fg_sweets$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_sweets') +
prior_coeffs$b_fg_veggie$prior_coeff * values %>% pluck(val) %>% pluck('b_fg_veggie') +
prior_coeffs$b_inten_non$prior_coeff * values %>% pluck(val) %>% pluck('b_inten_non') +
prior_coeffs$b_tpnF$prior_coeff * values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * values %>% pluck(val) %>% pluck('Intercept')
}) %>%
bind_rows(.id = 'grp') %>%
gather('grp', 'prior_res')
View(min_fg)
min_fg$fg_veggie
min_fg$fg_veggie
min_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(min))
min_fg$fg_veggie
ave_fg
# when each fg has a min intake
min_ <- ave_fg %>%
rename(mean_ = value) %>%
mutate(min_fg_egg = if_else(key == 'fg_egg', min_fg$fg_egg, mean_),
min_fg_fruit = if_else(key == 'fg_fruit', min_fg$fg_fruit, mean_),
min_fg_grain = if_else(key == 'fg_grain', min_fg$fg_grain, mean_),
min_fg_legume = if_else(key == 'fg_legume', min_fg$fg_legume, mean_),
min_fg_meat = if_else(key == 'fg_meat', min_fg$fg_meat, mean_),
min_fg_milk = if_else(key == 'fg_milk', min_fg$fg_milk, mean_),
min_fg_oils = if_else(key == 'fg_oils', min_fg$fg_oils, mean_),
min_fg_sweets = if_else(key == 'fg_sweets', min_fg$fg_sweets, mean_),
min_fg_veggie = if_else(key == 'fg_veggie', min_fg$fg_veggie, mean_)) %>%
select(-mean_) %>%
add_row(key = 'Intercept', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1, .before = 1) %>%
add_row(key = 'b_inten_non', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
add_row(key = 'b_empiT', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
add_row(key = 'b_tpnF', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
add_row(key = 'b_enF', max_fg_egg = 1, max_fg_fruit = 1, max_fg_grain = 1, max_fg_legume = 1, max_fg_meat = 1, max_fg_milk = 1, max_fg_oils = 1, max_fg_sweets = 1, max_fg_veggie = 1) %>%
mutate(key = if_else(str_detect(key, '^fg'), str_glue('b_{key}'), key))  %>%
arrange(key)
# when each fg has a min intake
min_ <- ave_fg %>%
rename(mean_ = value) %>%
mutate(min_fg_egg = if_else(key == 'fg_egg', min_fg$fg_egg, mean_),
min_fg_fruit = if_else(key == 'fg_fruit', min_fg$fg_fruit, mean_),
min_fg_grain = if_else(key == 'fg_grain', min_fg$fg_grain, mean_),
min_fg_legume = if_else(key == 'fg_legume', min_fg$fg_legume, mean_),
min_fg_meat = if_else(key == 'fg_meat', min_fg$fg_meat, mean_),
min_fg_milk = if_else(key == 'fg_milk', min_fg$fg_milk, mean_),
min_fg_oils = if_else(key == 'fg_oils', min_fg$fg_oils, mean_),
min_fg_sweets = if_else(key == 'fg_sweets', min_fg$fg_sweets, mean_),
min_fg_veggie = if_else(key == 'fg_veggie', min_fg$fg_veggie, mean_)) %>%
select(-mean_) %>%
add_row(key = 'Intercept', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1, .before = 1) %>%
add_row(key = 'b_inten_non', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
add_row(key = 'b_empiT', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
add_row(key = 'b_tpnF', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
add_row(key = 'b_enF', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
mutate(key = if_else(str_detect(key, '^fg'), str_glue('b_{key}'), key))  %>%
arrange(key)
View(min_)
min_values <- min_ %>%
select(-key) %>%
as.list()
min_values <- min_values %>%
map(~ set_names(x = ., min_$key))
# calculate the resulted prior log div
vals <- names(min_values)
# when each fg has a min intake
min_ <- ave_fg %>%
rename(mean_ = value) %>%
mutate(min_fg_egg = if_else(key == 'fg_egg', min_fg$fg_egg, mean_),
min_fg_fruit = if_else(key == 'fg_fruit', min_fg$fg_fruit, mean_),
min_fg_grain = if_else(key == 'fg_grain', min_fg$fg_grain, mean_),
min_fg_legume = if_else(key == 'fg_legume', min_fg$fg_legume, mean_),
min_fg_meat = if_else(key == 'fg_meat', min_fg$fg_meat, mean_),
min_fg_milk = if_else(key == 'fg_milk', min_fg$fg_milk, mean_),
min_fg_oils = if_else(key == 'fg_oils', min_fg$fg_oils, mean_),
min_fg_sweets = if_else(key == 'fg_sweets', min_fg$fg_sweets, mean_),
min_fg_veggie = if_else(key == 'fg_veggie', min_fg$fg_veggie, mean_)) %>%
select(-mean_) %>%
add_row(key = 'Intercept', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1, .before = 1) %>%
add_row(key = 'b_inten_non', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
add_row(key = 'b_empiT', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
add_row(key = 'b_tpnF', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
add_row(key = 'b_enF', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
mutate(key = if_else(str_detect(key, '^fg'), str_glue('b_{key}'), key))  %>%
arrange(key)
min_values <- min_ %>%
select(-key) %>%
as.list()
min_values <- min_values %>%
map(~ set_names(x = ., min_$key))
# calculate the resulted prior log div
vals <- names(min_values)
min_each_fg <- vals  %>%
set_names(vals) %>%
map(function(val) {
res = prior_coeffs$b_empiT$prior_coeff * min_values %>% pluck(val) %>% pluck('b_empiT') +
prior_coeffs$b_enF$prior_coeff * min_values %>% pluck(val) %>% pluck('b_enF') +
prior_coeffs$b_fg_egg$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_egg') +
prior_coeffs$b_fg_fruit$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_fruit') +
prior_coeffs$b_fg_grain$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_grain') +
prior_coeffs$b_fg_legume$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_legume') +
prior_coeffs$b_fg_meat$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_meat') +
prior_coeffs$b_fg_milk$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_milk') +
prior_coeffs$b_fg_oils$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_oils') +
prior_coeffs$b_fg_sweets$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_sweets') +
prior_coeffs$b_fg_veggie$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_veggie') +
prior_coeffs$b_inten_non$prior_coeff * min_values %>% pluck(val) %>% pluck('b_inten_non') +
prior_coeffs$b_tpnF$prior_coeff * min_values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * min_values %>% pluck(val) %>% pluck('Intercept')
}) %>%
bind_rows(.id = 'grp') %>%
gather('grp', 'prior_res')
View(min_each_fg)
# when each fg has a min intake
min_ <- ave_fg %>%
rename(mean_ = value) %>%
mutate(min_fg_egg = if_else(key == 'fg_egg', min_fg$fg_egg, mean_),
min_fg_fruit = if_else(key == 'fg_fruit', min_fg$fg_fruit, mean_),
min_fg_grain = if_else(key == 'fg_grain', min_fg$fg_grain, mean_),
min_fg_legume = if_else(key == 'fg_legume', min_fg$fg_legume, mean_),
min_fg_meat = if_else(key == 'fg_meat', min_fg$fg_meat, mean_),
min_fg_milk = if_else(key == 'fg_milk', min_fg$fg_milk, mean_),
min_fg_oils = if_else(key == 'fg_oils', min_fg$fg_oils, mean_),
min_fg_sweets = if_else(key == 'fg_sweets', min_fg$fg_sweets, mean_),
min_fg_veggie = if_else(key == 'fg_veggie', min_fg$fg_veggie, mean_)) %>%
select(-mean_) %>%
add_row(key = 'Intercept', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1, .before = 1) %>%
add_row(key = 'b_inten_non', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
add_row(key = 'b_empiT', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
add_row(key = 'b_tpnF', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
add_row(key = 'b_enF', min_fg_egg = 1, min_fg_fruit = 1, min_fg_grain = 1, min_fg_legume = 1, min_fg_meat = 1, min_fg_milk = 1, min_fg_oils = 1, min_fg_sweets = 1, min_fg_veggie = 1) %>%
mutate(key = if_else(str_detect(key, '^fg'), str_glue('b_{key}'), key))  %>%
arrange(key)
min_values <- min_ %>%
select(-key) %>%
as.list()
min_values <- min_values %>%
map(~ set_names(x = ., min_$key))
# calculate the resulted prior log div
vals <- names(min_values)
min_each_fg <- vals  %>%
set_names(vals) %>%
map(function(val) {
res = prior_coeffs$b_empiT$prior_coeff * min_values %>% pluck(val) %>% pluck('b_empiT') +
prior_coeffs$b_enF$prior_coeff * min_values %>% pluck(val) %>% pluck('b_enF') +
prior_coeffs$b_fg_egg$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_egg') +
prior_coeffs$b_fg_fruit$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_fruit') +
prior_coeffs$b_fg_grain$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_grain') +
prior_coeffs$b_fg_legume$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_legume') +
prior_coeffs$b_fg_meat$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_meat') +
prior_coeffs$b_fg_milk$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_milk') +
prior_coeffs$b_fg_oils$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_oils') +
prior_coeffs$b_fg_sweets$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_sweets') +
prior_coeffs$b_fg_veggie$prior_coeff * min_values %>% pluck(val) %>% pluck('b_fg_veggie') +
prior_coeffs$b_inten_non$prior_coeff * min_values %>% pluck(val) %>% pluck('b_inten_non') +
prior_coeffs$b_tpnF$prior_coeff * min_values %>% pluck(val) %>% pluck('b_tpnF') +
prior_coeffs$Intercept$prior_coeff * min_values %>% pluck(val) %>% pluck('Intercept')
}) %>%
bind_rows(.id = 'grp') %>%
gather('grp', 'prior_res')
samples_prior
# combinne the max and min and ave together and plot
ave_each_fg <- samples_prior %>%
mutate(mean_fg = Intercept +
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_inten_non +
b_empiT +
b_tpnF +
b_enF)
ave_fg
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
View(mean_fg)
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
View(mean_fg)
# combinne the max and min and ave together and plot
ave_each_fg <- samples_prior %>%
mutate(mean_fg = Intercept +
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_inten_non +
b_empiT +
b_tpnF +
b_enF)
View(ave_each_fg)
samples_prior %>%
mutate(mean_fg = Intercept +
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_inten_non +
b_empiT +
b_tpnF +
b_enF)
samples_prior %>%
mutate(mean_fg = Intercept +
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_inten_non +
b_empiT +
b_tpnF +
b_enF) %>%
select(mean_fg)
samples_prior %>%
mutate(mean_fg = Intercept +
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_inten_non +
b_empiT +
b_tpnF +
b_enF) %>%
select(mean_fg) %>%
mutate(grp = 'ave_each')
# combinne the max and min and ave together and plot
ave_each_fg <- samples_prior %>%
mutate(mean_fg = Intercept +
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_inten_non +
b_empiT +
b_tpnF +
b_enF) %>%
select(mean_fg) %>%
mutate(grp = 'ave_each') %>%
rename(prior_res = mean_fg)
# combinne the max and min and ave together and plot
ave_each_fg <- samples_prior %>%
mutate(mean_fg = Intercept +
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_inten_non +
b_empiT +
b_tpnF +
b_enF) %>%
select(mean_fg) %>%
mutate(grp = 'ave_each') %>%
rename(prior_res = mean_fg) %>%
select(grp, prior_res)
prior_all <- bind_rows(ave_each_fg, max_each_fg, min_each_fg)
View(prior_all)
prior_all %>% write_csv('../figs/paper/data/prior_ave_max_min_res_68.csv')
