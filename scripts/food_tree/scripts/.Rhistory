fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100)
# what priors I can set
model_formular <- log(simpson_reciprocal) ~ 0 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
intensity +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "intensityreduced"),
prior(normal(2, 0.1), class = 'b', coef = "intensityablative"),
prior(normal(2, 0.1), class = 'b', coef = "intensitynonablative"))
model_div <- brm( model_formular,
data = meta,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 123, sample_prior = T)
# save it for future use
post_res <- suppressWarnings(posterior_samples(model_div))
post_res %>%  write_csv('../data/138_div_model_fg_post_batch2.csv')
post_samples  <- read_csv('../data/138_div_model_fg_post_batch2.csv')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
View(post_coeff)
cross0 <- post_coeff %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
div_post <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
div_post
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
# modify it to be the look that we have discussed
diversity_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
diversity_factor
View(meta)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(lubridate)
ptb <- read_csv('../data/129_new_76_full_patient_info.csv')
stb_ <- read_csv('../data/130_batch2_pt_stool_samples.csv')
dtb <- read_rds('../data/136_updated_dtb2.rds')
stb <- stb_ %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct) %>%
mutate(sdrt = as.numeric(sdrt))
# remove all the stool samples collected >= 2 days after the latest diet sample for every patient
# get the latest diet sample for every patient
dtb_latest_dsample <- dtb %>%
arrange(mrn, desc(fdrt)) %>%
distinct(mrn, .keep_all = T) %>%
select(mrn, fdrt)
# join the lastest dsample day to the stb
stb_dsample_diff_tobe_removed <- stb %>%
left_join(dtb_latest_dsample, by = 'mrn')  %>%
mutate(diff = sdrt - fdrt) %>%
filter(diff >= 2) %>%
pull(sampleid)
stb1 <- stb %>%
filter(!sampleid %in% stb_dsample_diff_tobe_removed)
# also remove the stool samples that are earlier than the earliest diet sample for each patient
earliest_dsample <- dtb %>%
arrange(mrn, fdrt) %>%
distinct(mrn, .keep_all = T) %>%
select(mrn, fdrt)
early_2b_rm <- stb1 %>%
left_join(earliest_dsample, by = 'mrn')  %>%
mutate(diff = sdrt - fdrt) %>%
filter(diff <= 0) %>%
pull(sampleid)
stb2 <- stb1 %>%
filter(!sampleid %in% early_2b_rm) %>%
select(-hct, -datecollection)
# now find the samples that  have a satisfying total count
stb3 <- stb2 %>%
filter(count_total >= 400)
stb4 <- stb3 %>%
arrange(mrn, sdrt, sampleid) %>%
distinct(mrn, sdrt, .keep_all = T)
# list the previous 2 days drt for every stool sample
qual_stool_df <- stb4 %>%
mutate(p1d = sdrt-1,
p2d = sdrt-2) %>%
select(mrn, p1d, p2d)
no_real_diet_d_to_be_rm_stool_s <- function(mrn_, p1d_, p2d_){
df = dtb %>%
filter(mrn == mrn_) %>%
filter(fdrt == p1d_ | fdrt == p2d_  ) %>%
nrow()
return(df)
}
qual_stool2 <- pmap(qual_stool_df, function(mrn, p1d, p2d){
no_real_diet_d_to_be_rm_stool_s(mrn, p1d, p2d)
}) %>%
set_names(stb4 %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid') %>%
gather(key = 'sampleid', value = 'num_d_records') %>%
arrange(num_d_records)
no_diet_to_be_removed_stool_samples <- qual_stool2 %>%
filter(num_d_records == 0) %>%
pull(sampleid)
stb5 <- stb4 %>%
filter(!sampleid %in% no_diet_to_be_removed_stool_samples)
missingdays <- readxl::read_excel('../data/MissingDataCheck_DietStudy_New80Patients.xlsx') %>%
filter(diet_data_status == 'missing') %>%
mutate(mrn = as.numeric(mrn),
date = ymd(date)) %>%
left_join(ptb %>% select(mrn, hct))  %>%
mutate(missing_int = interval(date, date))
# the previous two days interval for every stool sample
p2d_df <- stb5 %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int) %>%
inner_join(missingdays, by = "mrn") %>%
mutate(had_missing = int_overlaps(p2d_int, missing_int)) %>%
filter(had_missing == 'TRUE')
library(vdbR)
connect_database()
get_table_from_database('samples_castori_ag')
missingdays <- readxl::read_excel('../data/MissingDataCheck_DietStudy_New80Patients.xlsx') %>%
filter(diet_data_status == 'missing') %>%
mutate(mrn = as.numeric(mrn),
date = ymd(date)) %>%
left_join(ptb %>% select(mrn, hct))  %>%
mutate(missing_int = interval(date, date))
# the previous two days interval for every stool sample
p2d_df <- stb5 %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int) %>%
inner_join(missingdays, by = "mrn") %>%
mutate(had_missing = int_overlaps(p2d_int, missing_int)) %>%
filter(had_missing == 'TRUE')
have_missing_diet_need_to_be_rm <- p2d_df %>%
pull(sampleid)
# final qualified stool samples
stb6 <- stb5 %>%
filter(!sampleid %in% have_missing_diet_need_to_be_rm)
# censor_abx <- c('active_atb_vanco_po',	'active_atb_imipenem',	'active_atb_meropenem',	'active_atb_ertapenem',		'active_atb_cefepime',		'active_atb_linezolid',	'active_atb_metro',	'active_atb_piptazo')
picked <-  c('vancomycin', 'imipenem_cilastatin','meropenem','ertapenem', 'cefepime', 'linezolid','metronidazole','piperacillin_tazobactam')
med <- read_rds('../data/batch2_medication_exposures.rds') %>%
select(MRN:stop_date, drug_name, route) %>%
mutate(drug_name_clean = str_replace_all(drug_name, '-', '_')) %>%
mutate(drug_name_clean = str_to_lower(drug_name_clean)) %>%
mutate(drug_name_clean = case_when(
drug_name_clean == 'levofloxacin (levaquin)' ~ 'levofloxacin',
drug_name_clean == 'vancomycin invest' ~ 'vancomycin',
TRUE ~ drug_name_clean
)) %>%
mutate(mrn = as.numeric(MRN))
now <- med %>% count(drug_name_clean) %>% arrange(desc(n))
allroute <- med %>% count(route)
has <- med %>%
filter(drug_name_clean %in% picked) %>%
distinct(drug_name_clean)
# find all the ones that may have extra part of the strings
allpickes <- tibble(picked = picked) %>%
summarise(text = str_c(picked, collapse = "|"))
allhas <- now %>%
filter(str_detect(drug_name_clean, allpickes$text))
# no "metronidazole topical"
# no "ciprofloxacin otic" it's for ear
# no "ciprofloxacin_hydrocortisone otic" also for ear
# empirical med exposure
empirical_med_oral <- med %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'PO') %>%
filter(mrn %in% ptb$mrn)
empirical_med_oral %>% write_csv('../data/137_batch2_empircal_oral.csv')
# find if exposure to oral empirical abx in the two days prior to a stool sample collection
p2d_df <- stb6 %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
all_empirical <- empirical_med_oral %>%
distinct(drug_name_clean) %>% pull(drug_name_clean)
find_exposure <- all_empirical %>%
set_names(all_empirical) %>%
map_dfr(function(d){
each_drug = empirical_med_oral %>%
filter(drug_name_clean == d) %>%
select(mrn, drug_name_clean, start_date, stop_date) %>%
mutate(drug_int =  interval(start_date, stop_date)) %>%
rename(abx_start = start_date,
abx_stop = stop_date)
had_drug_res = p2d_df %>%
inner_join(each_drug, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
return(had_drug_res)
}) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_start_day = abx_start - hct,
abx_stop_day = abx_stop - hct)
# the above samples are flagged for exposed to empirical
stb7 <- stb6 %>%
mutate(empirical = if_else(sampleid %in% find_exposure$sampleid, T, F))
stb7 %>% count(empirical)
# only few patients had TPN
# no patients had EN
support <- read_csv('../data/NutritionSupport_DietPatients.csv') %>%
filter(MRN %in% ptb$mrn) %>%
mutate(date = mdy(`Date Nutrition Support`)) %>%
filter(`Nutrition Support` == 'TPN') %>%
select(mrn = MRN,
date,
nutrition_support = `Nutrition Support`) %>%
mutate(TPN_int = interval(date, date))
# to find if any of those stool samples had TPN in the prior two days
has_tpn <- p2d_df %>%
inner_join(support, by = "mrn") %>%
mutate(had_tpn = int_overlaps(p2d_int, TPN_int)) %>%
filter(had_tpn == 'TRUE')
stb8 <- stb7 %>%
mutate(TPN = if_else(sampleid %in% has_tpn$sampleid, T, F)) %>%
mutate(EN = F)
# join with the intensity level of the patients
stb9 <- stb8 %>%
left_join(ptb %>% select(mrn, intensity), by = "mrn") %>%
mutate(intensity = case_when(
intensity == 'Ablative' ~ 'ablative',
intensity == 'Reduced Intensity' ~ 'reduced',
intensity == 'Nonablative' ~ 'nonablative'
))
stb9 %>% write_rds('../data/137_stb.rds')
View(stb9)
View(empirical_med_oral)
View(empirical_med_oral)
p2d_df <- stb6 %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
View(p2d_df)
exposed_empirical <- empirical_med_oral %>%
inner_join(p2d_df)
exposed_empirical <- empirical_med_oral %>%
inner_join(p2d_df, by = "mrn")
View(exposed_empirical)
exposed_empirical
empirical_med_oral %>%
inner_join(p2d_df, by = "mrn")
empirical_med_oral %>%
mutate(drug_int =  interval(start_date, stop_date)) %>%
inner_join(p2d_df, by = "mrn")
empirical_med_oral %>%
mutate(drug_int =  interval(start_date, stop_date)) %>%
inner_join(p2d_df, by = "mrn")
exposed_empirical <- empirical_med_oral %>%
mutate(drug_int =  interval(start_date, stop_date)) %>%
inner_join(p2d_df, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
View(exposed_empirical)
exposed_empirical
exposed_empirical %>% distinct(sampleid)
stb7 %>% count(empirical)
knitr::opts_chunk$set(echo = TRUE)
# start the cleaning of the medication data from the raw source
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds')
View(med1)
library(tidyverse)
#abx <- read_rds('/Volumes/vandenbrinklab/Nutrition and microbiota/medication_exposures/meds_nutrition_batch1_2022-11-29.rds')
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
ptb <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
# start the cleaning of the medication data from the raw source
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds')
View(med1)
med1
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds')
med1
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds') %>%
select(MRN, start_date, stop_date, drug_name, route)
View(med1)
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds') %>%
select(MRN, start_date, stop_date, drug_name, route) %>%
mutate(drug_name_clean = str_replace_all(drug_name, '-', '_')) %>%
mutate(drug_name_clean = str_to_lower(drug_name_clean))
# start the cleaning of the medication data from the raw source
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds') %>%
select(MRN, start_date, stop_date, drug_name, route) %>%
mutate(drug_name_clean = str_replace_all(drug_name, '-', '_')) %>%
mutate(drug_name_clean = str_to_lower(drug_name_clean),
mrn = as.numeric(MRN)) %>%
filter(mrn %in% ptb$mrn)
med1all <-   med1 %>% distinct(drug_name_clean) %>% arrange(desc(n))
med1all <-   med1 %>% distinct(drug_name_clean) %>% arrange(desc(n))
med1all <-   med1 %>% count(drug_name_clean) %>% arrange(desc(n))
View(med1all)
# start the cleaning of the medication data from the raw source
picked <-  c('vancomycin', 'imipenem_cilastatin','meropenem','ertapenem', 'cefepime', 'linezolid','metronidazole','piperacillin_tazobactam')
med1 <- read_rds('../data/tasks_nutrition_batch1_2022-11-29.rds') %>%
select(MRN, start_date, stop_date, drug_name, route) %>%
mutate(drug_name_clean = str_replace_all(drug_name, '-', '_')) %>%
mutate(drug_name_clean = str_to_lower(drug_name_clean),
mrn = as.numeric(MRN)) %>%
filter(mrn %in% ptb$mrn)
now <-   med1 %>% count(drug_name_clean) %>% arrange(desc(n))
allpickes <- tibble(picked = picked) %>%
summarise(text = str_c(picked, collapse = "|"))
View(allpickes)
allhas <- now %>%
filter(str_detect(drug_name_clean, allpickes$text))
View(allhas)
get_table_from_database ("antibiotics_antibacterial_multicenter_ag")
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database ("antibiotics_antibacterial_multicenter_ag")
View(antibiotics_antibacterial_multicenter_ag)
allpickes <- tibble(picked = picked) %>%
summarise(text = str_c(picked, collapse = "|"))
allhas <- now %>%
filter(str_detect(drug_name_clean, allpickes$text))
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'PO') %>%
filter(mrn %in% ptb$mrn)
View(empirical_med_oral1)
med1
allroute <- med1 %>% count(route) %>% arrange(desc(n))
View(allroute)
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name)
View(empirical_med_oral1)
allroute <- empirical_med_oral1 %>% count(route) %>% arrange(desc(n))
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'oral') %>%
filter(mrn %in% ptb$mrn)
View(empirical_med_oral1)
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'oral') %>%
filter(mrn %in% ptb$mrn)
View(empirical_med_oral1)
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name)
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'oral')
empirical_med_oral1 <- med1 %>%
filter(drug_name_clean %in% picked) %>%
select(-drug_name) %>%
filter(route == 'oral') %>%
filter(mrn %in% ptb$mrn)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('samples_castori_ag')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
View(meta)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
p2d_df <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, datecollection, mrn, p1d, p2d, p2d_int)
exposed_empirical <- empirical_med_oral1 %>%
mutate(drug_int =  interval(start_date, stop_date)) %>%
inner_join(p2d_df, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
exposed_empirical %>% distinct(sampleid)
316+19
exposed_empirical <- empirical_med_oral1 %>%
mutate(drug_int =  interval(start_date, stop_date)) %>%
inner_join(p2d_df, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int)) %>%
filter(had_drug == 'TRUE')
exposed_empirical %>% distinct(sampleid)
exposed_empirical %>% write_rds('../data/134_743stool_samples_p2d_drug_exposure.rds')
View(exposed_empirical)
exposed_empirical %>% distinct(sampleid)
exposed_empirical %>% distinct(sampleid)
exposed_empirical %>% write_rds('../data/134_743stool_samples_p2d_drug_exposure.rds')
exposed_empirical %>% distinct(sampleid)
exposed_empirical %>% write_rds('../data/134_743stool_samples_p2d_drug_exposure.rds')
# need to update my meta table with this newly updated exposure data
new_meta <- meta %>%
mutate(empirical = if_else(sampleid %in% exposed_empirical$sampleid, T, F))
new_meta %>% write_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
