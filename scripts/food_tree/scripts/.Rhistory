# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal( 2, .1), class = 'b', coef = "intensityablative"),
prior(normal( 2, .1), class = 'b', coef = "intensityreduced"),
prior(normal( 2, .1), class = 'b', coef = "intensitynonablative")
)
model_div_original <- brm( mod_original,
data = meta_original,
warmup = 1000, iter = 3000,
prior = div_priors_original,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 123, sample_prior = T)
inter <- plot(conditional_effects(model_div_original))
library(cowplot)
interaction_plots <- plot_grid(plotlist = list(inter[["fg_fruit:empirical"]],inter[["fg_meat:empirical"]], inter[["fg_milk:empirical"]], inter[["fg_oils:empirical"]], inter[["fg_egg:empirical"]], inter[["fg_grain:empirical"]], inter[["fg_sweets:empirical"]], inter[["fg_legume:empirical"]], inter[["fg_veggie:empirical"]] ),
nrow = 3)
ggsave('../data/173_interaction_diversity_conditional.pdf', width = 10, height = 8)
inter[["fg_fruit:empirical"]]
conditional_effects(model_div_original)
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
META <- read_csv('../data/153_combined_META.csv')
META %>%
mutate(empirical = if_else(empirical == 'TRUE', 'abx exposed', 'abx NOT exposed')) %>%
ggscatter(x = 'fg_sweets', y = 'simpson_reciprocal', facet.by = 'empirical',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n")) +
scale_x_sqrt()
META <- read_csv('../data/153_combined_META.csv')
META %>%
mutate(empirical = if_else(empirical == 'TRUE', 'abx exposed', 'abx NOT exposed')) %>%
ggscatter(x = 'fg_sweets', y = 'simpson_reciprocal', facet.by = 'empirical',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n")) +
scale_x_sqrt() +
scale_y_sqrt()
?conditional_effects
fit <- brm(count ~ zAge + zBase * Trt + (1 | patient),
data = epilepsy, family = poisson())
## plot all conditional effects
plot(conditional_effects(fit), ask = FALSE)
## change colours to grey scale
library(ggplot2)
me <- conditional_effects(fit, "zBase:Trt")
plot(me, plot = FALSE)[[1]] +
scale_color_grey() +
scale_fill_grey()
## only plot the conditional interaction effect of 'zBase:Trt'
## for different values for 'zAge'
conditions <- data.frame(zAge = c(-1, 0, 1))
plot(conditional_effects(fit, effects = "zBase:Trt",
conditions = conditions))
## also incorporate random effects variance over patients
## also add data points and a rug representation of predictor values
plot(conditional_effects(fit, effects = "zBase:Trt",
conditions = conditions, re_formula = NULL),
points = TRUE, rug = TRUE)
## change handling of two-way interactions
int_conditions <- list(
zBase = setNames(c(-2, 1, 0), c("b", "c", "a"))
)
conditional_effects(fit, effects = "Trt:zBase",
int_conditions = int_conditions)
conditional_effects(fit, effects = "Trt:zBase",
int_conditions = list(zBase = quantile))
?brm
META <- read_csv('../data/153_combined_META.csv')
META %>%
mutate(empirical = if_else(empirical == 'TRUE', 'abx exposed', 'abx NOT exposed')) %>%
ggscatter(x = 'fg_sweets', y = 'simpson_reciprocal', facet.by = 'empirical',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n")) +
scale_x_log10() +
scale_y_sqrt()
View(meta_original)
View(META)
META %>%
mutate(empirical = if_else(empirical == 'TRUE', 'abx exposed', 'abx NOT exposed')) %>%
mutate(sweets_log = log2(fg_sweets + 0.0001)) %>%
ggscatter(x = 'sweets_log', y = 'simpson_reciprocal', facet.by = 'empirical',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n")) +
#scale_x_log10() +
scale_y_sqrt()
library(ggthemes)
palette_pander(10, random_order = FALSE)
?fitted
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
dtb <- read_csv('../data/152_combined_DTB.csv')
View(dtb)
dtb <- read_csv('../data/152_combined_DTB.csv') %>% filter(batch == 'batch1')
dtb <- read_csv('../data/152_combined_DTB.csv')
range(dtb$fdrt)
# I wanna use the original data types for this thing
meta_original <- read_csv('../data/153_combined_META.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn))
# %>%
#   mutate(fg_egg = fg_egg/100,
#          fg_fruit = fg_fruit/100,
#          fg_grain = fg_grain/100,
#          fg_legume = fg_legume/100,
#          fg_meat = fg_meat/100,
#          fg_milk = fg_milk/100,
#          fg_oils = fg_oils/100,
#          fg_sweets = fg_sweets/100,
#          fg_veggie = fg_veggie/100)
mod_original <- log(simpson_reciprocal) ~ 0 +
intensity+
empirical+
fg_fruit:empirical+
fg_meat:empirical+
fg_milk:empirical+
fg_oils:empirical+
fg_egg:empirical+
fg_grain:empirical+
fg_sweets:empirical+
fg_legume:empirical+
fg_veggie:empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior(mod_original,data = meta_original )
set.seed(1)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
library(ggridges)
library(brmstools)
library(bayesplot)
options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
dtb <- read_csv('../data/152_combined_DTB.csv')
range(dtb$fdrt)
# I wanna use the original data types for this thing
meta_original <- read_csv('../data/153_combined_META.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn))
# %>%
#   mutate(fg_egg = fg_egg/100,
#          fg_fruit = fg_fruit/100,
#          fg_grain = fg_grain/100,
#          fg_legume = fg_legume/100,
#          fg_meat = fg_meat/100,
#          fg_milk = fg_milk/100,
#          fg_oils = fg_oils/100,
#          fg_sweets = fg_sweets/100,
#          fg_veggie = fg_veggie/100)
mod_original <- log(simpson_reciprocal) ~ 0 +
intensity+
empirical+
fg_fruit:empirical+
fg_meat:empirical+
fg_milk:empirical+
fg_oils:empirical+
fg_egg:empirical+
fg_grain:empirical+
fg_sweets:empirical+
fg_legume:empirical+
fg_veggie:empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior(mod_original,data = meta_original )
div_priors_original <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "empiricalFALSE:fg_egg"),
prior(normal(0, 1), class = 'b', coef = "empiricalFALSE:fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "empiricalFALSE:fg_grain"),
prior(normal(0, 1), class = 'b', coef = "empiricalFALSE:fg_legume"),
prior(normal(0, 1), class = 'b', coef = "empiricalFALSE:fg_meat"),
prior(normal(0, 1), class = 'b', coef = "empiricalFALSE:fg_milk"),
prior(normal(0, 1), class = 'b', coef = "empiricalFALSE:fg_oils"),
prior(normal(0, 1), class = 'b', coef = "empiricalFALSE:fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "empiricalFALSE:fg_veggie"),
# interaction terms
prior(normal(0, 1), class = 'b', coef = "empiricalTRUE:fg_egg"),
prior(normal(0, 1), class = 'b', coef = "empiricalTRUE:fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "empiricalTRUE:fg_grain"),
prior(normal(0, 1), class = 'b', coef = "empiricalTRUE:fg_legume"),
prior(normal(0, 1), class = 'b', coef = "empiricalTRUE:fg_meat"),
prior(normal(0, 1), class = 'b', coef = "empiricalTRUE:fg_milk"),
prior(normal(0, 1), class = 'b', coef = "empiricalTRUE:fg_oils"),
prior(normal(0, 1), class = 'b', coef = "empiricalTRUE:fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "empiricalTRUE:fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal( 2, .1), class = 'b', coef = "intensityablative"),
prior(normal( 2, .1), class = 'b', coef = "intensityreduced"),
prior(normal( 2, .1), class = 'b', coef = "intensitynonablative")
)
model_div_original <- brm( mod_original,
data = meta_original,
warmup = 1000, iter = 3000,
prior = div_priors_original,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 123, sample_prior = T, file = '../data/173_interaction_conditional_model')
inter <- plot(conditional_effects(model_div_original))
library(cowplot)
interaction_plots <- plot_grid(plotlist = list(inter[["fg_fruit:empirical"]],inter[["fg_meat:empirical"]], inter[["fg_milk:empirical"]], inter[["fg_oils:empirical"]], inter[["fg_egg:empirical"]], inter[["fg_grain:empirical"]], inter[["fg_sweets:empirical"]], inter[["fg_legume:empirical"]], inter[["fg_veggie:empirical"]] ),
nrow = 3)
ggsave('../data/173_interaction_diversity_conditional.pdf', width = 10, height = 8)
?conditional_effects
inter <- plot(conditional_effects(model_div_original),ask = F )
inter <- plot(conditional_effects(model_div_original),ask = F )
inter <- plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),ask = F )
inter <- plot(conditional_effects(model_div_original, effects = 'empirical:fg_sweets'),ask = F )
inter <- plot(conditional_effects(model_div_original, effects = 'empirical:fg_sweets'),ask = F ) +
theme_classic()
inter <- plot(conditional_effects(model_div_original, effects = 'empirical:fg_sweets'),ask = F )
dat <- conditional_effects(model_div_original, effects = 'empirical:fg_sweets')
View(dat)
inter <- plot(conditional_effects(model_div_original, effects = 'empirical:fg_sweets'),ask = F )
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = T, plot = F)[[1]]
View(meta_original)
what <- dat$`empirical:fg_sweets`
View(what)
dat
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = T, plot = F)[[1]]
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = T, plot = F)[[1]] + theme_classic()
tt <- dat$`empirical:fg_sweets`$fg_sweets
tt
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = T, plot = F)[[1]] + theme_classic()
dat <- conditional_effects(model_div_original, effects = 'fg_sweets:empirical')
dat
tt <- dat$`fg_sweets:empirical`$fg_sweets
tt
range(tt)
View(what)
tt <- dat$`fg_sweets:empirical`
View(tt)
c < -1:1
c
-1:1
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = T, plot = F)[[1]] + theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = T, plot = F)[[1]] + theme_classic()
tt <- dat$`fg_sweets:empirical`
tt <- dat$`fg_sweets:empirical`
tt <- dat$`fg_sweets:empirical`
tt <- dat$`fg_sweets:empirical`
View(tt)
tt <- dat$`fg_sweets:empirical`
tt <- dat$`fg_sweets:empirical`
tt <- dat$`fg_sweets:empirical`
tt <- dat$`fg_sweets:empirical`
summary(tt$fg_sweets)
sd(tt$fg_sweets)
summary(tt$fg_sweets)
mean(tt$fg_sweets) + sd(tt$fg_sweets)
mean(tt$fg_sweets) - sd(tt$fg_sweets)
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = T, plot = F)[[1]] + theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = T, plot = F)[[1]] + theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical',
spaghetti = T,
ndraws = 200),
points = T, plot = F)[[1]] + theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = T, plot = F)[[1]] + theme_classic()
conditions <- brms::make_conditions(model_div_original, vars = "fg_sweets")
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical', conditions = conditions),
points = T, plot = F)[[1]] + theme_classic()
80.5-35.08
35.08-45.42
conditions <- brms::make_conditions(model_div_original, vars = "fg_sweets")
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical', conditions = conditions),
points = T, plot = F)[[1]] + theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] + theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_pander() +
scale_colour_pander() +
theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_viridis_b() +
scale_colour_viridis_b() +
theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_pander() +
scale_colour_pander() +
theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('gray','red')) +
scale_colour_manual(values = c('gray','red')) +
theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('gray','maroon')) +
scale_colour_manual(values = c('gray','maroon')) +
theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('gray','#EC0000')) +
scale_colour_manual(values = c('gray','#EC0000')) +
theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('gray','maroon')) +
scale_colour_manual(values = c('gray','maroon')) +
theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
theme_classic()
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
theme_classic() +
theme(aspect.ratio = 1)
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 3) +
theme_classic() +
theme(aspect.ratio = 1)
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 3) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1)
plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 3) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1, legend.position = 'none')
g_sweets <- plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 3) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1, legend.position = 'none')
g_sweets
inter <- plot(conditional_effects(model_div_original, effects = 'empirical:fg_sweets'),ask = F ) +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 3) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1, legend.position = 'none')
dat <- conditional_effects(model_div_original)
names(dat)
vars <- tibble(var = names(dat))
g_sweets <- plot(conditional_effects(model_div_original, effects = 'fg_sweets:empirical'),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 3) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1, legend.position = 'none')
vars <- tibble(var = names(dat))
gplots <-
vars <- tibble(var = names(dat))
vars
vars <- tibble(var = names(dat))
vars <- tibble(var = names(dat))
vars <- tibble(var = names(dat))
vars <- tibble(var = names(dat))
vars <- tibble(var = names(dat))
vars <- tibble(var = names(dat))
vars <- tibble(var = names(dat))
vars <- tibble(var = names(dat))
vars <- tibble(var = names(dat))
vars <- tibble(var = names(dat))
vars
vars <- tibble(var = names(dat)) %>% filter(str_detect(var, '\\:'))
vars
gplots <- vars %>%
pull(var) %>%
set_names(vars %>%
pull(var)) %>%
map(function(var_){
plot(conditional_effects(model_div_original, effects = var_),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 3) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1, legend.position = 'none')
})
gplots
gplots
gplots <- vars %>%
pull(var) %>%
set_names(vars %>%
pull(var)) %>%
map(function(var_){
plot(conditional_effects(model_div_original, effects = var_),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0.5, 3) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1, legend.position = 'none')
})
gplots
gplots <- vars %>%
pull(var) %>%
set_names(vars %>%
pull(var)) %>%
map(function(var_){
plot(conditional_effects(model_div_original, effects = var_),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 3) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1, legend.position = 'none')
})
gplots
plot(conditional_effects(model_div_original, effects = var_),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 4) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1, legend.position = 'none')
gplots <- vars %>%
pull(var) %>%
set_names(vars %>%
pull(var)) %>%
map(function(var_){
plot(conditional_effects(model_div_original, effects = var_),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 4) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1, legend.position = 'none')
})
gplots
gplots
gplots
gplots <- vars %>%
pull(var) %>%
set_names(vars %>%
pull(var)) %>%
map(function(var_){
plot(conditional_effects(model_div_original, effects = var_),
points = F, plot = F)[[1]] +
scale_fill_manual(values = c('darkgray','maroon')) +
scale_colour_manual(values = c('darkgray','maroon')) +
ylim(0, 3.5) +
labs(y = 'Predicted log(diversity)') +
theme_classic() +
theme(aspect.ratio = 1, legend.position = 'none')
})
interaction_plots <- plot_grid(plotlist =  gplots,
nrow = 3)
ggsave('../data/173_interaction_diversity_conditional_2.pdf', width = 10, height = 8)
