LOS_mult_comb_alpha7_21
LOS_mult_comb_first_in_w1
LOS_mult_comb_fg
LOS_mult_comb_macro
LOS_mult_comb_cal
LOS_mult_comb_alpha7_21
LOS_mult_comb_alpha_w1
LOS_mult_comb_ave_faith
df_main <- read_csv('../data/df_main.csv') %>%
mutate(Source = source,
Intensity = factor(Intensity, levels=c("Nonablative","Reduced Intensity",'Ablative')),
Source = factor(Source,levels=c("unmodified","TCD","cord")) ) %>%
full_join(few ) %>%
mutate(TRMevent = factor(TRMevent)) %>%
mutate(d_carb_med = ifelse(d_carb > median(d_carb,na.rm=T),"Above median", "Below median"),
d_fat_med = ifelse(d_fat > median(d_fat,na.rm=T),"Above median", "Below median"),
d_fiber_med = ifelse(d_fiber > median(d_fiber,na.rm=T),"Above median", "Below median"),
d_protein_med = ifelse(d_protein > median(d_protein,na.rm=T),"Above median", "Below median"),
d_sugar_med = ifelse(d_sugar > median(d_sugar,na.rm=T),"Above median", "Below median"),
daycal_med = ifelse(daycal > median(daycal,na.rm=T),"Above median", "Below median"),
daily_Eggs_med = ifelse(daily_Eggs > median(daily_Eggs,na.rm=T),"Above median", "Below median"),
daily_Fruits_med = ifelse(daily_Fruits > median(daily_Fruits,na.rm=T),"Above median", "Below median"),
daily_Grains_med = ifelse(daily_Grains > median(daily_Grains,na.rm=T),"Above median", "Below median"),
daily_Legumes_med = ifelse(daily_Legumes > median(daily_Legumes,na.rm=T),"Above median", "Below median"),
daily_Meats_med = ifelse(daily_Meats > median(daily_Meats,na.rm=T),"Above median", "Below median"),
daily_Oils_med = ifelse(daily_Oils > median(daily_Oils,na.rm=T),"Above median", "Below median"),
daily_Sweets_med = ifelse(daily_Sweets > median(daily_Sweets,na.rm=T),"Above median", "Below median"),
daily_Vegetables_med = ifelse(daily_Vegetables > median(daily_Vegetables,na.rm=T),"Above median", "Below median"),
daily_Milk_med = ifelse(daily_Milk > median(daily_Milk,na.rm=T),"Above median", "Below median")
)
featlist <- c("d_carb_med",
"d_fat_med",
"d_fiber_med",
"d_protein_med",
"d_sugar_med",
"daycal_med",
"daily_Eggs_med",
"daily_Fruits_med",
"daily_Milk_med",
"daily_Grains_med",
"daily_Legumes_med",
"daily_Meats_med",
"daily_Oils_med",
"daily_Sweets_med",
"daily_Vegetables_med")
for (i in 1:length(featlist)){
reg <- as.formula(paste0("Surv(tLOS,LOS)~",featlist[i]))
print(survfit2(reg, data = df_main) %>%
ggsurvfit(type = "risk", linewidth = 0.8) +
add_pvalue("annotation",size=5) +
add_confidence_interval()+
ylab("Percentage of patients discharged alive")+
add_risktable()+ggtitle(featlist[i]))
}
library(ggsurvfit)
install.packages('library(ggsurvfit)')
install.packages('ggsurvfit')
library(ggsurvfit)
for (i in 1:length(featlist)){
reg <- as.formula(paste0("Surv(tLOS,LOS)~",featlist[i]))
print(survfit2(reg, data = df_main) %>%
ggsurvfit(type = "risk", linewidth = 0.8) +
add_pvalue("annotation",size=5) +
add_confidence_interval()+
ylab("Percentage of patients discharged alive")+
add_risktable()+ggtitle(featlist[i]))
}
# maybe make a subset and use the patients that we have got the gvhd data now
use <- df_main
colnames(use)
use %>% count(d100_a_gvhd)
look <- use %>%
filter(is.na(d100_a_gvhd))
colnames(use)
look <- use %>%
filter(is.na(d100_a_gvhd)) %>%
select(starts_with('d100'), tevent_landmark, GRMevent)
View(look)
use %>% count(d100_a_gvhd)
# maybe make a subset and use the patients that we have got the gvhd data now
use <- df_main %>%
filter(!is.na(d100_a_gvhd))
use <- df_main %>%
filter(!is.na(d100_a_gvhd))
use <- df_main %>%
filter(!is.na(d100_a_gvhd))
use <- df_main %>%
filter(!is.na(d100_a_gvhd))
use <- df_main %>%
filter(!is.na(d100_a_gvhd))
use <- df_main %>%
filter(!is.na(d100_a_gvhd))
# maybe make a subset and use the patients that we have got the gvhd data now
use <- df_main %>%
filter(!is.na(d100_a_gvhd))
GRM_mult_comb_fg <- crr(Surv(tevent_landmark,GRMevent) ~ daily_Eggs + daily_Fruits+ daily_Grains + daily_Legumes +daily_Meats + daily_Oils +daily_Sweets +daily_Vegetables + daily_Milk + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; all fg")
df_main <- read_csv('../data/df_main.csv') %>%
mutate(Source = source,
Intensity = factor(Intensity, levels=c("Nonablative","Reduced Intensity",'Ablative')),
Source = factor(Source,levels=c("unmodified","TCD","cord")) ) %>%
full_join(few ) %>%
mutate(TRMevent = factor(TRMevent),
GRMevent = factor(GRMevent)) %>%
mutate(d_carb_med = ifelse(d_carb > median(d_carb,na.rm=T),"Above median", "Below median"),
d_fat_med = ifelse(d_fat > median(d_fat,na.rm=T),"Above median", "Below median"),
d_fiber_med = ifelse(d_fiber > median(d_fiber,na.rm=T),"Above median", "Below median"),
d_protein_med = ifelse(d_protein > median(d_protein,na.rm=T),"Above median", "Below median"),
d_sugar_med = ifelse(d_sugar > median(d_sugar,na.rm=T),"Above median", "Below median"),
daycal_med = ifelse(daycal > median(daycal,na.rm=T),"Above median", "Below median"),
daily_Eggs_med = ifelse(daily_Eggs > median(daily_Eggs,na.rm=T),"Above median", "Below median"),
daily_Fruits_med = ifelse(daily_Fruits > median(daily_Fruits,na.rm=T),"Above median", "Below median"),
daily_Grains_med = ifelse(daily_Grains > median(daily_Grains,na.rm=T),"Above median", "Below median"),
daily_Legumes_med = ifelse(daily_Legumes > median(daily_Legumes,na.rm=T),"Above median", "Below median"),
daily_Meats_med = ifelse(daily_Meats > median(daily_Meats,na.rm=T),"Above median", "Below median"),
daily_Oils_med = ifelse(daily_Oils > median(daily_Oils,na.rm=T),"Above median", "Below median"),
daily_Sweets_med = ifelse(daily_Sweets > median(daily_Sweets,na.rm=T),"Above median", "Below median"),
daily_Vegetables_med = ifelse(daily_Vegetables > median(daily_Vegetables,na.rm=T),"Above median", "Below median"),
daily_Milk_med = ifelse(daily_Milk > median(daily_Milk,na.rm=T),"Above median", "Below median")
)
# maybe make a subset and use the patients that we have got the gvhd data now
use <- df_main %>%
filter(!is.na(d100_a_gvhd))
GRM_mult_comb_fg <- crr(Surv(tevent_landmark,GRMevent) ~ daily_Eggs + daily_Fruits+ daily_Grains + daily_Legumes +daily_Meats + daily_Oils +daily_Sweets +daily_Vegetables + daily_Milk + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; all fg")
GRM_mult_comb_macro <- crr(Surv(tevent_landmark,GRMevent) ~  d_carb +d_fat + d_fiber +d_protein+ d_sugar  + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; all macronutrients")
GRM_mult_comb_cal <- crr(Surv(tevent_landmark,GRMevent) ~ daycal  + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; calories")
GRM_mult_comb_fg
GRM_mult_comb_macro
GRM_mult_comb_cal
GRM_mult_comb_median7_21 <- crr(Surv(tevent_landmark,GRMevent) ~ median7_21  + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; median7_21")
GRM_mult_comb_first_in_w1 <- crr(Surv(tevent_landmark,GRMevent) ~ first_in_w1  + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; first_in_w1")
GRM_mult_comb_ave_faith <- crr(Surv(tevent_landmark,GRMevent) ~ ave_faith  + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; ave_faith")
GRM_mult_comb_median7_21
GRM_mult_comb_first_in_w1
GRM_mult_comb_ave_faith
View(df_main)
df_main %>% summary
df_main <- read_csv('../data/df_main.csv') %>%
mutate(Source = source,
Intensity = factor(Intensity, levels=c("Nonablative","Reduced Intensity",'Ablative')),
Source = factor(Source,levels=c("unmodified","TCD","cord")) ) %>%
full_join(few ) %>%
mutate(TRMevent = factor(TRMevent),
GRMevent = factor(GRMevent)) %>%
# to divde the cal by 1000 for easier interpretation, and the other food related vars by 100
mutate(d_carb = d_carb/100,
d_fat = d_fat/100,
d_fiber = d_fiber/100,
d_protein = d_protein/100,
d_sugar = d_sugar/100,
daycal = daycal/1000,
daily_Eggs = daily_Eggs/100,
daily_Fruits = daily_Fruits/100,
daily_Grains = daily_Grains/100,
daily_Legumes = daily_Legumes/100,
daily_Meats = daily_Meats/100,
daily_Oils = daily_Oils/100,
daily_Sweets = daily_Sweets/100,
daily_Vegetables = daily_Vegetables/100,
daily_Milk = daily_Milk/100) %>%
mutate(d_carb_med = ifelse(d_carb > median(d_carb,na.rm=T),"Above median", "Below median"),
d_fat_med = ifelse(d_fat > median(d_fat,na.rm=T),"Above median", "Below median"),
d_fiber_med = ifelse(d_fiber > median(d_fiber,na.rm=T),"Above median", "Below median"),
d_protein_med = ifelse(d_protein > median(d_protein,na.rm=T),"Above median", "Below median"),
d_sugar_med = ifelse(d_sugar > median(d_sugar,na.rm=T),"Above median", "Below median"),
daycal_med = ifelse(daycal > median(daycal,na.rm=T),"Above median", "Below median"),
daily_Eggs_med = ifelse(daily_Eggs > median(daily_Eggs,na.rm=T),"Above median", "Below median"),
daily_Fruits_med = ifelse(daily_Fruits > median(daily_Fruits,na.rm=T),"Above median", "Below median"),
daily_Grains_med = ifelse(daily_Grains > median(daily_Grains,na.rm=T),"Above median", "Below median"),
daily_Legumes_med = ifelse(daily_Legumes > median(daily_Legumes,na.rm=T),"Above median", "Below median"),
daily_Meats_med = ifelse(daily_Meats > median(daily_Meats,na.rm=T),"Above median", "Below median"),
daily_Oils_med = ifelse(daily_Oils > median(daily_Oils,na.rm=T),"Above median", "Below median"),
daily_Sweets_med = ifelse(daily_Sweets > median(daily_Sweets,na.rm=T),"Above median", "Below median"),
daily_Vegetables_med = ifelse(daily_Vegetables > median(daily_Vegetables,na.rm=T),"Above median", "Below median"),
daily_Milk_med = ifelse(daily_Milk > median(daily_Milk,na.rm=T),"Above median", "Below median")
)
featlist <- c("d_carb_med",
"d_fat_med",
"d_fiber_med",
"d_protein_med",
"d_sugar_med",
"daycal_med",
"daily_Eggs_med",
"daily_Fruits_med",
"daily_Milk_med",
"daily_Grains_med",
"daily_Legumes_med",
"daily_Meats_med",
"daily_Oils_med",
"daily_Sweets_med",
"daily_Vegetables_med")
#library(biostatR);
library(tidyverse)
library(tidycmprsk)
library(survival)
library(gtsummary)
library(ggsurvfit)
# theme_set(mskRvis::theme_biostat()); mskRvis::set_msk_palette()
# theme_gtsummary_compact()
few <- read_csv('../data/156_extra_predictors.csv')
df_main <- read_csv('../data/df_main.csv') %>%
mutate(Source = source,
Intensity = factor(Intensity, levels=c("Nonablative","Reduced Intensity",'Ablative')),
Source = factor(Source,levels=c("unmodified","TCD","cord")) ) %>%
full_join(few ) %>%
mutate(TRMevent = factor(TRMevent),
GRMevent = factor(GRMevent)) %>%
# to divde the cal by 1000 for easier interpretation, and the other food related vars by 100
mutate(d_carb = d_carb/100,
d_fat = d_fat/100,
d_fiber = d_fiber/100,
d_protein = d_protein/100,
d_sugar = d_sugar/100,
daycal = daycal/1000,
daily_Eggs = daily_Eggs/100,
daily_Fruits = daily_Fruits/100,
daily_Grains = daily_Grains/100,
daily_Legumes = daily_Legumes/100,
daily_Meats = daily_Meats/100,
daily_Oils = daily_Oils/100,
daily_Sweets = daily_Sweets/100,
daily_Vegetables = daily_Vegetables/100,
daily_Milk = daily_Milk/100) %>%
mutate(d_carb_med = ifelse(d_carb > median(d_carb,na.rm=T),"Above median", "Below median"),
d_fat_med = ifelse(d_fat > median(d_fat,na.rm=T),"Above median", "Below median"),
d_fiber_med = ifelse(d_fiber > median(d_fiber,na.rm=T),"Above median", "Below median"),
d_protein_med = ifelse(d_protein > median(d_protein,na.rm=T),"Above median", "Below median"),
d_sugar_med = ifelse(d_sugar > median(d_sugar,na.rm=T),"Above median", "Below median"),
daycal_med = ifelse(daycal > median(daycal,na.rm=T),"Above median", "Below median"),
daily_Eggs_med = ifelse(daily_Eggs > median(daily_Eggs,na.rm=T),"Above median", "Below median"),
daily_Fruits_med = ifelse(daily_Fruits > median(daily_Fruits,na.rm=T),"Above median", "Below median"),
daily_Grains_med = ifelse(daily_Grains > median(daily_Grains,na.rm=T),"Above median", "Below median"),
daily_Legumes_med = ifelse(daily_Legumes > median(daily_Legumes,na.rm=T),"Above median", "Below median"),
daily_Meats_med = ifelse(daily_Meats > median(daily_Meats,na.rm=T),"Above median", "Below median"),
daily_Oils_med = ifelse(daily_Oils > median(daily_Oils,na.rm=T),"Above median", "Below median"),
daily_Sweets_med = ifelse(daily_Sweets > median(daily_Sweets,na.rm=T),"Above median", "Below median"),
daily_Vegetables_med = ifelse(daily_Vegetables > median(daily_Vegetables,na.rm=T),"Above median", "Below median"),
daily_Milk_med = ifelse(daily_Milk > median(daily_Milk,na.rm=T),"Above median", "Below median")
)
# the diversity close to the engraftment for the patients
# average food diversity between the period
colnames(df_main)
df_main %>% summary
featlist <- c("d_carb_med",
"d_fat_med",
"d_fiber_med",
"d_protein_med",
"d_sugar_med",
"daycal_med",
"daily_Eggs_med",
"daily_Fruits_med",
"daily_Milk_med",
"daily_Grains_med",
"daily_Legumes_med",
"daily_Meats_med",
"daily_Oils_med",
"daily_Sweets_med",
"daily_Vegetables_med")
OS_mult_comb_fg <- coxph(Surv(OStime_landmark,OSevent) ~ daily_Eggs + daily_Fruits+ daily_Grains + daily_Legumes +daily_Meats + daily_Oils +daily_Sweets +daily_Vegetables + daily_Milk + Intensity + Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for Overall Survival, landmarked at day of discharging; all fg")
OS_mult_comb_macro <- coxph(Surv(OStime_landmark,OSevent) ~
d_carb +
d_fat +
d_fiber +
#d_protein+
d_sugar +
Intensity +
Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for Overall Survival, landmarked at day of engraftment; all macronutrients")
OS_mult_comb_cal <- coxph(Surv(OStime_landmark,OSevent) ~
daycal +
Intensity +
Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for Overall Survival, landmarked at day of engraftment; calories")
OS_mult_comb_alpha7_21 <- coxph(Surv(OStime_landmark,OSevent) ~
median7_21 +
Intensity +
Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for Overall Survival, landmarked at day of engraftment; alpha7_21")
OS_mult_comb_alpha_w1 <- coxph(Surv(OStime_landmark,OSevent) ~
first_in_w1 +
Intensity +
Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for Overall Survival, landmarked at day of engraftment; first_in_w1")
OS_mult_comb_ave_faith <- coxph(Surv(OStime_landmark,OSevent) ~
ave_faith +
Intensity +
Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for Overall Survival, landmarked at day of engraftment; ave_faith")
OS_mult_comb_fg
OS_mult_comb_macro
OS_mult_comb_cal
OS_mult_comb_alpha7_21
OS_mult_comb_alpha_w1
OS_mult_comb_ave_faith
TRM_mult_comb_fg <- crr(Surv(tevent_landmark,TRMevent) ~daily_Eggs + daily_Fruits+ daily_Grains + daily_Legumes +daily_Meats + daily_Oils +daily_Sweets +daily_Vegetables + daily_Milk  + Intensity + Source, data=df_main, failcode = "TRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for TRM, landmarked at day of discharging; all fg")
TRM_mult_comb_macro <- crr(Surv(tevent_landmark,TRMevent) ~ d_carb +d_fat + d_fiber +d_protein+ d_sugar  + Intensity + Source, data=df_main, failcode = "TRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for TRM, landmarked at day of discharging; all macronutrients")
TRM_mult_comb_cal <- crr(Surv(tevent_landmark,TRMevent) ~ daycal  + Intensity + Source, data=df_main, failcode = "TRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for TRM, landmarked at day of discharging; calories")
TRM_mult_comb_median7_21 <- crr(Surv(tevent_landmark,TRMevent) ~ median7_21  + Intensity + Source, data=df_main, failcode = "TRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for TRM, landmarked at day of discharging; median7_21")
TRM_mult_comb_first_in_w1 <- crr(Surv(tevent_landmark,TRMevent) ~ first_in_w1  + Intensity + Source, data=df_main, failcode = "TRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for TRM, landmarked at day of discharging; first_in_w1")
TRM_mult_comb_ave_faith <- crr(Surv(tevent_landmark,TRMevent) ~ ave_faith  + Intensity + Source, data=df_main, failcode = "TRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for TRM, landmarked at day of discharging; ave_faith")
TRM_mult_comb_fg
TRM_mult_comb_macro
TRM_mult_comb_cal
TRM_mult_comb_median7_21
TRM_mult_comb_first_in_w1
TRM_mult_comb_ave_faith
LOS_mult_comb_fg <- coxph(Surv(tLOS,LOS) ~ daily_Eggs + daily_Fruits+ daily_Grains + daily_Legumes +daily_Meats + daily_Oils +daily_Sweets +daily_Vegetables + daily_Milk + Intensity + Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE,estimate_fun = function(x) style_ratio(x,digits=3)) %>% bold_p() %>% modify_caption("Length of stay after engraftment; all fg")
LOS_mult_comb_macro <- coxph(Surv(tLOS,LOS) ~
d_carb +
d_fat +
d_fiber +
#d_protein+
d_sugar +
Intensity +
Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE, estimate_fun = function(x) style_ratio(x,digits=3)) %>% bold_p() %>% modify_caption("Length of stay after engraftment; all macronutrients")
LOS_mult_comb_cal <- coxph(Surv(tLOS,LOS) ~
daycal +
Intensity +
Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE, estimate_fun = function(x) style_ratio(x,digits=3)) %>% bold_p() %>% modify_caption("Length of stay after engraftment; calories")
LOS_mult_comb_alpha7_21 <- coxph(Surv(tLOS,LOS) ~
median7_21 +
Intensity +
Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE, estimate_fun = function(x) style_ratio(x,digits=3)) %>% bold_p() %>% modify_caption("Length of stay after engraftment; alpha7_21")
LOS_mult_comb_alpha_w1 <- coxph(Surv(tLOS,LOS) ~
first_in_w1 +
Intensity +
Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE, estimate_fun = function(x) style_ratio(x,digits=3)) %>% bold_p() %>% modify_caption("Length of stay after engraftment; first_in_w1")
LOS_mult_comb_ave_faith <- coxph(Surv(tLOS,LOS) ~
ave_faith +
Intensity +
Source, data=df_main) %>%
tbl_regression(exponentiate=TRUE, estimate_fun = function(x) style_ratio(x,digits=3)) %>% bold_p() %>% modify_caption("Length of stay after engraftment; ave_faith")
LOS_mult_comb_fg
LOS_mult_comb_macro
LOS_mult_comb_cal
LOS_mult_comb_alpha7_21
LOS_mult_comb_alpha_w1
LOS_mult_comb_ave_faith
for (i in 1:length(featlist)){
reg <- as.formula(paste0("Surv(tLOS,LOS)~",featlist[i]))
print(survfit2(reg, data = df_main) %>%
ggsurvfit(type = "risk", linewidth = 0.8) +
add_pvalue("annotation",size=5) +
add_confidence_interval()+
ylab("Percentage of patients discharged alive")+
add_risktable()+ggtitle(featlist[i]))
}
# maybe make a subset and use the patients that we have got the gvhd data now
use <- df_main %>%
filter(!is.na(d100_a_gvhd))
GRM_mult_comb_fg <- crr(Surv(tevent_landmark,GRMevent) ~ daily_Eggs + daily_Fruits+ daily_Grains + daily_Legumes +daily_Meats + daily_Oils +daily_Sweets +daily_Vegetables + daily_Milk + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; all fg")
GRM_mult_comb_macro <- crr(Surv(tevent_landmark,GRMevent) ~  d_carb +d_fat + d_fiber +d_protein+ d_sugar  + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; all macronutrients")
GRM_mult_comb_cal <- crr(Surv(tevent_landmark,GRMevent) ~ daycal  + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; calories")
GRM_mult_comb_median7_21 <- crr(Surv(tevent_landmark,GRMevent) ~ median7_21  + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; median7_21")
GRM_mult_comb_first_in_w1 <- crr(Surv(tevent_landmark,GRMevent) ~ first_in_w1  + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; first_in_w1")
GRM_mult_comb_ave_faith <- crr(Surv(tevent_landmark,GRMevent) ~ ave_faith  + Intensity + Source, data=use, failcode = "GRM")%>%
tbl_regression(exponentiate=TRUE) %>% bold_p() %>% modify_caption("Multivariable analysis for GRM, landmarked at day of discharging; ave_faith")
GRM_mult_comb_fg
GRM_mult_comb_macro
GRM_mult_comb_cal
GRM_mult_comb_median7_21
GRM_mult_comb_first_in_w1
GRM_mult_comb_ave_faith
knitr::opts_chunk$set(echo = TRUE)
DTB <- read_csv('../data/152_combined_DTB.csv')
# get the p2d ave of the cal and 5 macro
DTB <- read_csv('../data/152_combined_DTB.csv')
# get the p2d ave of the cal and 5 macro
DTB <- read_csv('../data/152_combined_DTB.csv')
View(DTB)
psmoothie <- readxl::read_excel('../data/142b_batch1_diet_calories_check_subset_with_macros_peter.xlsx') %>% distinct()
View(psmoothie)
View(psmoothie)
psmoothie <- readxl::read_excel('../data/142b_batch1_diet_calories_check_subset_with_macros_peter.xlsx') %>% distinct()
View(psmoothie)
View(DTB)
DTB
DTB %>%
mutate(foodall = str_glue('{Food_NSC}__{Unit}'))
DTB %>%
mutate(foodall = str_glue('{Food_NSC}__{Unit}')) %>%
distinct(foodall)
DTB %>%
mutate(foodall = str_glue('{Food_NSC}__{Unit}')) %>%
distinct(foodall) %>%
nrow()
STB <- read_csv('../data/152_combined_STB.csv')
View(STB)
DTB
#
all_daily_foodall <- DTB %>%
mutate(foodall = str_glue('{Food_NSC}__{Unit}')) %>%
group_by(mrn, fdrt, foodall) %>%
summarise(total_daily_foodall = sum(dehydrated_weight))
View(all_daily_foodall)
# the unique combinations of the foodnsc + unit
DTB %>%
mutate(foodall = str_glue('{Food_NSC}__{Unit}')) %>%
distinct(foodall) %>%
nrow()
STB <- read_csv('../data/152_combined_STB.csv')
#
all_daily_foodall <- DTB %>%
mutate(foodall = str_glue('{Food_NSC}__{Unit}')) %>%
group_by(mrn, fdrt, foodall) %>%
summarise(total_daily_foodall = sum(dehydrated_weight))
# the previous two days average for each stool sample
stb_pair <- STB %>%
select(mrn, sdrt) %>%
transmute(mrn = mrn,
p1d = sdrt-1,
p2d = sdrt-2)
mean_p2d_foodall <-  function(mrn_, p1d_, p2d_){
df = all_daily_foodall %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_foodall = sum(total_daily_foodall)/2)
return(df)
}
mean_p2d_df_foodall <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_foodall(mrn, p1d, p2d)
}) %>%
set_names(STB %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
View(mean_p2d_df_foodall)
# get the p2d ave of the cal and 5 macro
DTB <- read_csv('../data/152_combined_DTB.csv')
# the daily caloric intake :
all_daily_pt <- DTB %>%
group_by(mrn, fdrt) %>%
summarise(total_daily = sum(Calories_kcal))
# the previous two days average for each stool sample
stb_pair <- STB %>%
select(mrn, sdrt) %>%
transmute(mrn = mrn,
p1d = sdrt-1,
p2d = sdrt-2)
mean_p2d_cal <-  function(mrn_, p1d_, p2d_){
df = all_daily_pt %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_cal = sum(total_daily)/2)
return(df)
}
mean_p2d_df_cal <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_cal(mrn, p1d, p2d)
}) %>%
set_names(STB %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
View(mean_p2d_df_cal)
all_daily_foodall
# the unique combinations of the foodnsc + unit
DTB %>%
mutate(foodall = str_glue('{Food_NSC}__{Unit}')) %>%
distinct(foodall) %>%
nrow()
STB <- read_csv('../data/152_combined_STB.csv')
#
all_daily_foodall <- DTB %>%
mutate(foodall = str_glue('{Food_NSC}__{Unit}')) %>%
group_by(mrn, fdrt, foodall) %>%
summarise(total_daily_foodall = sum(dehydrated_weight))
# the previous two days average for each stool sample
stb_pair <- STB %>%
select(mrn, sdrt) %>%
transmute(mrn = mrn,
p1d = sdrt-1,
p2d = sdrt-2)
mean_p2d_foodall <-  function(mrn_, p1d_, p2d_){
df = all_daily_foodall %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(foodall) %>%
summarise(ave_foodall = sum(total_daily_foodall)/2)
return(df)
}
mean_p2d_df_foodall <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_foodall(mrn, p1d, p2d)
}) %>%
set_names(STB %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
View(mean_p2d_df_foodall)
mean_p2d_df_foodall %>% write_csv('../data/154_average_p2d_intake_of_foodnsc_and_unit.csv')
library(tidyverse)
# get the p2d ave of the cal and 5 macro
DTB <- read_csv('../data/152_combined_DTB.csv')
View(DTB)
