legend.box.background = element_rect(fill='transparent') ,
aspect.ratio=1)
ggsave( '../data/162_umap_cal.png', dpi = 300, width = 2.5, height = 2.5,plot = OUT_caloric, bg = "transparent")
OUT_cal %>%
#arrange(desc(n)) %>%
mutate(transform_cal = sqrt(total_cal)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'transform_cal', alpha = 1,size = umap_pt_size , shape = 16,
xlab = '', ylab = '') +
paletteer::scale_color_paletteer_c("viridis::plasma") +
theme_classic()
summary(OUT$taxumap1)
OUT_cal %>%
#arrange(desc(n)) %>%
mutate(transform_cal = sqrt(total_cal)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'transform_cal', alpha = 1,size = umap_pt_size , shape = 16,
xlab = '', ylab = '') +
paletteer::scale_color_paletteer_c("viridis::plasma") +
theme_classic()
summary(OUT$taxumap1)
check <- OUT %>% filter(taxumap1 > 35)
View(check)
check <- OUT_cal %>% filter(taxumap1 > 35)
knitr::opts_chunk$set(echo = TRUE)
library(vegan)
library(vdbR)
connect_database()
STB <- read_csv('../data/152_combined_STB.csv')
STB
cts <- get_counts_subset(STB$sampleid)
cts %>% distinct(sampleid)
cts
keep_asv <- cts %>%
filter(count_relative > 0.0001) %>%
count(asv_key) %>%
filter(n > floor(nrow(STB) * 0.1)) %>%
pull(asv_key)
cts_fil <- cts %>%
filter(asv_key %in% keep_asv) %>%
select(sampleid, asv_key,count_relative ) %>%
spread(key = 'asv_key', value = 'count_relative', fill = 0) %>%
column_to_rownames('sampleid')
View(cts_fil)
dist_ <- vegan::vegdist(cts_fil, method = 'bray')
eigen <- cmdscale(dist_, eig = T)$eig
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
beta_df <- bc %>%
as.data.frame() %>%
rownames_to_column('sampleid')
View(beta_df)
View(cts_fil)
# the diet pattern using bray curtis distance
DTB <- read_csv('../data/152_combined_DTB.csv')
# the diet pattern using bray curtis distance
DTB <- read_csv('../data/152_combined_DTB.csv')
dailys <- DTB %>%
group_by(mrn, fdrt) %>%
summarise(d_protein = sum(Protein_g),
d_fat = sum(Fat_g),
d_carb = sum(Carbohydrates_g),
d_fiber = sum(Fibers_g),
d_sugar = sum(Sugars_g))
View(dailys)
?vegdist
data(varespec)
View(varespec)
View(dailys)
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
library(vegan)
library(tidyverse)
library(ggpubr)
dtb <- read_csv('../data/152_combined_DTB.csv') %>%
select(mrn, fdrt, ends_with('_g'))
View(dtb)
dtb <- read_csv('../data/152_combined_DTB.csv') %>%
select(mrn, fdrt, ends_with('_g')) %>%
gather('nutrient','gram', Protein_g:Sugars_g)
stb <- read_csv('../data/152_combined_STB.csv')
knitr::opts_chunk$set(echo = TRUE)
library(vegan)
library(tidyverse)
library(ggpubr)
dtb <- read_csv('../data/152_combined_DTB.csv') %>%
select(mrn, fdrt, ends_with('_g')) %>%
gather('nutrient','gram', Protein_g:Sugars_g)
stb <- read_csv('../data/152_combined_STB.csv')
pt_fdrt <- dtb %>%
distinct(mrn, fdrt)
stb_loop <- stb %>%
select(mrn, sdrt) %>%
transmute(mrn = mrn,
p1d = sdrt-1,
p2d = sdrt-2,
p3d = sdrt-3,
p4d = sdrt-4,
p5d = sdrt-5)
check_p5d_diet <-  function(mrn_, p1d_, p2d_, p3d_, p4d_, p5d_){
num = pt_fdrt %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_ ,p3d_, p4d_, p5d_ )) %>%
nrow()
return(num)
}
check_p5d_diet_df <- pmap(stb_loop, function(mrn, p1d, p2d, p3d, p4d, p5d){
check_p5d_diet(mrn, p1d, p2d, p3d, p4d, p5d)
}) %>%
set_names(stb %>% pull(sampleid)) %>%
bind_rows() %>%
gather('sampleid', 'pNd_num')
p5d_samples <- check_p5d_diet_df %>%
filter(pNd_num == 5) %>%
pull(sampleid)
stb_loop_sum <- stb %>%
filter(sampleid %in% p5d_samples) %>%
mutate(p1d = sdrt-1,
p2d = sdrt-2,
p3d = sdrt-3,
p4d = sdrt-4,
p5d = sdrt-5)
p1d <- apply(stb_loop_sum, 1, function(Row){
df = dtb %>%
filter(mrn == Row[['mrn']]) %>%
filter(fdrt %in% c(Row[['p1d']])) %>%
group_by(nutrient) %>%
summarise(ave_gram = sum(gram))
}) %>%
set_names(stb_loop_sum %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid') %>%
spread(key = 'sampleid', value = 'ave_gram', fill = 0)
p1d <- p1d[, colSums(p1d != 0) > 0]
p2d <- apply(stb_loop_sum, 1, function(Row){
df = dtb %>%
filter(mrn == Row[['mrn']]) %>%
filter(fdrt %in% c(Row[['p1d']], Row[['p2d']])) %>%
group_by(nutrient) %>%
summarise(ave_gram = sum(gram)/2)
}) %>%
set_names(stb_loop_sum %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid') %>%
spread(key = 'sampleid', value = 'ave_gram', fill = 0)
p2d <- p2d[, colSums(p2d != 0) > 0]
p3d <- apply(stb_loop_sum, 1, function(Row){
df = dtb %>%
filter(mrn == Row[['mrn']]) %>%
filter(fdrt %in% c(Row[['p1d']], Row[['p2d']], Row[['p3d']])) %>%
group_by(nutrient) %>%
summarise(ave_gram = sum(gram)/3)
}) %>%
set_names(stb_loop_sum %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid') %>%
spread(key = 'sampleid', value = 'ave_gram', fill = 0)
p3d <- p3d[, colSums(p3d != 0) > 0]
p4d <- apply(stb_loop_sum, 1, function(Row){
df = dtb %>%
filter(mrn == Row[['mrn']]) %>%
filter(fdrt %in% c(Row[['p1d']], Row[['p2d']], Row[['p3d']], Row[['p4d']])) %>%
group_by(nutrient) %>%
summarise(ave_gram = sum(gram)/4)
}) %>%
set_names(stb_loop_sum %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid') %>%
spread(key = 'sampleid', value = 'ave_gram', fill = 0)
p4d <- p4d[, colSums(p4d != 0) > 0]
p5d <- apply(stb_loop_sum, 1, function(Row){
df = dtb %>%
filter(mrn == Row[['mrn']]) %>%
filter(fdrt %in% c(Row[['p1d']], Row[['p2d']], Row[['p3d']], Row[['p4d']], Row[['p5d']])) %>%
group_by(nutrient) %>%
summarise(ave_gram = sum(gram)/5)
}) %>%
set_names(stb_loop_sum %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid') %>%
spread(key = 'sampleid', value = 'ave_gram', fill = 0)
View(pt_fdrt)
View(p1d)
p5d <- p5d[, colSums(p5d != 0) > 0]
# output the macronutrients cts table (need to be in a similar format to fit my previously written snakemake rules)
dcts <- list(p1d = p1d,
p2d = p2d,
p3d = p3d,
p4d = p4d,
p5d = p5d)
for (i in 1:length(dcts)){
dcts[[i]] %>%
write_tsv(str_glue('../data/finalized/paired/pNday/allstool_{names(dcts)[i]}_diet_macro_dehydrated_weight_per_pt.tsv'))
}
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database(config_file = '~/dbConfig.txt')
get_table_from_database('asv_annotation_blast_ag')
stb <- read_csv('../data/152_combined_STB.csv')
stb
cts <- get_counts_subset(stb$sampleid)
cts_genus <- cts %>%
inner_join(asv_annotation_blast_ag %>%  select(asv_key, genus), by  = 'asv_key') %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative))
cts_spread <- cts_genus %>%
spread('genus', 'relab', fill = 0)
cts_genus %>%
write_csv('../data/022_ALL173_stool_samples_genus_counts.csv')
p5d_samples
# the genus counts data would be :
cts_long <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(sampleid %in% p5d_samples)
# the genus counts data would be :
cts_long <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(sampleid %in% p5d_samples)
# since the samples in the diet counts are different so need to subset according to each
p1d_scts <- cts_long %>%
filter(sampleid %in% colnames(p1d)[2:ncol(p1d)]) %>%
spread('sampleid', 'relab', fill = 0)
p2d_scts <- cts_long %>%
filter(sampleid %in% colnames(p2d)[2:ncol(p2d)]) %>%
spread('sampleid', 'relab', fill = 0)
p3d_scts <- cts_long %>%
filter(sampleid %in% colnames(p3d)[2:ncol(p3d)]) %>%
spread('sampleid', 'relab', fill = 0)
p4d_scts <- cts_long %>%
filter(sampleid %in% colnames(p4d)[2:ncol(p4d)]) %>%
spread('sampleid', 'relab', fill = 0)
p5d_scts <- cts_long %>%
filter(sampleid %in% colnames(p5d)[2:ncol(p5d)]) %>%
spread('sampleid', 'relab', fill = 0)
scts <- list(
p1d_scts = p1d_scts,
p2d_scts = p2d_scts,
p3d_scts = p3d_scts,
p4d_scts = p4d_scts,
p5d_scts = p5d_scts
)
for (i in 1:length(scts)){
scts[[i]] %>%
write_tsv(str_glue('../data/finalized/paired/pNday/allstool_{names(scts)[i]}_stool_relab_species.tsv'))
}
# use 091 to produce the p1d...p5d macronutrients table
# use 022 to produce the p1d...p5d genus counts table
# use the snakefile to calculate the pcoa
# the below is the results from all of the patients
fns_both <- tibble(
sfolder = list.files('../data/finalized/paired/pNday/', pattern = 'allstool_p.d_scts_stool_relab_species_braycurtis_pcoa$', full.names = T),
dfolder = list.files('../data/finalized/paired/pNday/', pattern = 'allstool_p.d_diet_macro_dehydrated_weight_per_pt_bc_pcoa$', full.names = T)
) %>%
mutate(ID = str_replace(sfolder, '_scts_stool_relab_species_braycurtis_pcoa', ''),
ID = str_replace(ID, '../data/finalized/paired/pNday//allstool_','')) %>%
mutate(sfn = str_glue('{sfolder}/ordination.txt'),
dfn = str_glue('{dfolder}/ordination.txt'))
View(fns_both)
# use 091 to produce the p1d...p5d macronutrients table
# use 022 to produce the p1d...p5d genus counts table
# use the snakefile to calculate the pcoa
# the below is the results from all of the patients
fns_both <- tibble(
sfolder = list.files('../data/finalized/paired/pNday/', pattern = 'allstool_p.d_scts_stool_relab_species_braycurtis_pcoa$', full.names = T),
dfolder = list.files('../data/finalized/paired/pNday/', pattern = 'allstool_p.d_diet_macro_dehydrated_weight_per_pt_bc_pcoa$', full.names = T)
) %>%
mutate(ID = str_replace(sfolder, '_scts_stool_relab_species_braycurtis_pcoa', ''),
ID = str_replace(ID, '../data/finalized/paired/pNday//allstool_','')) %>%
mutate(sfn = str_glue('{sfolder}/ordination.txt'),
dfn = str_glue('{dfolder}/ordination.txt'))
# sum of squares
procrustes_Nday <- map2_dfc(fns_both$dfn, fns_both$sfn, function(dfn, sfn){
dpcoa = read_tsv(dfn, skip = 9, col_names = F)  %>%
filter(! X1 %in% c('Biplot','Site constraints')) %>%
column_to_rownames('X1') %>%
as.matrix()
spcoa = read_tsv(sfn, skip = 9, col_names = F)  %>%
filter(! X1 %in% c('Biplot','Site constraints')) %>%
column_to_rownames('X1') %>%
as.matrix()
procrustes_res = procrustes(X = dpcoa, Y = spcoa)
return( procrustes_res$ss)
}) %>%
gather(key = 'pNd', value = 'ss') %>%
mutate(pNd = fns_both$ID)
# convert it to a score so that the p2d is the highest
procrustes_Nday_score <- procrustes_Nday %>%
mutate(score = min(.$ss) - ss)
procrustes_Nday_score %>%
write_csv('../data/163_macro_procrustes_Nday_score.csv')
# use 091 to produce the p1d...p5d macronutrients table
# use 022 to produce the p1d...p5d genus counts table
# use the snakefile to calculate the pcoa
# the below is the results from all of the patients
fns_both <- tibble(
sfolder = list.files('../data/finalized/paired/pNday/', pattern = 'allstool_p.d_scts_stool_relab_species_braycurtis_pcoa$', full.names = T),
dfolder = list.files('../data/finalized/paired/pNday/', pattern = 'allstool_p.d_diet_macro_dehydrated_weight_per_pt_bc_pcoa$', full.names = T)
) %>%
mutate(ID = str_replace(sfolder, '_scts_stool_relab_species_braycurtis_pcoa', ''),
ID = str_replace(ID, '../data/finalized/paired/pNday//allstool_','')) %>%
mutate(sfn = str_glue('{sfolder}/ordination.txt'),
dfn = str_glue('{dfolder}/ordination.txt'))
# sum of squares
procrustes_Nday <- map2_dfc(fns_both$dfn, fns_both$sfn, function(dfn, sfn){
dpcoa = read_tsv(dfn, skip = 9, col_names = F)  %>%
filter(! X1 %in% c('Biplot','Site constraints')) %>%
column_to_rownames('X1') %>%
as.matrix()
spcoa = read_tsv(sfn, skip = 9, col_names = F)  %>%
filter(! X1 %in% c('Biplot','Site constraints')) %>%
column_to_rownames('X1') %>%
as.matrix()
procrustes_res = procrustes(X = dpcoa, Y = spcoa)
return( procrustes_res$ss)
}) %>%
gather(key = 'pNd', value = 'ss') %>%
mutate(pNd = fns_both$ID)
# convert it to a score so that the p2d is the highest
procrustes_Nday_score <- procrustes_Nday %>%
mutate(score = min(.$ss) - ss)
procrustes_Nday_score %>%
write_csv('../data/163_macro_procrustes_Nday_score.csv')
View(procrustes_Nday_score)
procrustes_Nday_score
f2a <- procrustes_Nday_score %>%
mutate(pNd = str_extract(pNd, '\\d'),
grp = 'Macronutrients') %>%
ggplot(aes(x = pNd, y = score, group = grp, color = grp)) +
geom_line(size = 0.3) +
geom_point(size = 1.3) +
labs(x = 'Number of previous days\nof dietary intake',y = 'Procrustes score') +
#scale_color_manual(values = c('black','gray60')) +
theme_classic()  +
theme(aspect.ratio=1,
legend.position = 'none',
axis.text=element_text(size=8),
legend.title  = element_blank(),
axis.title=element_text(size=8),
axis.text.x = element_text(angle=0, hjust=0.5))
f2a
f2a <- procrustes_Nday_score %>%
mutate(pNd = str_extract(pNd, '\\d'),
grp = 'Macronutrients') %>%
ggplot(aes(x = pNd, y = score, group = grp, color = grp)) +
geom_line(size = 0.3) +
geom_point(size = 1.3) +
labs(x = 'Number of previous days\nof dietary intake',y = 'Procrustes score') +
scale_color_manual(values = c('black')) +
theme_classic()  +
theme(aspect.ratio=1,
legend.position = 'none',
axis.text=element_text(size=8),
legend.title  = element_blank(),
axis.title=element_text(size=8),
axis.text.x = element_text(angle=0, hjust=0.5))
f2a
library(tidyverse)
library(ggpubr)
axis_text_size <- 10
axis_title_size <- 10
f2a <- procrustes_Nday_score %>%
mutate(pNd = str_extract(pNd, '\\d'),
grp = 'Macronutrients') %>%
ggplot(aes(x = pNd, y = score, group = grp, color = grp)) +
geom_line(size = 0.3) +
geom_point(size = 1.3) +
labs(x = 'Number of previous days\nof dietary intake',y = 'Procrustes score') +
scale_color_manual(values = c('black')) +
theme_classic()  +
theme(aspect.ratio=1,
legend.position = 'none',
axis.text=element_text(size=axis_text_size),
legend.title  = element_blank(),
axis.title=element_text(size=axis_text_size),
axis.text.x = element_text(angle=0, hjust=0.5))
f2a
knitr::opts_chunk$set(echo = TRUE)
STB <- read_csv('../data/152_combined_STB.csv')
# get the relab of the blautia and enterococcus of those
cts_genus2 <- read_csv('../data/150_b2_stool_samples_genus_counts.csv')
cts_genus1 <- read_csv('../data/cleaned_stool/022_ALL_stool_samples_genus_counts.csv')
zero_transform <- log10(0 + 2*10^-6)
genera2 <- bind_rows(cts_genus1, cts_genus2) %>%
filter(genus %in% c('Enterococcus','Blautia')) %>%
mutate(relablog = log10(relab + 2*10^-6)) %>%
select(sampleid, genus, relablog) %>%
spread('genus', 'relablog', fill = zero_transform) %>%
right_join(STB %>% select(sampleid, simpson_reciprocal, intensity)) %>%
mutate(Enterococcus = if_else(is.na(Enterococcus), zero_transform, Enterococcus),
Blautia = if_else(is.na(Blautia), zero_transform, Blautia))
STB <- read_csv('../data/152_combined_STB.csv')
# get the relab of the blautia and enterococcus of those
cts_genus2 <- read_csv('../data/150_b2_stool_samples_genus_counts.csv')
cts_genus1 <- read_csv('../data/cleaned_stool/022_ALL_stool_samples_genus_counts.csv')
zero_transform <- log10(0 + 2*10^-6)
genera2 <- bind_rows(cts_genus1, cts_genus2) %>%
filter(genus %in% c('Enterococcus','Blautia')) %>%
mutate(relablog = log10(relab + 2*10^-6)) %>%
select(sampleid, genus, relablog) %>%
spread('genus', 'relablog', fill = zero_transform) %>%
right_join(STB %>% select(sampleid, simpson_reciprocal, intensity)) %>%
mutate(Enterococcus = if_else(is.na(Enterococcus), zero_transform, Enterococcus),
Blautia = if_else(is.na(Blautia), zero_transform, Blautia))
STB <- read_csv('../data/152_combined_STB.csv')
# get the relab of the blautia and enterococcus of those
cts_genus2 <- read_csv('../data/150_b2_stool_samples_genus_counts.csv')
cts_genus1 <- read_csv('../data/cleaned_stool/022_ALL_stool_samples_genus_counts.csv')
zero_transform <- log10(0 + 2*10^-6)
genera2 <- bind_rows(cts_genus1, cts_genus2) %>%
filter(genus %in% c('Enterococcus','Blautia')) %>%
mutate(relablog = log10(relab + 2*10^-6)) %>%
select(sampleid, genus, relablog) %>%
spread('genus', 'relablog', fill = zero_transform) %>%
right_join(STB %>% select(sampleid, simpson_reciprocal, intensity)) %>%
mutate(Enterococcus = if_else(is.na(Enterococcus), zero_transform, Enterococcus),
Blautia = if_else(is.na(Blautia), zero_transform, Blautia))
# get the p2d ave of the cal and 5 macro
DTB <- read_csv('../data/152_combined_DTB.csv')
# the daily caloric intake :
all_daily_pt <- DTB %>%
group_by(mrn, fdrt) %>%
summarise(total_daily = sum(Calories_kcal))
# the previous two days average for each stool sample
stb_pair <- STB %>%
select(mrn, sdrt) %>%
transmute(mrn = mrn,
p1d = sdrt-1,
p2d = sdrt-2)
mean_p2d_cal <-  function(mrn_, p1d_, p2d_){
df = all_daily_pt %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_cal = sum(total_daily)/2)
return(df)
}
mean_p2d_df_cal <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_cal(mrn, p1d, p2d)
}) %>%
set_names(STB %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
nutrients <- DTB %>%
select(mrn, fdrt, Protein_g:Sugars_g) %>%
gather('type','gram', Protein_g:Sugars_g) %>%
group_by(mrn, fdrt, type) %>%
summarise(total_daily = sum(gram)) %>%
split(.$type)
mean_p2d_fiber <-  function(mrn_, p1d_, p2d_){
df = nutrients$Fibers_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_fiber = sum(total_daily)/2)
return(df)
}
mean_p2d_carb <-  function(mrn_, p1d_, p2d_){
df = nutrients$Carbohydrates_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_carb = sum(total_daily)/2)
return(df)
}
mean_p2d_fat <-  function(mrn_, p1d_, p2d_){
df = nutrients$Fat_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_fat = sum(total_daily)/2)
return(df)
}
mean_p2d_Protein <-  function(mrn_, p1d_, p2d_){
df = nutrients$Protein_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_Protein = sum(total_daily)/2)
return(df)
}
mean_p2d_Sugars <-  function(mrn_, p1d_, p2d_){
df = nutrients$Sugars_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_Sugars = sum(total_daily)/2)
return(df)
}
mean_p2d_fiber <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_fiber(mrn, p1d, p2d)
}) %>%
set_names(STB %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_fat <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_fat(mrn, p1d, p2d)
}) %>%
set_names(STB %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_Protein <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_Protein(mrn, p1d, p2d)
}) %>%
set_names(STB %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_Sugars <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_Sugars(mrn, p1d, p2d)
}) %>%
set_names(STB %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_carb <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_carb(mrn, p1d, p2d)
}) %>%
set_names(STB %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
p2d_diet <- mean_p2d_df_cal %>%
full_join(mean_p2d_fiber, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_fat, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_Protein, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_Sugars, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_carb, by = c("sampleid", "mrn"))
