left_join(meta %>% select(mrn, sampleid, sdrt)) %>%
distinct(mrn) %>%
pull(mrn)
# visualize all the samples for these patients
mrn_samp <- meta %>%
filter(mrn %in% mrns)
mrn_samp %>%
ggdotchart(x = 'sdrt', y = var,  facet.by = 'mrn',  add = "segments",
sorting = 'none', font.label = list(size = 5, face = "plain"),
title = str_glue('{var}')) +
theme(axis.text.x = element_text(size=5, angle=90, hjust=1)) +
geom_hline(yintercept = 0.1, linetype = 'dashed', color = 'red') +
ggsave(str_glue('../figs/family_2_dom_{var}.jpg'), width = 15, height = 7)
})
# to see the overlap between these two groups of patients
target_fam <- c('Enterococcaceae','Enterobacteriaceae')
fam_patients <- target_fam %>%
map(function(var){
mrns <- fam %>%
filter(family == var) %>%
filter(relab > 0.1) %>%
left_join(meta %>% select(mrn, sampleid, sdrt)) %>%
distinct(mrn) %>%
pull(mrn)
})
length(intersect(fam_patients[[1]], fam_patients[[2]]))
# the 2 patients that were not in the overlap
setdiff(fam_patients[[2]], fam_patients[[1]]) # these two can be ignored doesn't reach the requirement
# how many patients I selected
length(fam_patients[[1]])
# the current stool sample table
samps <- meta %>%
filter(mrn %in% fam_patients[[1]])
stb_ <- read_csv('../data/cleaned_stool/selected_stool_samples_type_abx.csv') %>%
filter(sampleid %in% samps$sampleid)
# to get whether those stool samples have at least one diet data in the previous three days
qual_stool_df <- stb_ %>%
mutate(p1d = sdrt-1,
p2d = sdrt-2,
p3d = sdrt-3) %>%
select(mrn, p1d, p2d, p3d)
# use the no fake diet counts table and get the stool samples that should be removed -- not even one day
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
no_diet_d_to_be_rm_stool_s <- function(mrn_, p1d_, p2d_, p3d_){
df = dtb %>%
filter(mrn == mrn_) %>%
filter(fdrt == p1d_ | fdrt == p2d_  | fdrt == p3d_) %>%
nrow()
return(df)
}
qual_stool<- pmap(qual_stool_df, function(mrn, p1d, p2d, p3d){
no_diet_d_to_be_rm_stool_s(mrn, p1d, p2d, p3d)
}) %>%
set_names(stb_ %>% pull(sampleid)) %>%
bind_rows() %>%
gather(key = 'sampleid', value = 'num_d_records') %>%
arrange(num_d_records)
# to see the overlap between these two groups of patients
target_fam <- c('Enterococcaceae','Enterobacteriaceae')
fam_patients <- target_fam %>%
map(function(var){
mrns <- fam %>%
filter(family == var) %>%
filter(relab > 0.1) %>%
left_join(meta %>% select(mrn, sampleid, sdrt)) %>%
distinct(mrn) %>%
pull(mrn)
})
length(intersect(fam_patients[[1]], fam_patients[[2]]))
# the 2 patients that were not in the overlap
setdiff(fam_patients[[2]], fam_patients[[1]]) # these two can be ignored doesn't reach the requirement
# how many patients I selected
length(fam_patients[[1]])
View(fam)
length(fam_patients[[1]])
length(fam_patients[[2]])
length(fam_patients[[2]])
length(fam_patients[[1]])
length(fam_patients[[2]])
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database('~/dbConfig.txt')
list_table_from_database('qpcr')
get_table_from_database('qpcr_16s_ag')
get_table_from_database('antibiotics_antibacterial_multicenter_ag')
library(tidyverse)
library(ggpubr)
library(cowplot)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
axis_text_size <- 11
axis_title_size <- 11
plot_ratio <-1.5/2
qpcr <- qpcr_16s_ag %>%
filter(!str_detect(sample_id_unique, 'heat|ethanol')) %>%
filter(!is.na(copies_16s_per_g))
# all the patients that have a entercoccus growth rate
combined <- read_csv('../data/growth/069_irep_combined_res.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
target <- combined %>%
filter(str_detect(best_species, 'Enterococcus')) %>%
distinct(mrn) %>%
pull(mrn)
entero <- combined %>%
filter(str_detect(best_species, 'Enterococcus')) %>%
group_by(sampleid, mrn) %>%
summarise(ave_irpe = mean(aveirep)) %>%
inner_join(meta %>%
select(sampleid, sdrt))
# all of these patients stool samples we have
get_table_from_database('samples_castori_ag')
get_table_from_database('asv_annotation_blast_ag')
sam <- samples_castori_ag %>%
filter(mrn %in% target) %>%
distinct(sampleid) %>%
pull(sampleid)
samps <- samples_castori_ag %>%
filter(mrn %in% target) %>%
distinct(sampleid, mrn)
# get the entercoccus relab of these samples
cts <- get_counts_subset(sam)
ptb <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
cts_ <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
filter(genus == 'Enterococcus')  %>%
inner_join(qpcr %>%
select(sampleid = sample_id, copies_16s_per_g)) %>%
mutate(entero_copy = copies_16s_per_g*relab) %>%
inner_join(samples_castori_ag %>%
select(sampleid, datecollection)) %>%
inner_join(samps) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(sdrt = datecollection - hct) %>%
filter(sdrt < 54)
# entero %>%
#   ggplot(aes(x = sdrt, y = ave_irpe )) +
#   geom_point() +
#   geom_point(data = cts_, aes(x = sdrt, y = entero_copy, col = 'red')) +
#   facet_wrap(~mrn)
# the patients that have both the irep and qpcr results
both <- intersect(cts_$mrn, entero$mrn)
absl <- both %>%
set_names(both) %>%
imap(function(.x, .y){
# set the min and max in the x axis to be the min and max of the global values
xmax = max(max(entero %>%
filter(mrn == .x) %>% pull(sdrt)), max(cts_ %>%
filter(mrn == .x) %>% pull(sdrt))) + 2
xmin = min(min(entero %>%
filter(mrn == .x) %>% pull(sdrt)), min(cts_ %>%
filter(mrn == .x) %>% pull(sdrt))) -2
irep = entero %>%
filter(mrn == .x) %>%
ggplot(aes(x = sdrt, y = ave_irpe )) +
geom_point() +
labs(title = str_glue('{}')) +
xlim(xmin, xmax) +
labs(x = '',
y = 'average irep values')
copies = cts_ %>%
filter(mrn == .x) %>%
ggplot(aes(x = sdrt, y = entero_copy )) +
geom_point() +
# scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
#          labels = scales::trans_format("log10", scales::math_format(10^.x))) +
xlim(xmin, xmax) +
labs(x = 'day relative to transplant',
y = 'Enterococcus copy\nnumbers')
res = cowplot::plot_grid(irep, copies, axis = 'tblr', align = 'hv', ncol = 1)
#ggsave(str_glue('../data/{.y}.pdf'), width = 5, height = 4)
})
#
# seq(1, length(absl)) %>%
#   set_names(seq(1, length(absl))) %>%
#   imap(~ ggsave(str_glue('../data/Patient{.y}.pdf'), width = 5, height = 4, plot = absl[[.x]]))
# customize patient 11
# use the global highest irep value for the highest in the y axis.
irep_highest <- max(entero$ave_irpe) + 0.05
irep_q25 <- quantile(x = entero$ave_irpe, 0.25)
irep_q50 <- quantile(x = entero$ave_irpe, 0.5)
irep_q75 <- quantile(x = entero$ave_irpe, 0.75)
p11 <- names(absl)[11]
xmax = 15
xmin = -5
quantile_annot_df <- tibble(
quant = c('25%','50%','75%'),
height = c(irep_q25, irep_q50, irep_q75)
)
# a plot to show the fruit intake over time for this patient
# by day
fruit <- dtb %>%
filter(mrn == p11 & fdrt %in% -4:15) %>%
mutate(Food_code = as.character(Food_code) ) %>%
filter(str_detect(Food_code, '^6')) %>%
group_by(fdrt) %>%
summarise(fruitsum = sum(dehydrated_weight)) %>%
full_join(tibble(
fdrt = seq(-2, 12, 1)
)) %>%
mutate(fruitsum = if_else(is.na(fruitsum), 0, fruitsum))
# a boxplot for all the daily fruit consumption
all_fruit <- dtb %>%
mutate(Food_code = as.character(Food_code) ) %>%
filter(str_detect(Food_code, '^6')) %>%
group_by(mrn, fdrt) %>%
summarise(fruitdaily = sum(dehydrated_weight))
all_fruit %>% write_csv('../data/075_all_daily_fruit.csv')
f_q25 <- quantile(x = all_fruit$fruitdaily, 0.25)
f_q50 <- quantile(x = all_fruit$fruitdaily, 0.5)
f_q75 <- quantile(x = all_fruit$fruitdaily, 0.75)
highest_daily_fruit_intake <- ceiling( max(all_fruit$fruitdaily))
lowest_daily_fruit_intake <- floor( min(all_fruit$fruitdaily))
# the sweets intake for this patient
sweets <- dtb %>%
filter(mrn == p11 & fdrt %in% -4:15) %>%
mutate(Food_code = as.character(Food_code) ) %>%
filter(str_detect(Food_code, '^9')) %>%
group_by(fdrt) %>%
summarise(sweetsum = sum(dehydrated_weight)) %>%
full_join(tibble(
fdrt = seq(-2, 12, 1)
)) %>%
mutate(sweetsum = if_else(is.na(sweetsum), 0, sweetsum))
# a boxplot for all the daily sweets consumption
all_sweet <- dtb %>%
mutate(Food_code = as.character(Food_code) ) %>%
filter(str_detect(Food_code, '^9')) %>%
group_by(mrn, fdrt) %>%
summarise(sweetdaily = sum(dehydrated_weight))
all_sweet %>% write_csv('../data/075_all_daily_sweet.csv')
s_q25 <- quantile(x = all_sweet$sweetdaily, 0.25)
s_q50 <- quantile(x = all_sweet$sweetdaily, 0.5)
s_q75 <- quantile(x = all_sweet$sweetdaily, 0.75)
highest_daily_sweet_intake <- ceiling( max(all_sweet$sweetdaily))
lowest_daily_sweet_intake <- floor( min(all_sweet$sweetdaily))
# check this patient's abx usage
ptb <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
# any vanco?
p11_abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(patient_id == p11 ) %>%
rename(mrn = patient_id) %>%
mutate(mrn = as.numeric(mrn)) %>%
left_join(ptb %>%
select(mrn, hct)) %>%
mutate(startdrt = start - hct,
stopdrt = stop - hct) %>%
# only select the days relevant
filter(startdrt %in% -5:-2) %>%
mutate(drugfull = str_glue('{drug_name_clean} ({route_simple})')) %>%
arrange(startdrt, stopdrt) %>%
mutate(yval = seq(1, nrow(.))) %>%
mutate(startdrt = as.numeric(startdrt) ) %>%
mutate(startdrt = if_else(startdrt == -5, -5.1, startdrt))
xmin < -5.1
# a box plot to show all the entero irep distribution
entero_box <- entero %>%
ggboxplot(y = 'ave_irpe', color = 'black', outlier.shape = 20,) +
theme_classic() +
ylim(1, irep_highest) +
theme(aspect.ratio=4,
axis.ticks.x=element_blank(),
axis.title.x = element_blank(),
axis.ticks.y=element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
line = element_blank(),
axis.text.x = element_blank() )
all_sweet_box <-  all_sweet %>%
ggboxplot(y = 'sweetdaily', outlier.shape = 20, color = '#db2589') +
theme_classic() +
coord_cartesian(ylim = c(0, max(sweets$sweetsum)))+
theme(aspect.ratio=4,
axis.ticks.x=element_blank(),
axis.title.x = element_blank(),
axis.ticks.y=element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
line = element_blank(),
axis.text.x = element_blank() )
all_fruit_box <- all_fruit %>%
ggboxplot(y = 'fruitdaily', outlier.shape = 20, color = '#7D3C98') +
theme_classic() +
coord_cartesian(ylim = c(0, max(fruit$fruitsum)))+
theme(aspect.ratio=4,
axis.ticks.x=element_blank(),
axis.title.x = element_blank(),
axis.ticks.y=element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
line = element_blank(),
axis.text.x = element_blank() )
abx <- ggplot(p11_abx, aes(x = startdrt, y = yval, xend = stopdrt, yend = yval, label = drugfull )) +
geom_segment(
size = 2, lineend = 'square', alpha = 0.5
) +
geom_text(hjust = 'outside', nudge_y = -0.1, nudge_x = 5, size = 1.3) +
coord_cartesian(xlim=c(xmin, xmax)) +
labs(x = '',
y = '',
title = 'Antibiotics') +
theme_classic() +
theme(aspect.ratio=plot_ratio,
axis.ticks.y=element_blank(),
axis.text.y=element_blank(),
line = element_blank(),
axis.text=element_blank(),
axis.title=element_blank(),
plot.title = element_blank(),
panel.grid.major.x = element_blank())
sweets_time <- sweets %>%
ggplot(aes(x = fdrt, y = sweetsum )) +
annotate('rect', xmin = xmin, xmax = xmax, ymin = quantile(x = all_sweet$sweetdaily, 0.25), ymax = quantile(x = all_sweet$sweetdaily, 0.75), fill='gray',  alpha=0.3) +
geom_point(col = '#db2589') +
geom_line(aes(x = fdrt, y = sweetsum), linetype = 'solid', size = 0.5, col = '#db2589') +
xlim(xmin, xmax) +
labs(x = '',
y = 'Sweets intake',
title = '') +
theme_classic() +
ylim(0, max(sweets$sweetsum))+
theme(aspect.ratio=plot_ratio,
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
plot.margin = margin(l=-0.8,unit="cm"),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(colour = "grey85"))
fruit_time <- fruit %>%
ggplot(aes(x = fdrt, y = fruitsum )) +
annotate('rect', xmin = xmin, xmax = xmax, ymin = quantile(x = all_fruit$fruitdaily, 0.25), ymax = quantile(x = all_fruit$fruitdaily, 0.75), fill='gray',  alpha=0.3) +
geom_point( col = '#7D3C98') +
geom_line(aes(x = fdrt, y = fruitsum), linetype = 'solid', size = 0.5, col = '#7D3C98') +
xlim(xmin, xmax) +
labs(x = '',
y = 'Fruits intake',
title = '') +
theme_classic() +
ylim(0, max(fruit$fruitsum))+
theme(aspect.ratio=plot_ratio,
plot.margin = margin(l=-0.8,unit="cm"),
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(colour = "grey85"))
irep = entero %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11) %>%
ggplot(aes(x = sdrt, y = ave_irpe )) +
annotate('rect', xmin = xmin, xmax = xmax, ymin = irep_q25, ymax = irep_q75, fill='gray',  alpha=0.3) +
geom_point() +
labs(title = str_glue('{}')) +
xlim(xmin, xmax) +
ylim(1, irep_highest) +
labs(x = '',
y = 'Enterococcus\ngrowth rate',
title = '')+
theme_classic()+
theme(aspect.ratio=plot_ratio,
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(color = "grey85"))
copies = cts_ %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11) %>%
mutate(entero_copy = entero_copy/10e8) %>%
ggplot(aes(x = sdrt, y = entero_copy )) +
geom_point() +
geom_line(aes(x = sdrt, y = entero_copy), linetype = 'solid', size = 0.5, col = 'black') +
xlim(xmin, xmax) +
labs(x = 'HCT day',
y = 'Enterococcus\ncopies X 108/g',
title = '') +
theme_classic() +
theme(aspect.ratio=plot_ratio,
plot.margin = margin(l=-0.8,unit="cm"),
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
panel.grid.major.x = element_line(colour = "grey85"))
library(patchwork)
p_f3c <- abx + plot_spacer() + sweets_time + all_sweet_box +  fruit_time + all_fruit_box + irep + entero_box +  copies + plot_spacer() +
plot_layout(widths = c(1, 0.5))
ggsave('../figs/paper/075_irep_p11_vertical.pdf', width = 90,
height = 200, units = 'mm', dpi = 400, plot = p_f3c)
View(irep)
View(entero)
irep = entero %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11)
View(irep)
copies = cts_ %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11)
View(copies)
2.711074e+08/3.728435e+07
copies = cts_ %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11) %>%
mutate(entero_copy = entero_copy/10e8)
copies = cts_ %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11)
2.711074e+08
copies = cts_ %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11) %>%
mutate(entero_copy = entero_copy/10e8)
2.711074e-01
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
library(tidyverse)
pt_line_size <- 0.2
alpha_val <- 1
point_size <- 0.5
diet_line_color <- '#E41A1C'
axis_text_size <- 5
axis_title_size <- 8
stool_line_color <- 'blue'
faith_line_color <- 'black'
axis_line_thickness <- 0.2
# the three datasets split to each patient
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
stool <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')%>%
split(.$mrn)
# scale the faith pd and the day cal by dividing by 1000 and then revert this to the original scale by the axis representation
day_calori <- dtb %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal))%>%
split(.$mrn)
faith <- read_tsv('../data/cleaned_diet_data/FINAL_97_faith_pd/alpha-diversity.tsv') %>%
separate(...1, into = c('mrn', 'fdrt'), sep = 'd', convert = T)  %>%
mutate(mrn = as.numeric(str_replace(mrn, 'P',''))) %>%
split(.$mrn)
# keep the patients that have stool data
mrns <- names(meta)
# the range of the value
# use the same y axis scale
range(read_tsv('../data/cleaned_diet_data/FINAL_97_faith_pd/alpha-diversity.tsv')$faith_pd)
range(stool$simpson_reciprocal)
# to put the stool data in the same dimension as the diet data use a scaling factor to bring them to same level when plotting the y but then show on the  y axis scale that they are different
scale_factor <- 50
every_pt_list <-  mrns %>%
set_names(mrns) %>%
map(function(.x) {
ggplot()  +
geom_line(data = day_calori[[.x]], aes(x = fdrt, y = daycal), linetype = 'solid', size = pt_line_size, col = diet_line_color) +
# the diet faith
geom_line(data = faith[[.x]], aes(x = fdrt, y = faith_pd), linetype = 'solid', size = pt_line_size, col = faith_line_color) +
# the stool data
geom_line(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), linetype = 'solid', size = pt_line_size, col = stool_line_color) +
theme_pubr() +
scale_y_continuous(name = "Daily calories, Faith div",
limits = c(0, 2400),
sec.axis = sec_axis(~./scale_factor, name = expression(Fecal~alpha~diversity))) +
labs(x = 'Transplant day', y = '') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
axis.title.y = element_text(color = diet_line_color),
axis.line = element_line(colour = 'black', size = axis_line_thickness),
axis.title.y.right = element_text(color = stool_line_color),
axis.ticks = element_line(colour = "black", size = axis_line_thickness),
aspect.ratio=1/1.5)
})
# to put the stool data in the same dimension as the diet data use a scaling factor to bring them to same level when plotting the y but then show on the  y axis scale that they are different
whole_list <-  mrns %>%
set_names(mrns) %>%
map(function(.x) {
ggplot()  +
geom_line(data = day_calori[[.x]], aes(x = fdrt, y = daycal), linetype = 'solid', size = pt_line_size, col = diet_line_color) +
# the diet faith
geom_line(data = faith[[.x]], aes(x = fdrt, y = faith_pd), linetype = 'solid', size = pt_line_size, col = faith_line_color) +
# the stool data
geom_line(data = meta[[.x]], aes(x = sdrt, y = simpson_reciprocal*scale_factor), linetype = 'solid', size = pt_line_size, col = stool_line_color) +
theme_pubr() +
scale_y_continuous(name = "", limits = c(0, 2400),
sec.axis = sec_axis(~./scale_factor)) +
labs(x = 'Transplant day', y = '') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=5),
plot.title = element_text(size=axis_title_size),
axis.title.y = element_text(color = diet_line_color),
axis.line = element_line(colour = 'black', size = axis_line_thickness),
axis.ticks = element_line(colour = "black", size = axis_line_thickness),
axis.title.x = element_blank(),
axis.text.y = element_blank(),
axis.title.y.right = element_text(color = stool_line_color),
aspect.ratio=1/1.5)
})
# arrange the above into a facet-wrap
library(gridExtra)
n <- length(whole_list)
nCol <- 8
all <- do.call("grid.arrange", c(whole_list, ncol=nCol))
ggsave('../figs/paper/085_all_patients_timecourse.pdf',
width = 8,
height = 9,
plot = all)
ggsave('../figs/paper/085_all_patients_timecourse.jpg',
width = 8,
height = 9,
plot = all)
