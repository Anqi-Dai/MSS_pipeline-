example_pt_line_size <- 0.3
stool_alpha <- meta %>%
ggscatter(x = 'sdrt', y = 'simpson_reciprocal', alpha = alpha_val, size = point_size,
xlab = 'Day relative to HCT', shape = 'triangle',
ylab = 'Microbiome \u03b1 diversity',
title = 'Microbiome \u03b1 diversity',
add = "loess", conf.int = TRUE,
add.params = list(color = 'darkgoldenrod2', fill = "darkblue", size = 1)) +
geom_point(data = pick_stool, aes(x = sdrt, y = simpson_reciprocal), col = 'darkgoldenrod2', size = example_pt_line_size, shape = 'triangle') +
geom_line(data = pick_stool, aes(x = sdrt, y = simpson_reciprocal), linetype = 'solid', size = example_pt_line_size, col = 'darkgoldenrod2') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
aspect.ratio=1)
stool_alpha
day_calori <- dtb %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal))
pick_cal <- day_calori %>%
filter(mrn == pick$mrn[1])
day_cal <- day_calori %>%
ggscatter(x = 'fdrt', y = 'daycal', alpha = alpha_val, size = point_size,
xlab = 'Day relative to HCT',
ylab = 'Daily caloric intake',
title = 'Daily caloric intake',
color = scatter_col,
add = "loess", conf.int = TRUE,
add.params = list(color = loess_line_col, fill = "darkblue", size = 1)) +
geom_point(data = pick_cal, aes(x = fdrt, y = daycal), col = loess_line_col, size = example_pt_line_size) +
geom_line(data = pick_cal, aes(x = fdrt, y = daycal), linetype = 'solid', size = example_pt_line_size, col = loess_line_col) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
aspect.ratio=1)
day_cal
# this faith pd is recently calculated in 2021-07
faith <- read_tsv('../data/cleaned_diet_data/FINAL_97_faith_pd/alpha-diversity.tsv') %>%
separate(...1, into = c('mrn', 'fdrt'), sep = 'd', convert = T)  %>%
mutate(mrn = as.numeric(str_replace(mrn, 'P','')))
pick_faith <- faith %>%
filter(mrn == pick$mrn[1])
diet_alpha <- faith %>%
ggscatter('fdrt', 'faith_pd',
alpha = alpha_val,size = point_size,
color = scatter_col,
ylab = "Diet \u03b1 diversity",
xlab = 'Day relative to HCT',
title = 'Diet \u03b1 diversity',
add = "loess", conf.int = TRUE,
add.params = list(color = loess_line_col, fill = "darkblue", size = 1)) +
geom_point(data = pick_faith, aes(x = fdrt, y = faith_pd), col = loess_line_col, size = example_pt_line_size) +
geom_line(data = pick_faith, aes(x = fdrt, y = faith_pd), linetype = 'solid', size = example_pt_line_size, col = loess_line_col) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
plot.title = element_text(size=axis_title_size),
#plot.title = element_text(size=11, hjust = 0.5,  face = 'bold')
) +
theme(aspect.ratio=1)
diet_alpha
bot <- plot_grid(day_cal, diet_alpha, stool_alpha,
nrow = 1,
align = 'hv',
#rel_widths =  c(1,1),
#rel_heights = c(1,1),
labels = c('C','D','E'),
axis = 'tblr')
bot
ggsave('../figs/paper/bot_fig1.tiff',
width = 160,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, device = 'tiff')
# import the tree from pdf to a ggplot kind of object
p <- grImport2::readPicture( "../figs/paper/080_food_tree_ring.svg" )
dcoords <- read_csv('../softwares/phylo-umap/taxumap/results/embedding_for_angel.csv')
link <- read_csv('../data/cleaned_diet_data/deidentify_dsample_map.csv')
coord <- dcoords %>%
inner_join(link) %>%
select(-fid, -pt)
fcts_fg <- read_csv('../data/cleaned_diet_data/summarize_food_groups_pt_daily.csv')
fcts_fg_dom <- fcts_fg %>%
group_by(mrn, fdrt) %>%
arrange(-grp_frac, .by_group = T) %>%
slice(1) %>%
ungroup() %>%
transmute(fid = str_glue('P{mrn}d{fdrt}'),
fg1_dom = fg1_name) %>%
inner_join(link %>% select(fid, index_column))
df <- coord %>%
inner_join(fcts_fg_dom) %>%
left_join(fpalette %>% select(fg1_dom = fg1_name, color)) %>%
add_count(fg1_dom)
color_key <- df %>%
distinct(fg1_dom, color) %>%
mutate(fg1_dom = factor(fg1_dom)) %>%
arrange(fg1_dom) %>%
deframe()
fig1_umap <- df %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap-LLLL-1', y = 'taxumap-LLLL-2', color = 'fg1_dom', alpha = alpha_val,size = point_size , xlab = 'UMAP1', ylab = 'UMAP2') +
scale_color_manual(values = color_key) +
theme_classic() +
theme(legend.position = "none",
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
fig1_umap
dcoords <- read_csv('../softwares/phylo-umap/taxumap/results/embedding_for_angel.csv')
link <- read_csv('../data/cleaned_diet_data/deidentify_dsample_map.csv')
coord <- dcoords %>%
inner_join(link) %>%
select(-fid, -pt)
fcts_fg <- read_csv('../data/cleaned_diet_data/summarize_food_groups_pt_daily.csv')
fcts_fg_dom <- fcts_fg %>%
group_by(mrn, fdrt) %>%
arrange(-grp_frac, .by_group = T) %>%
slice(1) %>%
ungroup() %>%
transmute(fid = str_glue('P{mrn}d{fdrt}'),
fg1_dom = fg1_name) %>%
inner_join(link %>% select(fid, index_column))
df <- coord %>%
inner_join(fcts_fg_dom) %>%
left_join(fpalette %>% select(fg1_dom = fg1_name, color)) %>%
add_count(fg1_dom)
color_key <- df %>%
distinct(fg1_dom, color) %>%
mutate(fg1_dom = factor(fg1_dom)) %>%
arrange(fg1_dom) %>%
deframe()
fig1_umap <- df %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap-LLLL-1', y = 'taxumap-LLLL-2', color = 'fg1_dom', alpha = alpha_val,size = point_size , xlab = 'UMAP1', ylab = 'UMAP2') +
scale_color_manual(values = color_key) +
theme_classic() +
theme(legend.position = "none",
axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
fig1_umap
ggsave('../figs/paper/072_fig1_umap.tiff',
width = 50,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, device = 'tiff', plot = fig1_umap)
ggsave('../figs/paper/072_fig1_umap.tiff',
width = 52,
height = 52,
#height = 60,
units = c("mm"),
dpi = 400, device = 'tiff', plot = fig1_umap)
ggsave('../figs/paper/072_fig1_umap.eps',
width = 52,
height = 52,
#height = 60,
units = c("mm"),
dpi = 400, device = 'eps', plot = fig1_umap)
ggsave('../figs/paper/072_fig1_umap.pdf',
width = 52,
height = 52,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = fig1_umap)
ggsave('../figs/paper/072_bot_fig1.pdf',
width = 160,
height = 52,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = bot)
ggsave('../figs/paper/072_bot_fig1.pdf',
width = 165,
height = 52,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = bot)
ggsave('../figs/paper/072_bot_fig1.pdf',
width = 180,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = bot)
ggsave('../figs/paper/072_bot_fig1.tiff',
width = 180,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400, device = 'tiff', plot = bot)
knitr::opts_chunk$set(echo = TRUE)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
View(key)
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
View(nodes)
View(dtb)
dtb
# wanna create a figure legend with the full food group names and a color palette
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1))
# wanna create a figure legend with the full food group names and a color palette
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1)) %>%
group_by(fgrp1) %>%
summarise(total = sum(dehydrated_weight))
# wanna create a figure legend with the full food group names and a color palette
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1)) %>%
group_by(fgrp1) %>%
summarise(total = sum(dehydrated_weight)) %>%
full_join(nodes)
# wanna create a figure legend with the full food group names and a color palette
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1)) %>%
group_by(fgrp1) %>%
summarise(total = sum(dehydrated_weight)) %>%
full_join(nodes) %>%
full_join(key)
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1)) %>%
group_by(fgrp1) %>%
summarise(total = sum(dehydrated_weight)) %>%
full_join(nodes) %>%
full_join(key)
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1)) %>%
group_by(fgrp1) %>%
summarise(total = sum(dehydrated_weight)) %>%
full_join(nodes) %>%
full_join(key) %>%
ggbarplot(x = 'fdesc', y = 'total')
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1)) %>%
group_by(fgrp1) %>%
summarise(total = sum(dehydrated_weight)) %>%
full_join(nodes) %>%
full_join(key)
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1)) %>%
group_by(fgrp1) %>%
summarise(total = sum(dehydrated_weight)) %>%
full_join(nodes) %>%
full_join(key) %>%
ggbarplot(x = 'fdesc', y = 'total',
color = 'fdesc', fil = 'fdesc')
key
palette_fg <- nodes %>%
full_join(key)
palette_fg
# wanna create a figure legend with the full food group names and a color palette
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
palette_fg <- nodes %>%
full_join(key)
palette_fg
palette_fg <- nodes %>%
full_join(key)
palette_fg
palette_fg <- nodes %>%
full_join(key) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&'))
palette_fg
palette_fg <- nodes %>%
full_join(key) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&'))
palette_fg
fg_colors <- palette_fg %>%
select(fdesc, color) %>%
deframe()
fg_colors <- palette_fg %>%
select(fdesc, color) %>%
deframe()
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1)) %>%
group_by(fgrp1) %>%
summarise(total = sum(dehydrated_weight)) %>%
full_join(palette_fg) %>%
ggbarplot(x = 'fdesc', y = 'total',
color = 'fdesc', fil = 'fdesc' ) +
scale_color_manual(values = fg_colors)
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1)) %>%
group_by(fgrp1) %>%
summarise(total = sum(dehydrated_weight)) %>%
full_join(palette_fg) %>%
ggbarplot(x = 'fdesc', y = 'total',
color = 'fdesc', fil = 'fdesc' ) +
scale_color_manual(values = fg_colors)  +
scale_fill_manual(values = fg_colors)
palette_fg <- nodes %>%
full_join(key) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
#mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&'))
palette_fg
fg_colors <- palette_fg %>%
select(fdesc, color) %>%
deframe()
dtb %>%
mutate(fgrp1 = str_sub(Food_code, 1 ,1)) %>%
group_by(fgrp1) %>%
summarise(total = sum(dehydrated_weight)) %>%
full_join(palette_fg) %>%
ggbarplot(x = 'fdesc', y = 'total',
color = 'fdesc', fil = 'fdesc' ) +
scale_color_manual(values = fg_colors)  +
scale_fill_manual(values = fg_colors)
ggsave('../fig/paper/072_fg_color_palette.pdf', dpi = 400)
ggsave('../figs/paper/072_fg_color_palette.pdf', dpi = 400)
ggsave('../figs/paper/072_fg_color_palette.pdf', dpi = 400, width = 12)
ggsave('../figs/paper/072_fg_color_palette.pdf', dpi = 400, width = 20)
ggsave('../figs/paper/072_fg_color_palette.pdf', dpi = 400, width = 15)
# the macronutrients scatter plot
m_all <- dtb %>%
select(mrn, fdrt,Protein_g:Sodium_g ) %>%
gather('grp','gram', Protein_g:Sodium_g) %>%
group_by(mrn, fdrt, grp) %>%
summarise(eachsum = sum(gram))
m_pick <- m_all %>%
filter(mrn == pick$mrn[1])  %>%
split(.$grp)
macro_list <- m_all %>%
split(.$grp) %>%
imap(function(.x, .y) {
ggscatter(data = .x ,x = 'fdrt', y = 'eachsum', alpha = alpha_val, size = point_size,
xlab = 'Day relative to HCT',
ylab = str_glue('{.y}'),
add = "loess", conf.int = TRUE,
add.params = list(color = loess_line_col, fill = "darkblue", size = 1))  +
geom_point(data = m_pick[[.y]], aes(x = fdrt, y = eachsum), col = 'red', size = pick_point_size) +
geom_line(data = m_pick[[.y]], aes(x = fdrt, y =eachsum), linetype = 'solid', size = pick_line_size, col = 'red') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
})
macro <- plot_grid(macro_list[[1]],macro_list[[2]],macro_list[[3]],macro_list[[4]],macro_list[[5]],macro_list[[6]],
nrow = 2,
align = 'hv',
#rel_widths =  c(1,1),
#rel_heights = c(1,1),
labels = c('A','B','C', 'D','E','F'),
axis = 'tblr')
ggsave('../figs/paper/072_macro_fig1_supp.pdf',
width = 160,
height = 120,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf')
?
plot_grid
# the macronutrients scatter plot
m_all <- dtb %>%
select(mrn, fdrt,Protein_g:Sodium_g ) %>%
gather('grp','gram', Protein_g:Sodium_g) %>%
group_by(mrn, fdrt, grp) %>%
summarise(eachsum = sum(gram))
m_pick <- m_all %>%
filter(mrn == pick$mrn[1])  %>%
split(.$grp)
macro_list <- m_all %>%
split(.$grp) %>%
imap(function(.x, .y) {
ggscatter(data = .x ,x = 'fdrt', y = 'eachsum', alpha = alpha_val, size = point_size,
xlab = 'Day relative to HCT',
ylab = str_glue('{.y}'),
add = "loess", conf.int = TRUE,
add.params = list(color = loess_line_col, fill = "darkblue", size = 1))  +
geom_point(data = m_pick[[.y]], aes(x = fdrt, y = eachsum), col = loess_line_col, size = example_pt_line_size) +
geom_line(data = m_pick[[.y]], aes(x = fdrt, y =eachsum), linetype = 'solid', size = example_pt_line_size, col = loess_line_col) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
})
macro <- plot_grid(macro_list[[1]],macro_list[[2]],macro_list[[3]],macro_list[[4]],macro_list[[5]],macro_list[[6]],
nrow = 2,
align = 'hv',
#rel_widths =  c(1,1),
#rel_heights = c(1,1),
labels = c('A','B','C', 'D','E','F'),
axis = 'tblr')
ggsave('../figs/paper/072_macro_fig1_supp.pdf',
width = 160,
height = 120,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf')
# the macronutrients scatter plot
m_all <- dtb %>%
select(mrn, fdrt,Protein_g:Sodium_g ) %>%
gather('grp','gram', Protein_g:Sodium_g) %>%
group_by(mrn, fdrt, grp) %>%
summarise(eachsum = sum(gram))
m_pick <- m_all %>%
filter(mrn == pick$mrn[1])  %>%
split(.$grp)
macro_list <- m_all %>%
split(.$grp) %>%
imap(function(.x, .y) {
ggscatter(data = .x ,x = 'fdrt', y = 'eachsum', alpha = alpha_val, size = point_size,
xlab = 'Day relative to HCT',
ylab = str_glue('{.y}'),
add = "loess", conf.int = TRUE,
add.params = list(color = loess_line_col, fill = "darkblue", size = 1))  +
geom_point(data = m_pick[[.y]], aes(x = fdrt, y = eachsum), col = loess_line_col, size = example_pt_line_size) +
geom_line(data = m_pick[[.y]], aes(x = fdrt, y =eachsum), linetype = 'solid', size = example_pt_line_size, col = loess_line_col) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
})
macro <- plot_grid(macro_list[[1]],macro_list[[2]],macro_list[[3]],macro_list[[4]],macro_list[[5]],macro_list[[6]],
nrow = 2,
align = 'hv',
#rel_widths =  c(1,1),
#rel_heights = c(1,1),
labels = c('A','B','C', 'D','E','F'),
axis = 'tblr')
ggsave('../figs/paper/072_macro_fig1_supp.pdf',
width = 160,
height = 120,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf')
m_pick
View(m_all)
m_all <- dtb %>%
select(mrn, fdrt,Protein_g:Sodium_g ) %>%
gather('grp','gram', Protein_g:Sodium_g)
# the macronutrients scatter plot
m_all <- dtb %>%
select(mrn, fdrt,Protein_g:Sodium_g ) %>%
gather('grp','gram', Protein_g:Sodium_g) %>%
mutate(grp = str_replace(grp, '_g$','')) %>%
group_by(mrn, fdrt, grp) %>%
summarise(eachsum = sum(gram))
m_pick <- m_all %>%
filter(mrn == pick$mrn[1])  %>%
split(.$grp)
macro_list <- m_all %>%
split(.$grp) %>%
imap(function(.x, .y) {
ggscatter(data = .x ,x = 'fdrt', y = 'eachsum', alpha = alpha_val, size = point_size,
xlab = 'Day relative to HCT',
ylab = 'Grams',
title = str_glue(),
add = "loess", conf.int = TRUE,
add.params = list(color = loess_line_col, fill = "darkblue", size = 1))  +
geom_point(data = m_pick[[.y]], aes(x = fdrt, y = eachsum), col = loess_line_col, size = example_pt_line_size) +
geom_line(data = m_pick[[.y]], aes(x = fdrt, y =eachsum), linetype = 'solid', size = example_pt_line_size, col = loess_line_col) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
})
macro <- plot_grid(macro_list[[1]],macro_list[[2]],macro_list[[3]],macro_list[[4]],macro_list[[5]],macro_list[[6]],
nrow = 2,
align = 'hv',
#rel_widths =  c(1,1),
#rel_heights = c(1,1),
labels = c('A','B','C', 'D','E','F'),
axis = 'tblr')
ggsave('../figs/paper/072_macro_fig1_supp.pdf',
width = 160,
height = 120,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf')
# the macronutrients scatter plot
m_all <- dtb %>%
select(mrn, fdrt,Protein_g:Sodium_g ) %>%
gather('grp','gram', Protein_g:Sodium_g) %>%
mutate(grp = str_replace(grp, '_g$','')) %>%
group_by(mrn, fdrt, grp) %>%
summarise(eachsum = sum(gram))
m_pick <- m_all %>%
filter(mrn == pick$mrn[1])  %>%
split(.$grp)
macro_list <- m_all %>%
split(.$grp) %>%
imap(function(.x, .y) {
ggscatter(data = .x ,x = 'fdrt', y = 'eachsum', alpha = alpha_val, size = point_size,
xlab = 'Day relative to HCT',
ylab = 'Grams',
title = str_glue('{.y}'),
add = "loess", conf.int = TRUE,
add.params = list(color = loess_line_col, fill = "darkblue", size = 1))  +
geom_point(data = m_pick[[.y]], aes(x = fdrt, y = eachsum), col = loess_line_col, size = example_pt_line_size) +
geom_line(data = m_pick[[.y]], aes(x = fdrt, y =eachsum), linetype = 'solid', size = example_pt_line_size, col = loess_line_col) +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
})
macro <- plot_grid(macro_list[[1]],macro_list[[2]],macro_list[[3]],macro_list[[4]],macro_list[[5]],macro_list[[6]],
nrow = 2,
align = 'hv',
#rel_widths =  c(1,1),
#rel_heights = c(1,1),
labels = c('A','B','C', 'D','E','F'),
axis = 'tblr')
ggsave('../figs/paper/072_macro_fig1_supp.pdf',
width = 160,
height = 120,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf')
