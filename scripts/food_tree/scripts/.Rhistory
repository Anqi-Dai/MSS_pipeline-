labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
diversity_factor %>%
write_rds('../data/068_diversity_factor_forest.rds')
diversity_factor
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(brms)
library(ggpubr)
options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
ncores <- parallel::detectCores()
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100)
axis_text_size <- 7
axis_title_size <- 7
cts <- read_csv('../data/cleaned_stool/ALL_stool_samples_genus_counts.csv') %>%
filter(sampleid %in% meta$sampleid)
thre <- seq(0.0001, 0.002, 0.0001)
thre %>%
set_names(thre) %>%
map_dfr(function(num){
cts %>%
group_by(genus) %>%
count(relab > num) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 10) %>%
nrow
}) %>%
gather('thre', 'num')
target_genera <-  cts %>%
group_by(genus) %>%
count(relab > 0.002) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 10) %>%
pull(genus)
library(tidyverse)
library(brms)
library(ggpubr)
options(mc.cores = parallel::detectCores())
rstan::rstan_options(auto_write = TRUE)
ncores <- parallel::detectCores()
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100)
axis_text_size <- 7
axis_title_size <- 7
priors <- c(# for the food group variables
prior(normal(0, 1.2), class = 'b', coef = "fg_egg"),
prior(normal(0, 1.2), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1.2), class = 'b', coef = "fg_grain"),
prior(normal(0, 1.2), class = 'b', coef = "fg_legume"),
prior(normal(0, 1.2), class = 'b', coef = "fg_meat"),
prior(normal(0, 1.2), class = 'b', coef = "fg_milk"),
prior(normal(0, 1.2), class = 'b', coef = "fg_oils"),
prior(normal(0, 1.2), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1.2), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(-3, 1), class = 'b', coef = "intensityreduced"),
prior(normal(-3, 1), class = 'b', coef = "intensityablative"),
prior(normal(-3, 1), class = 'b', coef = "intensitynonablative"))
gcts <- read_csv('../data/088_genus_relab_log10_wide.csv') %>%
select(sampleid, all_of(target_genera))
full <- meta %>%
full_join(gcts)
priors <- c(# for the food group variables
prior(normal(0, 1.2), class = 'b', coef = "fg_egg"),
prior(normal(0, 1.2), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1.2), class = 'b', coef = "fg_grain"),
prior(normal(0, 1.2), class = 'b', coef = "fg_legume"),
prior(normal(0, 1.2), class = 'b', coef = "fg_meat"),
prior(normal(0, 1.2), class = 'b', coef = "fg_milk"),
prior(normal(0, 1.2), class = 'b', coef = "fg_oils"),
prior(normal(0, 1.2), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1.2), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(-3, 1), class = 'b', coef = "intensityreduced"),
prior(normal(-3, 1), class = 'b', coef = "intensityablative"),
prior(normal(-3, 1), class = 'b', coef = "intensitynonablative"))
gcts <- read_csv('../data/088_genus_relab_log10_wide.csv') %>%
select(sampleid, all_of(target_genera))
full <- meta %>%
full_join(gcts)
priors <- c(# for the food group variables
prior(normal(0, 1.2), class = 'b', coef = "fg_egg"),
prior(normal(0, 1.2), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1.2), class = 'b', coef = "fg_grain"),
prior(normal(0, 1.2), class = 'b', coef = "fg_legume"),
prior(normal(0, 1.2), class = 'b', coef = "fg_meat"),
prior(normal(0, 1.2), class = 'b', coef = "fg_milk"),
prior(normal(0, 1.2), class = 'b', coef = "fg_oils"),
prior(normal(0, 1.2), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1.2), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(-3, 1), class = 'b', coef = "intensityreduced"),
prior(normal(-3, 1), class = 'b', coef = "intensityablative"),
prior(normal(-3, 1), class = 'b', coef = "intensitynonablative"))
gcts <- read_csv('../data/088_genus_relab_log10_wide.csv') %>%
select(sampleid, all_of(target_genera))
full <- meta %>%
full_join(gcts)
priors <- c(# for the food group variables
prior(normal(0, 1.2), class = 'b', coef = "fg_egg"),
prior(normal(0, 1.2), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1.2), class = 'b', coef = "fg_grain"),
prior(normal(0, 1.2), class = 'b', coef = "fg_legume"),
prior(normal(0, 1.2), class = 'b', coef = "fg_meat"),
prior(normal(0, 1.2), class = 'b', coef = "fg_milk"),
prior(normal(0, 1.2), class = 'b', coef = "fg_oils"),
prior(normal(0, 1.2), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1.2), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(-3, 1), class = 'b', coef = "intensityreduced"),
prior(normal(-3, 1), class = 'b', coef = "intensityablative"),
prior(normal(-3, 1), class = 'b', coef = "intensitynonablative"))
entero_genus <- brm( Enterococcus  ~
0 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
intensity +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin),
data = full,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 456, sample_prior = T)
post_enterco <- suppressWarnings(posterior_samples(entero_genus))
post_enterco %>%  write_csv('../data/087_Enterococcus_model_fg_post.csv')
post_samples  <- read_csv('../data/087_Enterococcus_model_fg_post.csv')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))  %>%
mutate(shortname = factor(shortname, levels = c("Fruits"  , "Sweets"  ,  "Vegetables", "Grains"    , "Milk"   ,    "Meats"    ,   "Eggs"      , "Legumes" ,   "Oils" )))
post_samples  <- read_csv('../data/087_Enterococcus_model_fg_post.csv')
nodes <- read_tsv('../data/source/NodeLabels_withcomma.txt', col_types = 'cc') %>%
filter(nchar(Level.code) == 1) %>%
rename(fgrp1 = Level.code,
fdesc = Main.food.description)
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key) %>%
mutate(fdesc = str_replace_all(fdesc, '_',' ')) %>%
mutate(fdesc = str_wrap(fdesc, width = 28, indent = 2, exdent = 0)) %>%
mutate(fdesc = str_replace(fdesc, 'and','&')) %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))  %>%
mutate(shortname = factor(shortname, levels = c("Fruits"  , "Sweets"  ,  "Vegetables", "Grains"    , "Milk"   ,    "Meats"    ,   "Eggs"      , "Legumes" ,   "Oils" )))
# find the 66 and 95 CI
post_coeff %>%
group_by(item) %>%
tidybayes::median_qi(coeff, .width = c( .66, .95))
post_coeff %>%
group_by(item) %>%
summarise(ave = mean(coeff))
fg_colors <- post_coeff %>%
distinct(shortname, color) %>%
select(shortname, color) %>%
deframe()
# to find out if the group crosses zero or not
cross0 <- post_coeff %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
# plotting the forest
Enterococcaceae_model_coeff <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = expression(paste(log[10], '(abundance) change', ' per 100g of food')),
y = '',
title = 'Enterococcus') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8),
aspect.ratio=1)
Enterococcaceae_model_coeff %>%
write_rds('../data/087_entero_genus_fg_main.rds')
Enterococcaceae_model_coeff
View(post_samples)
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg'))
View(coeff_bi)
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
entero_genus_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Enterococcus') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1)
entero_genus_factor %>% write_rds('../data/087_entero_genus_factor_forest.rds')
entero_genus_factor
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
entero_genus_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Enterococcus') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1)
entero_genus_factor %>% write_rds('../data/087_entero_genus_factor_forest.rds')
entero_genus_factor
prior_entero <- prior_draws(entero_genus)
entero_genus
prior_entero
prior_entero <- prior_draws(entero_genus)
ave_each_fg_prior <- prior_entero %>%
mutate(mean_fg_prior_entero =
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_intensityreduced ) %>%
select(mean_fg_prior_entero) %>%
mutate(grp = 'ave_each')  %>%
mutate(within_range = if_else(mean_fg_prior_entero >= min(full$Enterococcus) &  mean_fg_prior_entero <= max(full$Enterococcus), T, F))
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
prior_entero <- prior_draws(entero_genus)
ave_each_fg_prior <- prior_entero %>%
mutate(mean_fg_prior_entero =
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_intensityreduced ) %>%
select(mean_fg_prior_entero) %>%
mutate(grp = 'ave_each')  %>%
mutate(within_range = if_else(mean_fg_prior_entero >= min(full$Enterococcus) &  mean_fg_prior_entero <= max(full$Enterococcus), T, F))
prior_enterococcus <- ave_each_fg_prior %>%
gghistogram(x = 'mean_fg_prior_entero', fill = 'within_range', color = 'white',
xlab = 'Predicted log10(Enterococcus)\nwith prior distribution',
title = 'Enterococcus') +
geom_vline(xintercept = min(full$Enterococcus), linetype = 'dashed') +
geom_vline(xintercept = max(full$Enterococcus), linetype = 'dashed')  +
theme(legend.position = 'none')
ave_each_fg_prior %>%
count(within_range) %>%
mutate(perc = n/sum(n)*100)
prior_enterococcus %>%
write_rds('../data/087_prior_enterococcus_hist.rds'
)
prior_entero <- prior_draws(entero_genus)
ave_each_fg_prior <- prior_entero %>%
mutate(mean_fg_prior_entero =
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_intensityreduced ) %>%
select(mean_fg_prior_entero) %>%
mutate(grp = 'ave_each')  %>%
mutate(within_range = if_else(mean_fg_prior_entero >= min(full$Enterococcus) &  mean_fg_prior_entero <= max(full$Enterococcus), T, F))
prior_enterococcus <- ave_each_fg_prior %>%
gghistogram(x = 'mean_fg_prior_entero', fill = 'within_range', color = 'white',
xlab = 'Predicted log10(Enterococcus)\nwith prior distribution',
title = 'Enterococcus') +
geom_vline(xintercept = min(full$Enterococcus), linetype = 'dashed') +
geom_vline(xintercept = max(full$Enterococcus), linetype = 'dashed')  +
theme(legend.position = 'none')
ave_each_fg_prior %>%
count(within_range) %>%
mutate(perc = n/sum(n)*100)
prior_enterococcus %>%
write_rds('../data/087_prior_enterococcus_hist.rds'
)
prior_enterococcus
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(cowplot)
axis_text_size <- 10
axis_title_size <- 10
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
div_fac <- read_rds('../data/068_diversity_factor_forest.rds')
enter_fac <- read_rds('../data/087_entero_genus_factor_forest.rds')
fac2 <- plot_grid(  div_fac,enter_fac,
nrow = 1, labels = c('A','B'), rel_widths = c(1, 1))
ggsave('../figs/paper/S6_div_entero_factor_086.pdf',
width = 170,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = fac2)
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
entero_genus_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Enterococcus') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
entero_genus_factor %>% write_rds('../data/087_entero_genus_factor_forest.rds')
div_fac <- read_rds('../data/068_diversity_factor_forest.rds')
enter_fac <- read_rds('../data/087_entero_genus_factor_forest.rds')
fac2 <- plot_grid(  div_fac,enter_fac,
nrow = 1, labels = c('A','B'), rel_widths = c(1, 1))
ggsave('../figs/paper/S6_div_entero_factor_086.pdf',
width = 170,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = fac2)
div_fac <- read_rds('../data/068_diversity_factor_forest.rds')
enter_fac <- read_rds('../data/087_entero_genus_factor_forest.rds')
fac2 <- plot_grid(  div_fac,enter_fac,
nrow = 1, labels = c('A','B'), rel_widths = c(1, 1))
ggsave('../figs/paper/S5_div_entero_factor_086.pdf',
width = 170,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400, device = 'pdf', plot = fac2)
ggsave('../figs/paper/S5_div_entero_factor_086.jpg',
width = 170,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400, device = 'jpg', plot = fac2)
