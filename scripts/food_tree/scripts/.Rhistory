post_coeffs$b_fg_veggie$post_coeff * values_q50 %>% pluck(val) %>% pluck('b_fg_veggie') +
post_coeffs$b_inten_re$post_coeff  +
post_coeffs$b_Intercept$post_coeff
}) %>%
bind_rows(.id = 'grp')
# the calculated ln(diversity) when the others are ave but one group is the q50
values_q80 <- q80_ %>%
select(-key) %>%
as.list()
values_q80 <- values_q80 %>%
map(~ set_names(x = ., q80_$key))
# calculate the resulted prior log div
vals_q80 <- names(values_q80)
q80_each_fg_post <- vals_q80  %>%
set_names(vals_q80) %>%
map(function(val) {
res =
post_coeffs$b_fg_egg$post_coeff * values_q80 %>% pluck(val) %>% pluck('b_fg_egg') +
post_coeffs$b_fg_fruit$post_coeff * values_q80 %>% pluck(val) %>% pluck('b_fg_fruit') +
post_coeffs$b_fg_grain$post_coeff * values_q80 %>% pluck(val) %>% pluck('b_fg_grain') +
post_coeffs$b_fg_legume$post_coeff * values_q80 %>% pluck(val) %>% pluck('b_fg_legume') +
post_coeffs$b_fg_meat$post_coeff * values_q80 %>% pluck(val) %>% pluck('b_fg_meat') +
post_coeffs$b_fg_milk$post_coeff * values_q80 %>% pluck(val) %>% pluck('b_fg_milk') +
post_coeffs$b_fg_oils$post_coeff * values_q80 %>% pluck(val) %>% pluck('b_fg_oils') +
post_coeffs$b_fg_sweets$post_coeff * values_q80 %>% pluck(val) %>% pluck('b_fg_sweets') +
post_coeffs$b_fg_veggie$post_coeff * values_q80 %>% pluck(val) %>% pluck('b_fg_veggie') +
post_coeffs$b_inten_re$post_coeff  +
post_coeffs$b_Intercept$post_coeff
}) %>%
bind_rows(.id = 'grp')
# the calculated ln(diversity) when the others are ave but one group is the q50
values_q90 <- q90_ %>%
select(-key) %>%
as.list()
values_q90 <- values_q90 %>%
map(~ set_names(x = ., q90_$key))
# calculate the resulted prior log div
vals_q90 <- names(values_q90)
q90_each_fg_post <- vals_q90  %>%
set_names(vals_q90) %>%
map(function(val) {
res =
post_coeffs$b_fg_egg$post_coeff * values_q90 %>% pluck(val) %>% pluck('b_fg_egg') +
post_coeffs$b_fg_fruit$post_coeff * values_q90 %>% pluck(val) %>% pluck('b_fg_fruit') +
post_coeffs$b_fg_grain$post_coeff * values_q90 %>% pluck(val) %>% pluck('b_fg_grain') +
post_coeffs$b_fg_legume$post_coeff * values_q90 %>% pluck(val) %>% pluck('b_fg_legume') +
post_coeffs$b_fg_meat$post_coeff * values_q90 %>% pluck(val) %>% pluck('b_fg_meat') +
post_coeffs$b_fg_milk$post_coeff * values_q90 %>% pluck(val) %>% pluck('b_fg_milk') +
post_coeffs$b_fg_oils$post_coeff * values_q90 %>% pluck(val) %>% pluck('b_fg_oils') +
post_coeffs$b_fg_sweets$post_coeff * values_q90 %>% pluck(val) %>% pluck('b_fg_sweets') +
post_coeffs$b_fg_veggie$post_coeff * values_q90 %>% pluck(val) %>% pluck('b_fg_veggie') +
post_coeffs$b_inten_re$post_coeff  +
post_coeffs$b_Intercept$post_coeff
}) %>%
bind_rows(.id = 'grp')
# the calculated ln(diversity) when the others are ave but one group is the q75
values_q75 <- q75_ %>%
select(-key) %>%
as.list()
values_q75 <- values_q75 %>%
map(~ set_names(x = ., q75_$key))
# calculate the resulted prior log div
vals_q75 <- names(values_q75)
q75_each_fg_post <- vals_q75  %>%
set_names(vals_q75) %>%
map(function(val) {
res =
post_coeffs$b_fg_egg$post_coeff * values_q75 %>% pluck(val) %>% pluck('b_fg_egg') +
post_coeffs$b_fg_fruit$post_coeff * values_q75 %>% pluck(val) %>% pluck('b_fg_fruit') +
post_coeffs$b_fg_grain$post_coeff * values_q75 %>% pluck(val) %>% pluck('b_fg_grain') +
post_coeffs$b_fg_legume$post_coeff * values_q75 %>% pluck(val) %>% pluck('b_fg_legume') +
post_coeffs$b_fg_meat$post_coeff * values_q75 %>% pluck(val) %>% pluck('b_fg_meat') +
post_coeffs$b_fg_milk$post_coeff * values_q75 %>% pluck(val) %>% pluck('b_fg_milk') +
post_coeffs$b_fg_oils$post_coeff * values_q75 %>% pluck(val) %>% pluck('b_fg_oils') +
post_coeffs$b_fg_sweets$post_coeff * values_q75 %>% pluck(val) %>% pluck('b_fg_sweets') +
post_coeffs$b_fg_veggie$post_coeff * values_q75 %>% pluck(val) %>% pluck('b_fg_veggie') +
post_coeffs$b_inten_re$post_coeff  +
post_coeffs$b_Intercept$post_coeff
}) %>%
bind_rows(.id = 'grp')
ave_each_fg_post <- post_samples %>%
mutate(mean_fg = b_Intercept +
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_inten_re ) %>%
select(mean_fg) %>%
mutate(grp = 'ave_each') %>%
rename(post_res = mean_fg) %>%
select(grp, post_res)
post_pred_ave <- tibble(
# because everything is the ave of it, so there is no change that whether one group is the max consumption
# just make three columns with the same contents
fg_fruit = exp(ave_each_fg_post$post_res),
fg_sweets = exp(ave_each_fg_post$post_res),
fg_veggie = exp(ave_each_fg_post$post_res)
) %>%
gather('term', 'post_ave_pred')
# calculate the original scale predicted diversity
post_pred_min <- min_each_fg_post %>%
as.list() %>%
map(function(vec) {
tibble(
min_=vec
) %>%
mutate(
post_min_pred =  exp(min_))
}) %>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'min_',''))
post_pred_max <- max_each_fg_post %>%
as.list() %>%
map(function(vec) {
tibble(
max_=vec
) %>%
mutate(
post_max_pred =  exp(max_))
}) %>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'max_',''))
post_pred_q25 <- q25_each_fg_post %>%
as.list() %>%
map(function(vec) {
tibble(
q25_=vec
) %>%
mutate(
post_q25_pred =  exp(q25_))
}) %>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'q25_',''))
post_pred_q50 <- q50_each_fg_post %>%
as.list() %>%
map(function(vec) {
tibble(
q50_=vec
) %>%
mutate(
post_q50_pred =  exp(q50_))
}) %>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'q50_',''))
post_pred_q80 <- q80_each_fg_post %>%
as.list() %>%
map(function(vec) {
tibble(
q80_=vec
) %>%
mutate(
post_q80_pred =  exp(q80_))
}) %>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'q80_',''))
post_pred_q90 <- q90_each_fg_post %>%
as.list() %>%
map(function(vec) {
tibble(
q90_=vec
) %>%
mutate(
post_q90_pred =  exp(q90_))
}) %>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'q90_',''))
post_pred_q75 <- q75_each_fg_post %>%
as.list() %>%
map(function(vec) {
tibble(
q75_=vec
) %>%
mutate(
post_q75_pred =  exp(q75_))
}) %>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'q75_',''))
all_pred <- bind_rows(
post_pred_min %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_min_pred) %>%
mutate(type = 'min')%>%
select(term, pred_div,type ),
post_pred_q25 %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_q25_pred) %>%
mutate(type = '25%')%>%
select(term, pred_div,type ),
post_pred_q50 %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_q50_pred) %>%
mutate(type = '50%')%>%
select(term, pred_div,type ),
post_pred_q80 %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_q80_pred) %>%
mutate(type = '80%')%>%
select(term, pred_div,type ),
post_pred_q90 %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_q90_pred) %>%
mutate(type = '90%')%>%
select(term, pred_div,type ),
post_pred_q75 %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_q75_pred) %>%
mutate(type = '75%') %>%
select(term, pred_div,type ),
post_pred_max %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_max_pred) %>%
mutate(type = 'max') %>%
select(term, pred_div,type ),
post_pred_ave %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
rename(pred_div = post_ave_pred) %>%
mutate(type = 'ave') %>%
select(term, pred_div,type )
)
fg_val_summary <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(quantile(., probs = c(0.25, 0.5, 0.75, 0.8, 0.9)))) %>%
mutate(grp = c('25%','50%','75%', '80%', '90%'))
fg_val_max <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(max))  %>%
mutate(grp = 'max')
fg_val_min <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(min))  %>%
mutate(grp = 'min')
fg_val_summary_all <- bind_rows(fg_val_summary, fg_val_max, fg_val_min) %>%
gather('fg', 'value', fg_egg:fg_veggie) %>%
mutate(ori_value = value*100) %>%
select(-value) %>%
rename(term = fg, type = grp) %>%
mutate(ori_value = round(ori_value))
fg_val_summary_all
all_pred %>%
left_join(key %>% rename(term = fg1_name) %>% select(term, shortname)) %>%
inner_join(fg_val_summary_all) %>%
filter(type  %in% c('min', '50%', 'max')) %>%
mutate(xtext = str_glue('{shortname} {type}: {ori_value}g')) %>%
arrange(shortname, ori_value) %>%
# ggboxplot( data = ., x = 'xtext', y = 'pred_div', fill = 'term', xlab = '', ylab = 'Predicted alpha diversity') +
ggplot(aes(x = xtext, y = pred_div, col = term)) +
stat_pointinterval(.width = c(.8, .95)) +
labs(x = '', y = 'Predicted alpha diversity') +
facet_grid(term ~ ., scales = 'free') +
scale_color_manual(values = c('#7D3C98','#db2589','#229954')) +
coord_flip() +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank())
all_pred %>%
left_join(key %>% rename(term = fg1_name) %>% select(term, shortname)) %>%
inner_join(fg_val_summary_all) %>%
filter(type != 'ave') %>%
mutate(type = factor(type, levels = c('min','25%','50%','75%','80%','90%', 'max'))) %>%
mutate(xtext = str_glue('{shortname} {type}: {ori_value}g')) %>%
arrange(shortname, ori_value) %>%
ggboxplot( data = ., x = 'xtext', y = 'pred_div', fill = 'term',
xlab = '', ylab = 'Predicted alpha diversity') +
facet_grid(term ~ ., scales = 'free') +
scale_fill_manual(values = c('#7D3C98','#db2589','#229954')) +
coord_flip() +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank())
# make the F2D as we discussed
maxs <- max_each_fg_post %>%  as.list()
mins <- min_each_fg_post %>%  as.list()
two_diff <- map2(maxs, mins, .f = function(maxi, mini){
tibble(
max_=maxi,
min_=mini,
ave=ave_each_fg_post$post_res
)  %>%
mutate(diff_max_ave = exp(max_) - exp(ave),
diff_min_ave =  exp(min_) - exp(ave))
})%>%
bind_rows(.id = 'term') %>%
mutate(term = str_replace(term, 'max_','')) %>%
left_join(key %>%
select(term = fg1_name, color, shortname))
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
arrange(shortname, grp) %>%
mutate(xtxt = str_glue('{shortname}__{grp}')) %>%
ggplot(aes(y = xtxt, x = post_diff, col =grp )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
scale_color_manual(values = c('#A73030FF','#00468B')) +
xlim(-5, 2) +
labs(x = expression(Change~`in`~alpha~diversity),
y = '',
title = 'Diversity prediction')   +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.position = 'none',
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
two_diff_plot %>% write_rds('../data/102_f2d_diversity_pred_two_diff.rds')
two_diff %>%
group_by(term) %>%
summarise(med = mean(diff_max_ave))
two_diff %>%
filter(term == 'fg_fruit') %>%
count(diff_max_ave < 0) %>%
mutate(perc = n/sum(n)*100)
two_diff_plot
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
arrange(shortname, grp) %>%
mutate(xtxt = str_glue('{shortname}__{grp}')) %>%
ggplot(aes(y = xtxt, x = post_diff, col =grp )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
scale_color_manual(values = c('#A73030FF','#00468B')) +
xlim(-5, 2) +
labs(x = expression(Change~`in`~alpha~diversity),
y = '',
title = 'Diversity prediction')   +
theme_classic() +
theme(axis.text=element_text(size=8),
#legend.position = 'none',
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
two_diff_plot %>% write_rds('../data/102_f2d_diversity_pred_two_diff.rds')
two_diff_plot
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
arrange(shortname, grp) %>%
mutate(xtxt = str_glue('{shortname}__{grp}')) %>%
ggplot(aes(y = xtxt, x = post_diff, col =grp )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
scale_color_manual(values = c('#A73030FF','#00468B')) +
xlim(-5, 2) +
labs(x = expression(Change~`in`~alpha~diversity),
y = '',
title = 'Diversity prediction')   +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.title = 'none',
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
two_diff_plot %>% write_rds('../data/102_f2d_diversity_pred_two_diff.rds')
two_diff_plot
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
arrange(shortname, grp) %>%
mutate(xtxt = str_glue('{shortname}__{grp}')) %>%
ggplot(aes(y = xtxt, x = post_diff, col =grp )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
scale_color_manual(values = c('#A73030FF','#00468B')) +
xlim(-5, 2) +
labs(x = expression(Change~`in`~alpha~diversity),
y = '',
title = 'Diversity prediction')   +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
two_diff_plot %>% write_rds('../data/102_f2d_diversity_pred_two_diff.rds')
two_diff_plot
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
arrange(shortname, grp) %>%
mutate(xtxt = str_glue('{shortname}__{grp}')) %>%
ggplot(aes(y = xtxt, x = post_diff, col =grp )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
scale_color_manual(values = c('#A73030FF','#00468B')) +
xlim(-5, 2) +
labs(x = expression(Change~`in`~alpha~diversity),
y = '',
title = 'Diversity prediction')   +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
two_diff_plot %>% write_rds('../figs/paper/102_f2d_diversity_pred_two_diff_without_tube_feeds_in_ave_and_max.pdf')
two_diff_plot
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
arrange(shortname, grp) %>%
mutate(xtxt = str_glue('{shortname}__{grp}')) %>%
ggplot(aes(y = xtxt, x = post_diff, col =grp )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
scale_color_manual(values = c('#A73030FF','#00468B')) +
labs(x = expression(Change~`in`~alpha~diversity),
y = '',
title = 'Diversity prediction')   +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../figs/paper/102_f2d_diversity_pred_two_diff_without_tube_feeds_in_ave_and_max.pdf',
plot =two_diff_plot )
two_diff_plot
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
arrange(shortname, grp) %>%
mutate(xtxt = str_glue('{shortname}__{grp}')) %>%
ggplot(aes(y = xtxt, x = post_diff, col =grp )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
scale_color_manual(values = c('#A73030FF','#00468B')) +
labs(x = expression(Change~`in`~alpha~diversity),
y = '',
title = 'Diversity prediction')   +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../figs/paper/102_f2d_diversity_pred_two_diff_without_tube_feeds_in_ave_and_max.pdf',
plot =two_diff_plot,
width = 800,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400)
two_diff_plot
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
arrange(shortname, grp) %>%
mutate(xtxt = str_glue('{shortname}__{grp}')) %>%
ggplot(aes(y = xtxt, x = post_diff, col =grp )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
scale_color_manual(values = c('#A73030FF','#00468B')) +
labs(x = expression(Change~`in`~alpha~diversity),
y = '',
title = 'Diversity prediction')   +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../figs/paper/102_f2d_diversity_pred_two_diff_without_tube_feeds_in_ave_and_max.pdf',
plot =two_diff_plot,
width = 80,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400)
two_diff_plot
two_diff_plot <-  two_diff %>%
filter(term %in% c('fg_fruit','fg_sweets', 'fg_veggie')) %>%
gather('grp', 'post_diff', diff_max_ave:diff_min_ave) %>%
group_by(term, shortname, grp) %>%
arrange(shortname, grp) %>%
mutate(xtxt = str_glue('{shortname}__{grp}')) %>%
ggplot(aes(y = xtxt, x = post_diff, col =grp )) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, linetype = "dashed", col = 'black') +
scale_color_manual(values = c('#A73030FF','#00468B')) +
labs(x = expression(Change~`in`~alpha~diversity),
y = '',
title = 'Diversity prediction')   +
theme_classic() +
theme(axis.text=element_text(size=8),
legend.title = element_blank(),
axis.text.y = element_blank(),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../figs/paper/102_f2d_diversity_pred_two_diff_without_tube_feeds_in_ave_and_max.pdf',
plot =two_diff_plot,
width = 90,
height = 60,
#height = 60,
units = c("mm"),
dpi = 400)
two_diff_plot
