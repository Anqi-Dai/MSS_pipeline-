(1 | mrn) +
(1 | timebin)
priors_genus_macro <- c(
# for the macro nutrients
prior(normal(0, 0.4), class = 'b', coef = "ave_fiber"),
prior(normal(0, 0.4), class = 'b', coef = "ave_fat"),
prior(normal(0, 0.4), class = 'b', coef = "ave_Protein"),
prior(normal(0, 0.4), class = 'b', coef = "ave_Sugars"),
prior(normal(0, 0.4), class = 'b', coef = "ave_carb"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
# for the intercept
prior(normal(-3, 1), class = 'Intercept'))
Enterococcus_model <- brm( Enterococcus_mod,
data = full,
warmup = 1000, iter = 3000,
prior = priors_genus_macro,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 123, sample_prior = T )
# check the priors
mean_enterococcus_prior <- prior_draws(Enterococcus_model) %>%
mutate(mean_genus = Intercept +
b_ave_fiber * mean_macro$ave_fiber+
b_ave_fat * mean_macro$ave_fat+
b_ave_Protein * mean_macro$ave_Protein+
b_ave_Sugars * mean_macro$ave_Sugars+
b_ave_carb * mean_macro$ave_carb+
b_inten_re ) %>%
select(mean_genus) %>%
mutate(grp = 'mean_enterococcus') %>%
rename(prior_res = mean_genus) %>%
select(grp, prior_res)
# calculate the percentage that falls within the actual range of the data
mean_enterococcus_prior %>%
count(prior_res >= min(full$Enterococcus) & prior_res <= max(full$Enterococcus)) %>%
mutate(fraction = round(n /sum(n), 2))  %>%
slice(2) %>%
pull(fraction)
target_genera
target_genera
ret_genus_macro <- target_genera %>%
set_names(target_genera) %>%
purrr::map(function(genus) {
mod =  brm( as.formula(str_glue('{genus}  ~
1 +
ave_fiber +
ave_fat +
ave_Protein +
ave_Sugars +
ave_carb +
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)')),
data = full,
warmup = 1000, iter = 3000,
prior = priors_genus_macro,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 456, sample_prior = T)
})
prior_df <- ret_genus_macro %>%
imap(~ prior_draws(.x) ) %>%
bind_rows(.id = 'genus')
prior_df %>%
write_csv('../data/078_genus_macro_model_prior.csv')
post_df <- ret_genus_macro %>%
imap(~ (suppressWarnings(posterior_samples(.x)) %>%
select(-starts_with('r_'))))  %>%
bind_rows(.id = 'genus')
post_df %>%
write_csv('../data/078_genus_macro_model_post.csv')
gcts <- cts %>%
filter(genus %in% target_genera) %>%
mutate(relablog = log10(relab + 2*10^-6))
View(gcts)
range(gcts$relablog)
valid_interval_perc <- ret_genus_macro %>%
imap(~ prior_draws(.x) %>%
mutate(mean_genera = Intercept +
b_ave_fiber * mean_macro$ave_fiber+
b_ave_fat * mean_macro$ave_fat+
b_ave_Protein * mean_macro$ave_Protein+
b_ave_Sugars * mean_macro$ave_Sugars+
b_ave_carb * mean_macro$ave_carb+
b_inten_re ) %>%
select(mean_genera) %>%
mutate(grp = 'ave_each') %>%
rename(prior_res = mean_genera) %>%
select(grp, prior_res) %>%
count(prior_res >-5 & prior_res<0)
valid_interval_perc <- ret_genus_macro %>%
valid_interval_perc <- ret_genus_macro %>%
imap(~ prior_draws(.x) %>%
mutate(mean_genera = Intercept +
b_ave_fiber * mean_macro$ave_fiber+
b_ave_fat * mean_macro$ave_fat+
b_ave_Protein * mean_macro$ave_Protein+
b_ave_Sugars * mean_macro$ave_Sugars+
b_ave_carb * mean_macro$ave_carb+
b_inten_re ) %>%
select(mean_genera) %>%
mutate(grp = 'ave_each') %>%
rename(prior_res = mean_genera) %>%
select(grp, prior_res) %>%
count(prior_res > -5 & prior_res < 0) %>%
mutate(perc = n/sum(n)*100) %>%
select(perc) %>%
slice(2) %>%
pull(perc) %>%
round(1) ) %>%
bind_rows(.id = .y)
View(valid_interval_perc)
## look at the all genera priors
valid_interval_perc <- ret_genus_macro %>%
imap(~ prior_draws(.x) %>%
mutate(mean_genera = Intercept +
b_ave_fiber * mean_macro$ave_fiber+
b_ave_fat * mean_macro$ave_fat+
b_ave_Protein * mean_macro$ave_Protein+
b_ave_Sugars * mean_macro$ave_Sugars+
b_ave_carb * mean_macro$ave_carb+
b_inten_re ) %>%
select(mean_genera) %>%
mutate(grp = 'ave_each') %>%
rename(prior_res = mean_genera) %>%
select(grp, prior_res) %>%
count(prior_res > -5 & prior_res < 0) %>%
mutate(perc = n/sum(n)*100) %>%
select(perc) %>%
slice(2) %>%
pull(perc) %>%
round(1) ) %>%
bind_rows(.id = .y) %>%
gather('genus','within_interval_perc')
post_df
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave'))
View(post_res_genera)
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup()
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white')))
target_genera
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('item', 'q50')
View(dat)
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
genus_order <- labels(dend)
# the macro order
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('genus', 'q50') %>%
column_to_rownames('item')
post_res_genera
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('genus', 'q50') %>%
column_to_rownames('item')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
macro_order <- labels(dend)
macro_order
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
col_key
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative','75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
# trying to order the rows and the columns by similarity in euclidean distances
# make it a numerical matrix and then calculate the distance
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('item', 'q50') %>%
column_to_rownames('genus')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
genus_order <- labels(dend)
# the macro order
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('genus', 'q50') %>%
column_to_rownames('item')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
macro_order <- labels(dend)
post_res_ordered <- post_res_genera %>%
mutate(genus = factor(genus, levels = genus_order),
item = factor(item, levels = macro_order))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative','75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 5)
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 6, height = 5)
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 4)
col_key
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 4)
post_coeff <- posterior_samples(Enterococcus_model, '^b_') %>%
select(starts_with('b_ave'))
View(post_coeff)
# look at the post
post_coeff <- posterior_samples(Enterococcus_model, '^b_') %>%
select(starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = case_when(
item ==  'fiber' ~ 'Fibers',
item == 'fat' ~ 'Fat',
item ==  'carb' ~ 'Carbohydrates',
TRUE ~ item
))  %>%
mutate(item = fct_reorder(item, coeff, .fun=median, .desc = F))
post_coeff %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Macronutrients') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
post_coeff <- posterior_samples(Enterococcus_model, '^b_') %>%
select(starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = case_when(
item ==  'fiber' ~ 'Fibers',
item == 'fat' ~ 'Fat',
item ==  'carb' ~ 'Carbohydrates',
TRUE ~ item
))  %>%
mutate(item = fct_reorder(item, coeff, .fun=median, .desc = F))
post_coeff %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = 'Regression coefficients',
y = 'Macronutrients') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
post_res_ordered
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95)
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
col_key
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
col_key
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 4)
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 3)
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 3)
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 3)
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 3)
model_alpha_cal
alpha_cal <- log(simpson_reciprocal) ~ 1 +
ave_cal +
inten_non + inten_ab + inten_re +
EN +
TPN +
empirical +
(1 | mrn) +
(1 | timebin)
priors_alpha_cal <- c(
prior(normal(0, 1.5), class = 'b', coef = "ave_cal"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.6), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
# for the intercept
prior(normal(2, 0.1), class = 'Intercept'))
# vet the prior
model_alpha_cal  <- brm( alpha_cal,
data = full,
warmup = 1000, iter = 3000,
prior = priors_alpha_cal,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
mean_ave_cal <- mean(full$ave_cal)
mean_ave_cal_prior <- prior_draws(model_alpha_cal) %>%
mutate(mean_ave_cal_div = Intercept +
b_ave_cal * mean_ave_cal+
b_inten_re ) %>%
select(mean_ave_cal_div) %>%
mutate(grp = 'mean_ave_cal') %>%
rename(prior_res = mean_ave_cal_div) %>%
select(grp, prior_res)
mean_ave_cal_prior %>%
count(prior_res >= min(full$simpson_reciprocal) & prior_res <= max(full$simpson_reciprocal)) %>%
mutate(fraction = round(n /sum(n), 2))  %>%
slice(2) %>%
pull(fraction)
