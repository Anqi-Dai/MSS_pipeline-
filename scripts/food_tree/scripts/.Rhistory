ggplot(aes(x = value, y = pid)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = '',
y = '',
title = '') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=11))
combined <- plot_grid(
title, mrn_figure,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
ggsave('../data/S6_mrn_intercepts_forest.pdf',
width = 210, height = 297, units = "mm", device = 'pdf', plot = combined)
mrn_figure <- mrn_forest %>%
ggplot(aes(x = value, y = pid)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'red', linetype = 'dashed') +
labs(x = '',
y = '',
title = '') +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=7),
axis.title=element_text(size=11))
combined <- plot_grid(
title, mrn_figure,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
ggsave('../data/S6_mrn_intercepts_forest.pdf',
width = 210, height = 297, units = "mm", device = 'pdf', plot = combined)
knitr::opts_chunk$set(echo = TRUE, message = F)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
library(ggridges)
library(brmstools)
dtb <- read_csv('../data/152_combined_DTB.csv')
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
# dtb %>%
#   distinct(mrn) %>%
#   write_csv('../data/nutrition_patients_97_mrns.csv', col_names = T)
?stat_pointinterval
?stat_pointinterval
?
stat_pointinterval
knitr::opts_chunk$set(echo = TRUE)
library(phytools)
library(tidyverse)
library(vdbR)
library(data.tree)
connect_database('~/dbConfig.txt')
tre <-   read.newick('../data/cleaned_tree/output_food_tree_datatree.newick')
leaves <- tibble(
fcode = tre$tip.label
)
dtb <- read_csv('../data/152_combined_DTB.csv')
n_meal <- dtb %>%
count(mrn, fdrt, Meal) %>%
nrow()
matching <- read_csv('../data/cleaned_diet_data/food_group_color_key.csv', col_types = 'ccc')
food_code_sum <- dtb %>%
group_by(Food_code) %>%
summarise(fc_sum = sum(dehydrated_weight)) %>%
mutate(Food_code = as.character(Food_code))  %>%
filter(Food_code %in% leaves$fcode)
food_code_sum_ <- food_code_sum[order(leaves$fcode),]
all.equal(food_code_sum_$Food_code , leaves$fcode)  #I'm fine with 3 mismatches. they are very close anyway
# the newick string for the nodes
tree_df <- read_csv('../data/source/final_table_for_writing_out_to_newick.csv', col_types = cols(.default = col_character())) %>%
select(FoodID, description)
# make the circular bar plot
bars <- food_code_sum_ %>%
mutate(per_meal_ave = round(fc_sum/n_meal, 3)) %>%
mutate(fgrp1 = str_sub(Food_code, 1, 1)) %>%
left_join(matching, by = "fgrp1") %>%
mutate(fg1_name = factor(fg1_name, levels = c('fg_egg', 'fg_oils', 'fg_legume', 'fg_fruit', 'fg_sweets', 'fg_milk','fg_meat', 'fg_veggie', 'fg_grain' ))) %>%
arrange(fg1_name)
food_code_level <- bars %>% pull(Food_code)
bars_ <- bars %>%
mutate(Food_code = factor(Food_code, levels = food_code_level))
ring <- bars_ %>%
select(Food_code, ring_height = per_meal_ave, ring_color = color) %>%
mutate(Food_code = as.character(Food_code)) %>%
full_join(tree_df %>% select(Food_code = FoodID, description)) %>%
select(description, ring_height:ring_color) %>%
mutate(ring_width = 0.5) %>%
gather('key','value', ring_height:ring_width) %>%
mutate(ring_level = 1) %>%
select(description, key, ring_level, value)
View(ring)
ring <- bars_ %>%
select(Food_code, ring_height = per_meal_ave, ring_color = color) %>%
mutate(Food_code = as.character(Food_code)) %>%
full_join(tree_df %>% select(Food_code = FoodID, description)) %>%
select(description, ring_height:ring_color) %>%
mutate(ring_width = 0.5)
View(ring)
View(ring)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
stb2 <- read_rds('../data/137_stb.rds')
dtb2 <- read_csv('../data/149_finalized_dtb2.csv')
# get the genus counts
library(vdbR)
connect_database()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
stb2 <- read_rds('../data/137_stb.rds')
dtb2 <- read_csv('../data/149_finalized_dtb2.csv')
# get the genus counts
library(vdbR)
connect_database()
get_table_from_database('asv_annotation_blast_ag')
cts <- get_counts_subset(stb2$sampleid)
cts_genus <- cts %>%
inner_join(asv_annotation_blast_ag %>%  select(asv_key, genus), by  = 'asv_key') %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative))
cts_spread <- cts_genus %>%
spread('genus', 'relab', fill = 0)
cts_genus %>%
write_csv('../data/150_b2_stool_samples_genus_counts.csv')
# log10 transform the genus counts
zero_transform <- log10(0 + 2*10^-6)
genus <- cts_genus %>%
mutate(relablog = log10(relab + 2*10^-6)) %>%
select(sampleid, genus, relablog) %>%
spread('genus', 'relablog', fill = zero_transform)
genus %>%
write_csv('../data/150_b2_genus_relab_log10_wide.csv')
genus <- read_csv('../data/150_b2_genus_relab_log10_wide.csv')
byday_original2 <- dtb2 %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal),
d_protein = sum(Protein_g),
d_fat = sum(Fat_g),
d_carb = sum(Carbohydrates_g),
d_fiber = sum(Fibers_g),
d_sugar = sum(Sugars_g)) %>%
rename(drt = fdrt) %>%
inner_join(genus %>%
inner_join(stb2 %>% select(sampleid, drt = sdrt, mrn, simpson_reciprocal, intensity)),
by = c("mrn", "drt")) %>%
ungroup()
# pooled the two batches together same day match between food and stool
byday_original <- bind_rows(byday_original1, byday_original2)
knitr::opts_chunk$set(echo = TRUE)
dtb1 <- read_csv('../data/149_finalized_dtb1.csv')
full <- read_csv('../data/090_all_samples_meta_p2d_fg9_dietall_genera34.csv')
byday_original1 <- dtb1 %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal),
d_protein = sum(Protein_g),
d_fat = sum(Fat_g),
d_carb = sum(Carbohydrates_g),
d_fiber = sum(Fibers_g),
d_sugar = sum(Sugars_g)) %>%
rename(drt = fdrt) %>%
inner_join(full %>%
rename(drt = sdrt) %>%
select(mrn,drt, simpson_reciprocal,  Blautia, Enterococcus, intensity), by = c("mrn", "drt")) %>%
ungroup()
# pooled the two batches together same day match between food and stool
byday_original <- bind_rows(byday_original1, byday_original2)
View(byday_original)
knitr::opts_chunk$set(echo = TRUE)
cts <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(sampleid %in% meta$sampleid)
library(tidyverse)
library(ggpubr)
library(tidybayes)
library(brms)
library(rstan)
options(mc.cores = parallel::detectCores())
ncores = parallel::detectCores()
rstan_options(auto_write = TRUE)
axis_text_size <- 10
axis_title_size <- 10
#dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
dtb <- read_csv('../data/152_combined_DTB.csv')
meta <- read_csv('../data/153_combined_META.csv')
cts <- read_csv('../data/022_ALL173_stool_samples_genus_counts.csv') %>%
filter(sampleid %in% meta$sampleid)
thre <- seq(0.0001, 0.002, 0.0001)
thre %>%
set_names(thre) %>%
map_dfr(function(num){
cts %>%
group_by(genus) %>%
count(relab > num) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 10) %>%
nrow
}) %>%
gather('thre', 'num')
target_genera <-  cts %>%
group_by(genus) %>%
count(relab > 0.002) %>%
rename(criteria = names(.)[2]) %>%
filter(criteria == 'TRUE') %>%
arrange(-n) %>%
filter(genus != 'NA') %>%
mutate(perc = round(n/nrow(meta)*100, 0)) %>%
filter(perc > 10) %>%
pull(genus)
gcts <- read_csv('../data/088_genus_relab_log10_wide.csv') %>%
select(sampleid, all_of(target_genera))
full <- meta %>%
inner_join(gcts)
knitr::opts_chunk$set(echo = TRUE)
post_samples  <- read_csv('../data/087_Enterococcus_model_fg_post.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(cowplot)
library(tidybayes)
library(cowplot)
title <- ggdraw() +
draw_label(
"Fig S5",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
plot.margin = margin(0, 0, 0, 7)
)
library(cowplot)
title <- ggdraw() +
draw_label(
"Fig S5",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
plot.margin = margin(0, 0, 0, 7)
)
div_fac <- read_rds('../data/068_diversity_factor_forest.rds')
enter_fac <- read_rds('../data/087_entero_genus_factor_forest.rds')
fac2 <- plot_grid(  enter_fac,
nrow = 1)
combined <- plot_grid(
title, fac2,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
ggsave('../data/S5_div_entero_factor_086.pdf',
width = 210, height = 157, units = "mm", device = 'pdf', plot = combined)
library(cowplot)
title <- ggdraw() +
draw_label(
"Fig S5",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
plot.margin = margin(0, 0, 0, 7)
)
div_fac <- read_rds('../data/068_diversity_factor_forest.rds')
enter_fac <- read_rds('../data/087_entero_genus_factor_forest.rds')
fac2 <- plot_grid(  enter_fac,NA,
nrow = 1)
combined <- plot_grid(
title, fac2,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
ggsave('../data/S5_div_entero_factor_086.pdf',
width = 210, height = 157, units = "mm", device = 'pdf', plot = combined)
library(cowplot)
title <- ggdraw() +
draw_label(
"Fig S5",
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
plot.margin = margin(0, 0, 0, 7)
)
div_fac <- read_rds('../data/068_diversity_factor_forest.rds')
enter_fac <- read_rds('../data/087_entero_genus_factor_forest.rds')
fac2 <- plot_grid(  enter_fac,NA,
nrow = 1)
combined <- plot_grid(
title, fac2,
ncol = 1,
# rel_heights values control vertical title margins
rel_heights = c(0.1, 1)
)
ggsave('../data/S5_div_entero_factor_086.pdf',
width = 210, height = 137, units = "mm", device = 'pdf', plot = combined)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(brms)
library(ggpubr)
library(tidybayes)
ncores <- parallel::detectCores()
axis_text_size <- 10
dat <- read_rds('/Volumes/vandenbrinklab/deep_sequencing/Clinical Annotation/Abx_data_TsoniIDB_pull_2020_07-06/allo_srx.rds')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(brms)
library(ggpubr)
library(tidybayes)
ncores <- parallel::detectCores()
axis_text_size <- 10
dat <- read_rds('/Volumes/vandenbrinklab/deep_sequencing/Clinical Annotation/Abx_data_TsoniIDB_pull_2020_07-06/allo_srx.rds')
ptb <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
narcotic <- dat %>%
filter(is_narcotic == "Y") %>%
filter(grepl("PCA", med_name)) %>%
mutate(mrn = as.numeric(MRN)) %>%
filter(mrn %in% ptb$mrn) %>%
select(mrn, start_date, stop_date)
colnames(dat)
narcotic %>%
count(mrn, sort = T)
# there is one patient in our cohort that had narcotics in a previous tranplant but not relavant to us right now.
rm_pt <- narcotic %>%
mutate(start_year = year(start_date)) %>%
filter(start_year == 2016) %>%
distinct(mrn) %>%
pull(mrn)
narcotic_early_dates <- narcotic %>%
filter(mrn != rm_pt) %>%
group_by(mrn) %>%
arrange(start_date, .by_group = T) %>%
slice(1) %>%
ungroup() %>%
select(-stop_date)
narcotic_stop_dates <- narcotic %>%
filter(mrn != rm_pt) %>%
group_by(mrn) %>%
arrange(desc(stop_date), .by_group = T) %>%
slice(1) %>%
ungroup() %>%
select(-start_date)
nar_dates <- narcotic_early_dates %>%
full_join(narcotic_stop_dates) %>%
inner_join(ptb %>%
select(mrn, hct)) %>%
mutate(start_drt = start_date - hct,
stop_drt = stop_date - hct) %>%
mutate(start_drt = as.numeric(start_drt),
stop_drt = as.numeric(stop_drt)) %>%
# filter out certain periods that are not close to the current cohort transplant date
filter(start_drt > -46 & start_drt < 82)
# the diet data is -10:49
# look closely at several patients that have very future stop dates, possibly another transplant or disease
change_stop <- nar_dates %>%
filter(stop_drt > 100) %>%
pull(mrn)
change_stop_date <- c('2019-08-21','2018-05-05','2017-10-13','2017-11-06','2019-07-26')
change <- tibble(
mrn = change_stop,
stop_date = change_stop_date
)
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
nar_correct <- nar_dates %>%
filter(mrn %in% change_stop) %>%
select(mrn, start_date, hct, start_drt) %>%
full_join(change) %>%
mutate(stop_date = ymd(stop_date),
stop_drt = stop_date - hct,
stop_drt = as.numeric(stop_drt))  %>%
select(colnames(nar_dates))
nar_all <- bind_rows(
nar_dates %>%
filter(!mrn %in% change_stop) ,
nar_correct
)  %>%
mutate(nar_int = interval(start_date, stop_date))
nar_all %>%
distinct(mrn)
# clean the data for the second batch
df2 <- read_rds('/Volumes/vandenBrinkLab/Angel_Dai/batch2_medication_exposures.rds')
ptb <- read_csv('../data/129_ptb2.csv')
pcas <- df2 %>%
filter(str_detect(route0, 'PCA IV') | str_detect(misc.info, 'PCA') | str_detect(drug_name_detail, 'PCA')) %>%
mutate(mrn = as.numeric(MRN)) %>%
filter(mrn %in% ptb$mrn) %>%
select(mrn, start_date, stop_date) %>%
inner_join(ptb %>% select(mrn, hct)) %>%
mutate(startday = as.numeric(start_date - hct),
stopday = as.numeric(stop_date - hct)) %>%
# filter out certain periods that are not close to the current cohort transplant date
filter(startday > -46 & startday < 82) %>%
mutate(nar_int = interval(start_date, stop_date))
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('samples_castori_ag')
stb2 <- read_csv('../data/153_combined_META.csv') %>% filter(batch == 'batch2')
# find if two intervals overlap
stb_samp <- samples_castori_ag %>%
filter(sampleid %in% stb2$sampleid) %>%
select(sampleid, datecollection, mrn) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
inner_join(pcas %>%
select(mrn, nar_int) ) %>%
mutate(use_nar = int_overlaps(p2d_int, nar_int))
use_pca <- stb_samp %>% filter(use_nar == 'TRUE') %>% distinct(sampleid)
use_pca_pt <- stb_samp %>% filter(use_nar == 'TRUE') %>% distinct(mrn)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('samples_castori_ag')
# find if two intervals overlap
stb_samp1 <- samples_castori_ag %>%
filter(sampleid %in% meta$sampleid) %>%
select(sampleid, datecollection, mrn) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
inner_join(nar_all %>%
select(mrn, nar_int) ) %>%
mutate(use_nar = int_overlaps(p2d_int, nar_int))
use_nar_samp <- stb_samp1 %>%
filter(use_nar == 'TRUE')
# how many samples from how many patients
use_nar_samp %>%
count(mrn)
use_nar_samp1 <- use_nar_samp %>%
distinct(sampleid) %>% pull(sampleid)
# the total list of the samples that were exposed to pca
pca_exposed <- c(use_nar_samp1, use_pca %>% pull(sampleid))
meta <- read_csv('../data/153_combined_META.csv')
meta_new <- meta %>%
mutate(narcotics = if_else(sampleid %in% pca_exposed, T, F))  %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100)
View(meta_new)
meta_new %>% count(narcotics)
meta_new %>% count(narcotics, mrn)
meta_new %>% count(narcotics)
meta_new %>% filter(narcotics == 'TRUE') %>% distinct(mrn)
meta_new %>% count(narcotics)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
PTB <- read_csv('../data/156_combined_PTB.csv')
View(PTB)
meta <- read_csv('../data/153_combined_META.csv')
# how many stool samples per patient
meta %>% count(mrn)
# how many stool samples per patient
meta %>% count(mrn) %>% summarise(med = median(n))
knitr::opts_chunk$set(echo = TRUE)
should <- read_csv('../data/135_selected_samples_for_irep_analysis.csv')
View(should)
should %>% distinct(mrn)
View(PTB)
knitr::opts_chunk$set(echo = TRUE)
transplant_data <- read_csv('../data/156_transplant_data.csv') %>%
select(mrn,  ANEUT_500_DATE, hct)
View(transplant_data)
transplant_data <- read_csv('../data/156_transplant_data.csv')
View(transplant_data)
# the median of the ttanc500 day
median(transplant_data$ttancday)
# the median of the ttanc500 day
median(transplant_data$ttancday, na.rm = T)
range(transplant_data$ttancday, na.rm = T)
summary(transplant_data$ttancday)
range(transplant_data$ttancday, na.rm = T)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
# to find out the number and days of EN, TPN patients
PTB <- read_csv('../data/156_combined_PTB.csv')
support <- read_csv('../data/NutritionSupport_DietPatients.csv')
View(support)
support <- read_csv('../data/NutritionSupport_DietPatients.csv') %>%
filter(MRN %in% PTB$mrn) %>%
mutate(date = mdy(`Date Nutrition Support`))
