left_join(earliest_dsample, by = 'mrn')  %>%
mutate(diff = sdrt - fdrt) %>%
filter(diff <= 0) %>%
pull(sampleid)
stb2 <- stb1 %>%
filter(!sampleid %in% early_2b_rm) %>%
select(-hct, -datecollection)
# now find the samples that have actually been sequenced that we have entry in the alpha div table
# and also have a satisfying total count
stb3 <- stb2 %>%
filter(sampleid %in% asv_alpha_diversity_ag$sampleid) %>%
left_join(asv_alpha_diversity_ag %>% select(sampleid, count_total)) %>%
filter(count_total >= 400)
# there are patients that have more than 1 stool sample on the same day
stb3 %>%
distinct(mrn, sdrt)
# the sampleids are all different
stb3 %>%
distinct(sampleid)
censor_abx <- c('active_atb_vanco_po',	'active_atb_imipenem',	'active_atb_meropenem',	'active_atb_ertapenem',		'active_atb_cefepime',		'active_atb_linezolid',	'active_atb_metro',	'active_atb_piptazo')
# 2021-2-24 update the abx to be considering 2-day effect only (instead of 20 days)
abx_all <- read_csv('../data/cleaned_stool/abx_all_samples_with_censoring_info_2day_effect.csv')
# how many samples in stb3 have records in abx_all
have_abx_info <- abx_all %>%
filter(sampleid %in% stb3$sampleid) %>%
distinct(sampleid) %>%
pull(sampleid)
abx_this_censor_samples <- abx_all %>%
filter(sampleid %in% stb3$sampleid) %>%
select(sampleid, active_atb_cipro:active_atb_other) %>%
gather(key = 'abx_type', value = 'value', names(.)[2]:names(.)[ncol(.)]) %>%
filter(abx_type %in% censor_abx) %>%
filter(value == T) %>%
distinct(sampleid) %>%
pull(sampleid)
# keep the samples that I have abx usage info
stb4 <- stb3 %>%
filter(sampleid %in% have_abx_info) %>%
arrange(mrn, sdrt)
stb4 %>%
distinct(mrn, sdrt)# XXX are duplicated on the same day
abx_all %>% filter(mrn %in% dtb$mrn) %>%
distinct(mrn)
this <- abx_all %>% filter(mrn %in% dtb$mrn)
setdiff(dtb$mrn, this$mrn)
this %>% write_rds('../data/011_nutrition_patient_96_abx.rds')
stb5 <- stb4 %>%
arrange(mrn, sdrt, sampleid) %>%
distinct(mrn, sdrt, .keep_all = T)
meta %>% distinct(mrn)
View(this)
View(abx_all)
View(this)
View(this)
this %>%
count(active_atb_vanco_po)
oral <- this %>%
filter(active_atb_vanco_po == 'TRUE')
View(oral)
oral <- this %>%
filter(active_atb_vanco_po == 'TRUE') %>%
mutate(
active_atb_vanco_po   = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "vancomycin_oral"],
TRUE, FALSE)
)
conf_atb_days_from_stop <- 2
sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "vancomycin_oral"]
oral <- this %>%
filter(active_atb_vanco_po == 'TRUE') %>%
mutate(
active_atb_vanco_po   = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "vancomycin_oral"],
TRUE, FALSE)
)
oral <- this %>%
filter(active_atb_vanco_po == 'TRUE')
oral <- this %>%
filter(active_atb_vanco_po == 'TRUE') %>%
mutate(
active_atb_vanco_po   = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "vancomycin_oral"],
TRUE, FALSE)
)
View(oral)
oral <- this %>%
filter(active_atb_vanco_po == 'TRUE') %>%
mutate(
active_atb_vanco_po   = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "vancomycin_oral"],
TRUE, FALSE)
) %>%
select(active_atb_vanco_po)
oral <- this %>%
filter(active_atb_vanco_po == 'TRUE')
oral <- this %>%
filter(active_atb_vanco_po == 'TRUE') %>%
mutate(
active_atb_vanco_po   = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "vancomycin_oral"],
TRUE, FALSE)
) %>%
select(active_atb_vanco_po)
new_samples <- samples %>%
filter (sampletype %in% c("stool", "Stool")) %>%
inner_join (Patients, by = "mrn") %>%
mutate (day = datecollection - hct) %>%
filter (day %in% conf_day_min:conf_day_max) %>%
left_join (antibiotics %>%
filter (institution == "MSKCC") %>%
mutate (mrn = as.numeric (patient_id)),
by = "mrn")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyverse)
library(vdbR)
connect_database(config_file = '~/dbConfig.txt')
source ("misc_atb_plot_functions.R")
ptb <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
# Request the tables I need from Postgres DB
get_table_from_database("patient_allo_ag")
patients <- patient_allo_ag[,c(2,5)]
# manually add that one patient that not in the patients allo ag table yet
one <- tibble(
mrn = 38084143,
hct = as.Date("2020-01-17")
)
Patients <- bind_rows(patients, one)
get_table_from_database(table_name = "samples_castori_ag")
samples <- samples_castori_ag[,c(2,3,5:7)]
get_table_from_database("asv_alpha_diversity_ag")
alphadiv <- asv_alpha_diversity_ag
get_table_from_database ("antibiotics_antibacterial_multicenter_ag")
antibiotics <- antibiotics_antibacterial_multicenter_ag
patients_ <- patient_allo_ag
# Choose which population to study (either "all" or "nutrition")
conf_population <- "all"
# Specify days interval (relative to HCT date) for samples to be analyzed (e.g. you can decide to only keep samples collected
# between day -10 and day 30). Use "NULL" to keep all samples
# relative to transplant date. this period we have the most samples
conf_day_min <- -20
conf_day_max <- 60 #!!!!!! changed this to suit the diet project sample collection range
# Do you want to censor samples collected during/after antibiotic treatment? (TRUE/FALSE)
conf_censor_by_atb <- TRUE
# Select which antibiotics you want to censor for (can choose among "vancomycin_oral", "vancomycin_iv", "ciprofloxacin", "other_atb")
# At the moment, the script groups together any other antibiotic that is not Vanco or Cipro. To change this you need to work on
# the function "add_atb_info_and_cleanup" in "misc_atb_plot_functions.R"
# this list contains the most frequently used abx
conf_atbs_to_censor <- c("vancomycin_oral",
"vancomycin_iv",
"azithromycin",
"cefepime",
"ciprofloxacin",
"imipenem_cilastatin",
"ertapenem",
"levofloxacin",
"linezolid",
"meropenem",
"metronidazole",
"piperacillin_tazobactam",
"sulfamethoxazole_trimethoprim",
"atb_other")    # all possible choices
conf_plot_description <- "All patients, censoring for all antibiotics"
# Antibiotics will continue to censor samples for conf_atb_days_from_stop after being discontinued
########################################
# the abx period: start and stop of a abx
# the microbiome period: -20 to 0 day of stool sample collection
# any overlap between the two we will consider the abx has effect on the microbiome and would wanna censor that.
########################################
conf_atb_days_from_stop <- 20
conf_atb_days_from_stop <- 2
#conf_atb_days_from_stop <- 1
# Specify day intervals to separate samples into bins (t1, t2)
# You can change the labels for the groups, but then you will have to also change the script below anywhere "t1" and "t2" appear
# So far I have only worked with two groups. It should not be too difficult to increase the number of groups, but it will
# require some tweaking / debugging
conf_groups <- list ("t1" = -20:-6,
"t2" = -5:0)
# Specify the best (preferred, aim) day for each group defined above. These days will be used by "group_samples" function if it will be
# called with arguments "paired" == TRUE OR "only_one_per_pt_per_group" == TRUE, to keep only the one sample closest to these days
# see the funtcion the function "group_samples" in "sample_grouping_and_antibiotic_censoring.R" for more details
conf_best_days <- c(-10, -2)
# I only use this second grouping to color all three areas of plot in fig. 1A, but could be used in future for further analysis..
conf_groups_2 <- conf_groups
conf_groups_2[["t3"]] <- 1:30
conf_best_days_2 <- append (conf_best_days, 10)
# Include healthy volunteers in the analysis by groups?
conf_include_healthy <- TRUE
# Specify the palette for the plots (one ot "brewer")
conf_palette <- "Dark2"
# Specify vertical limits for plots
# since different populations have different values, this allows to adjust limits separately for the two populations
if (conf_population == "all") {
conf_y_min <- -5
conf_y_max <- 65
conf_y_text <- 60
} else if (conf_population == "nutrition") {
conf_y_min <- -5
conf_y_max <- 60
conf_y_text <- 55
}
# Specify horizontal limits for plots
conf_x_min <- conf_day_min
conf_x_max <- conf_day_max
# Set format of p-value in plots
conf_p_format <- "p.signif"
# Location to the excel table with NRI scores for nutrition patients (it's in the VdB lab shared drive)
#conf_NRI_table_path <- "Y:/Nutrition and microbiota/NRI_dietpatients_updated_3.10.2020.xlsx"
# Prefix for plot file names
conf_plot_prefix <- "alpha"
new_samples <- samples %>%
filter (sampletype %in% c("stool", "Stool")) %>%
inner_join (Patients, by = "mrn") %>%
mutate (day = datecollection - hct) %>%
filter (day %in% conf_day_min:conf_day_max) %>%
left_join (antibiotics %>%
filter (institution == "MSKCC") %>%
mutate (mrn = as.numeric (patient_id)),
by = "mrn") %>%
mutate (s_atb_start = start - datecollection,
s_atb_stop = stop - datecollection,
p_atb_start = start - hct,
p_atb_stop = stop - hct) %>%
## filters out samples with potentially inaccurate (too distant) ATB information -- this also drops samples with no ATB info
filter (p_atb_stop > -150 & p_atb_start < 150) %>%
mutate (drug_name_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral",
"vancomycin_oral",
"vancomycin_iv"),
if_else (drug_name_clean %in% c("azithromycin",
"cefepime",
"ciprofloxacin",
"imipenem_cilastatin",
"ertapenem",
"levofloxacin",
"linezolid",
"meropenem",
"metronidazole",
"piperacillin_tazobactam",
"sulfamethoxazole_trimethoprim"),
drug_name_clean,
"atb_other"))) %>%
mutate (atb_can_censor = if_else (drug_name_clean %in% conf_atbs_to_censor, TRUE, FALSE),
## actual censoring by ATB exposure
censoring_event = if_else (sampleid %in% sampleid[atb_can_censor == TRUE &
s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop],
TRUE, FALSE),
# details on antibiotics responsible for censoring sample
active_atb_cipro      = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "ciprofloxacin"],
TRUE, FALSE),
active_atb_vanco_iv   = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "vancomycin_iv"],
TRUE, FALSE),
active_atb_vanco_po   = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "vancomycin_oral"],
TRUE, FALSE),
active_atb_imipenem   = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "imipenem_cilastatin"],
TRUE, FALSE),
active_atb_meropenem  = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "meropenem"],
TRUE, FALSE),
active_atb_ertapenem  = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "ertapenem"],
TRUE, FALSE),
active_atb_azitro     = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "azithromycin"],
TRUE, FALSE),
active_atb_cefepime   = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "cefepime"],
TRUE, FALSE),
active_atb_levo       = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "levofloxacin"],
TRUE, FALSE),
active_atb_linezolid  = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "linezolid"],
TRUE, FALSE),
active_atb_metro      = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "metronidazole"],
TRUE, FALSE),
active_atb_piptazo    = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "piperacillin_tazobactam"],
TRUE, FALSE),
active_atb_cotrim     = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "sulfamethoxazole_trimethoprim"],
TRUE, FALSE),
active_atb_other      = if_else (sampleid %in% sampleid[s_atb_start < 0 &
s_atb_stop > -conf_atb_days_from_stop &
drug_name_clean == "atb_other"],
TRUE, FALSE)) %>%
filter (!duplicated (sampleid)) %>%
select (-atb_can_censor) %>%
arrange (mrn, day)
View(new_samples)
new_samples <- samples %>%
filter (sampletype %in% c("stool", "Stool")) %>%
inner_join (Patients, by = "mrn") %>%
mutate (day = datecollection - hct) %>%
filter (day %in% conf_day_min:conf_day_max) %>%
left_join (antibiotics %>%
filter (institution == "MSKCC") %>%
mutate (mrn = as.numeric (patient_id)),
by = "mrn")
oral <- this %>%
filter(active_atb_vanco_po == 'TRUE')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
abx <- read_rds('/Volumes/vandenbrinklab/Nutrition and microbiota/medication_exposures/meds_nutrition_batch1_2022-11-29.rds')
View(abx)
abx <- read_rds('/Volumes/vandenbrinklab/Nutrition and microbiota/medication_exposures/meds_nutrition_batch1_2022-11-29.rds')
View(abx)
abx %>% distinct(MRN)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database(config_file = '~/dbConfig.txt')
get_table_from_database ("antibiotics_antibacterial_multicenter_ag")
View(antibiotics_antibacterial_multicenter_ag)
View(antibiotics_antibacterial_multicenter_ag)
antibiotics_antibacterial_multicenter_ag
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id))
#abx <- read_rds('/Volumes/vandenbrinklab/Nutrition and microbiota/medication_exposures/meds_nutrition_batch1_2022-11-29.rds')
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn)
View(abx)
abx
picked <-  c("azithromycin","cefepime", "ciprofloxacin", "imipenem_cilastatin", "ertapenem","levofloxacin","linezolid","meropenem","metronidazole","piperacillin_tazobactam","sulfamethoxazole_trimethoprim")
picked <-  c("azithromycin","cefepime", "ciprofloxacin", "imipenem_cilastatin", "ertapenem","levofloxacin","linezolid","meropenem","metronidazole","piperacillin_tazobactam","sulfamethoxazole_trimethoprim")
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn) %>%
mutate (drug_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral","vancomycin_oral", "vancomycin_iv"),
if_else (drug_name_clean %in% picked,
drug_name_clean,"atb_other")))
ptb <- read_csv('../data/cleaned_patients/diet_patients_97.csv')
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn) %>%
mutate (drug_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral","vancomycin_oral", "vancomycin_iv"),
if_else (drug_name_clean %in% picked,
drug_name_clean,"atb_other"))) %>%
left_join(ptb %>% select(mrn, hct))
abx
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn) %>%
mutate (drug_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral","vancomycin_oral", "vancomycin_iv"),
if_else (drug_name_clean %in% picked,
drug_name_clean,"atb_other"))) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_p_start = start - hct,
abx_p_stop = stop - hct)
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn) %>%
mutate (drug_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral","vancomycin_oral", "vancomycin_iv"),
if_else (drug_name_clean %in% picked,
drug_name_clean,"atb_other"))) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_p_start = start - hct,
abx_p_stop = stop - hct) %>%
filter (abx_p_stop > -30 & abx_p_start < 70)
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn) %>%
mutate (drug_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral","vancomycin_oral", "vancomycin_iv"),
if_else (drug_name_clean %in% picked,
drug_name_clean,"atb_other"))) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_p_start = start - hct,
abx_p_stop = stop - hct) %>%
filter (abx_p_start > -30 & abx_p_stop < 70)
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn)
abx %>% distinct(mrn)
picked <-  c("azithromycin","cefepime", "ciprofloxacin", "imipenem_cilastatin", "ertapenem","levofloxacin","linezolid","meropenem","metronidazole","piperacillin_tazobactam","sulfamethoxazole_trimethoprim")
abx <- antibiotics_antibacterial_multicenter_ag %>%
filter(institution == 'MSKCC' ) %>%
mutate(mrn = as.numeric(patient_id)) %>%
filter(mrn %in% dtb$mrn) %>%
mutate (drug_clean = if_else (drug_name_clean == "vancomycin",
if_else (route_simple == "oral","vancomycin_oral", "vancomycin_iv"),
if_else (drug_name_clean %in% picked,
drug_name_clean,"atb_other"))) %>%
left_join(ptb %>% select(mrn, hct)) %>%
mutate(abx_p_start = start - hct,
abx_p_stop = stop - hct) %>%
filter (abx_p_start > -30 & abx_p_stop < 70)
View(meta)
abx
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'drug_clean
')
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime')
View(cefepime)
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime')
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime')
View(cefepime)
View(meta)
meta
had_cefepime <- meta %>%
select(sampleid, mrn, sdrt)
View(had_cefepime)
?int_overlaps
cefepime
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('samples_castori_ag')
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection))
View(had_cefepime)
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d))
library(lubridate)
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d))
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop))
had_cefepime
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p2d_int)
# make a table to see what it looks like
cefepime <- abx %>%
filter(drug_clean == 'cefepime') %>%
select(mrn, drug_clean, start, stop) %>%
mutate(drug_int =  interval(start, stop)) %>%
select(-start, -stop)
had_cefepime <- meta %>%
select(sampleid, mrn) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection)) %>%
mutate(p1d = datecollection -1,
p2d = datecollection -2) %>%
mutate(p2d_int = interval(p2d, p1d)) %>%
select(sampleid, mrn, p2d_int)
cross <- had_cefepime %>%
full_join(cefepime)
View(cross)
cross <- had_cefepime %>%
full_join(cefepime, by = "mrn")
cross <- had_cefepime %>%
inner_join(cefepime, by = "mrn")
cross
cross <- had_cefepime %>%
inner_join(cefepime, by = "mrn") %>%
mutate(had_drug = int_overlaps(p2d_int, drug_int))
