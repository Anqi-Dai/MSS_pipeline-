ave_each_fg_prior <- samples_prior %>%
mutate(mean_fg_prior_div =
b_fg_fruit*mean_fg$fg_fruit +
b_fg_meat*mean_fg$fg_meat +
b_fg_milk*mean_fg$fg_milk +
b_fg_oils*mean_fg$fg_oils +
b_fg_egg*mean_fg$fg_egg +
b_fg_grain*mean_fg$fg_grain +
b_fg_sweets*mean_fg$fg_sweets +
b_fg_legume*mean_fg$fg_legume +
b_fg_veggie*mean_fg$fg_veggie +
b_intensityreduced ) %>%
select(mean_fg_prior_div) %>%
mutate(grp = 'ave_each')  %>%
mutate(within_range = if_else(mean_fg_prior_div >= min(log(meta$simpson_reciprocal)) &  mean_fg_prior_div <= max(log(meta$simpson_reciprocal)), T, F))
prior_diversity <- ave_each_fg_prior %>%
gghistogram(x = 'mean_fg_prior_div', fill = 'within_range', color = 'white',
xlab = 'Predicted ln(diversity)\nwith prior distribution',
title = 'Diversity') +
geom_vline(xintercept = min(log(meta$simpson_reciprocal)), linetype = 'dashed') +
geom_vline(xintercept = max(log(meta$simpson_reciprocal)), linetype = 'dashed')  +
theme(legend.position = 'none')
ave_each_fg_prior %>%
count(within_range) %>%
mutate(perc = n/(sum(n))*100)
ggsave('../data/138_div_prior_fg.pdf', width = 3, height = 3, plot = prior_diversity)
post_samples  <- read_csv('../data/138_div_model_fg_post_batch2.csv')
post_samples  <- suppressWarnings(posterior_samples(model_div))
post_coeff <- post_samples %>%
select(starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_fg_','')) %>%
mutate(fgrp1 = case_when(
item ==  'milk' ~ '1',
item == 'meat' ~ '2',
item ==  'egg' ~ '3',
item ==  'legume' ~ '4',
item == 'grain' ~ '5',
item == 'fruit' ~ '6',
item == 'veggie' ~ '7',
item ==  'oils' ~ '8',
item ==  'sweets' ~ '9'
))  %>%
left_join(key %>% select(fgrp1, color, shortname))  %>%
mutate(shortname = fct_reorder(shortname, coeff, .fun=median, .desc = F))
cross0 <- post_coeff %>%
group_by(item) %>%
summarise(q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975)) %>%
mutate(Cross = if_else(q2.5 > 0 | q97.5 < 0, F, T))
div_post <- post_coeff %>%
left_join(cross0) %>%
ggplot(aes(x = coeff, y = shortname, col = Cross)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'ln(diversity) change per 100g of food',
y = '',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none') +
scale_color_manual(values = c("#EC0000", "gray40")) +
theme(axis.text=element_text(size=8, color  = 'black'),
axis.title=element_text(size=8),
aspect.ratio=1)
ggsave('../data/138_div_post_fg.pdf', width = 3, height = 3, plot = div_post)
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg')) %>%
gather('item', 'coeff') %>%
mutate(item_name = case_when(
item ==  'b_intensitynonablative' ~ 'Intensity: nonablative',
item == 'b_intensityablative' ~ 'Intensity: ablative',
item ==  'b_intensityreduced' ~ 'Intensity: reduced',
item ==  'b_empiricalTRUE' ~ 'Empirical abx exposure',
item == 'b_TPNTRUE' ~ 'TPN exposure',
item ==  'b_ENTRUE' ~ 'EN exposure'
)) %>%
mutate(item_name = factor(item_name, levels = c('Intensity: nonablative', 'Intensity: reduced',
'Intensity: ablative', 'TPN exposure','EN exposure',
'Empirical abx exposure'))) %>%
mutate(grp = if_else(str_detect(item_name, 'Intensity'), 'Patient level', 'Sample level'))
# modify it to be the look that we have discussed
diversity_factor <- coeff_bi %>%
ggplot(aes(x = coeff, y = item_name)) +
stat_pointinterval(.width = c(.66, .95)) +
#scale_color_manual(values = c('#EC0000','#00468B')) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
facet_wrap(grp~ . , scales = 'free', dir = 'v') +
labs(x = 'Coefficients',
y = 'Factor variables',
title = 'Diversity') +
theme_classic() +
theme(legend.position = 'none',
strip.background = element_blank(),
strip.text = element_blank(),
aspect.ratio=1/2)
ggsave('../data/138_div_post_bi.pdf', width = 3, height = 3, plot = diversity_factor)
# check1 <-  read_csv('../data/136_check_1_batch_cal.csv')
# check2 <- read_csv('../data/136_check_2_batch_cal_peter.csv')
#
# # find the overlapped food nsc between the two tables
# length(intersect(check1$Food_NSC, check2$Food_NSC))
#
# check1_ <- check1 %>%
#   rename(old_cal  = Calories_kcal) %>%
#   left_join(check2 %>% select(Food_NSC, Por_eaten, Unit, Calories_kcal))
#
# # update the check1 for Peter
# check1new <- check1 %>%
#   left_join(check2 %>% distinct(Food_NSC, Unit) %>% mutate(grp = 'checked ')) %>%
#   filter(is.na(grp)) %>%
#   select(-grp)
#
# check1new %>% write_csv('../data/136_check_1_batch_cal_new.csv')
prior_diversity
ave_each_fg_prior %>%
count(within_range) %>%
mutate(perc = n/(sum(n))*100)
div_post
prior_diversity
prior_diversity
prior_diversity
View(meta)
dtb <- read_csv('../data/149_finalized_dtb2.csv')
## p2d average in macronutrients
# the daily caloric intake :
all_daily_pt <- dtb %>%
group_by(mrn, fdrt) %>%
summarise(total_daily = sum(Calories_kcal))
# the previous two days average for each stool sample
stb_pair <- meta %>%
select(mrn, sdrt) %>%
transmute(mrn = mrn,
p1d = sdrt-1,
p2d = sdrt-2)
mean_p2d_cal <-  function(mrn_, p1d_, p2d_){
df = all_daily_pt %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_cal = sum(total_daily)/2)
return(df)
}
mean_p2d_df_cal <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_cal(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
# the daily total of each nutrients
nutrients <- dtb %>%
select(mrn, fdrt, Protein_g:Sugars_g) %>%
gather('type','gram', Protein_g:Sugars_g) %>%
group_by(mrn, fdrt, type) %>%
summarise(total_daily = sum(gram)) %>%
split(.$type)
mean_p2d_fiber <-  function(mrn_, p1d_, p2d_){
df = nutrients$Fibers_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_fiber = sum(total_daily)/2)
return(df)
}
mean_p2d_carb <-  function(mrn_, p1d_, p2d_){
df = nutrients$Carbohydrates_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_carb = sum(total_daily)/2)
return(df)
}
mean_p2d_fat <-  function(mrn_, p1d_, p2d_){
df = nutrients$Fat_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_fat = sum(total_daily)/2)
return(df)
}
mean_p2d_Protein <-  function(mrn_, p1d_, p2d_){
df = nutrients$Protein_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_Protein = sum(total_daily)/2)
return(df)
}
mean_p2d_Sugars <-  function(mrn_, p1d_, p2d_){
df = nutrients$Sugars_g %>%
filter(mrn == mrn_) %>%
filter(fdrt %in% c(p1d_, p2d_  )) %>%
group_by(mrn) %>%
summarise(ave_Sugars = sum(total_daily)/2)
return(df)
}
mean_p2d_fiber <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_fiber(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_fat <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_fat(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_Protein <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_Protein(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_Sugars <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_Sugars(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
mean_p2d_carb <- pmap(stb_pair, function(mrn, p1d, p2d){
mean_p2d_carb(mrn, p1d, p2d)
}) %>%
set_names(meta %>% pull(sampleid)) %>%
bind_rows(.id = 'sampleid')
p2d_diet <- mean_p2d_df_cal %>%
full_join(mean_p2d_fiber, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_fat, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_Protein, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_Sugars, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_carb, by = c("sampleid", "mrn"))
View(meta)
full <- meta %>%
full_join(p2d_diet, by = c("sampleid", "mrn")) %>%
#full_join(gcts, by = "sampleid") %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(mrn = factor(mrn)) %>%
mutate(ave_fiber = ave_fiber/100,
ave_fat = ave_fat/100,
ave_Protein = ave_Protein/100,
ave_Sugars = ave_Sugars/100,
ave_carb = ave_carb/100,
ave_cal = ave_cal/1000
)
meta
full <- meta %>%
mutate(mrn = as.numeric(mrn)) %>%
full_join(p2d_diet, by = c("sampleid", "mrn")) %>%
#full_join(gcts, by = "sampleid") %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(mrn = factor(mrn)) %>%
mutate(ave_fiber = ave_fiber/100,
ave_fat = ave_fat/100,
ave_Protein = ave_Protein/100,
ave_Sugars = ave_Sugars/100,
ave_carb = ave_carb/100,
ave_cal = ave_cal/1000
)
alpha_macro_fat <- log(simpson_reciprocal) ~ 0 +
ave_fiber +
ave_fat +
ave_Sugars +
intensity +
EN +
TPN +
empirical +
(1 | mrn) +
(1 | timebin)
priors_alpha_macro_fat <- c(
# for the macro nutrients
prior(normal(0, 0.4), class = 'b', coef = "ave_fiber"),
prior(normal(0, 0.4), class = 'b', coef = "ave_fat"),
prior(normal(0, 0.4), class = 'b', coef = "ave_Sugars"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "intensityreduced"),
prior(normal(2, 0.1), class = 'b', coef = "intensityablative"),
prior(normal(2, 0.1), class = 'b', coef = "intensitynonablative"))
# vet the prior
model_alpha_macro_fat  <- brm( alpha_macro_fat,
data = full,
warmup = 1000, iter = 3000,
prior = priors_alpha_macro_fat,
control = list(adapt_delta = 0.99),
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
View(full)
full <- meta %>%
mutate(mrn = as.numeric(mrn)) %>%
full_join(p2d_diet, by = c("sampleid", "mrn"))
p2d_diet
full <- meta %>%
mutate(mrn = as.numeric(mrn)) %>%
full_join(p2d_diet, by = c("sampleid", "mrn"))
p2d_diet <- mean_p2d_df_cal %>%
full_join(mean_p2d_fiber, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_fat, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_Protein, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_Sugars, by = c("sampleid", "mrn")) %>%
full_join(mean_p2d_carb, by = c("sampleid", "mrn"))
View(p2d_diet)
meta
full <- meta %>%
mutate(mrn = as.numeric(mrn)) %>%
full_join(p2d_diet, by = c("sampleid", "mrn"))
meta %>%
mutate(mrn = as.numeric(mrn))
meta <- mean_p2d_df %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative')))
full <- meta %>%
full_join(p2d_diet, by = c("sampleid", "mrn")) %>%
#full_join(gcts, by = "sampleid") %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(mrn = factor(mrn)) %>%
mutate(ave_fiber = ave_fiber/100,
ave_fat = ave_fat/100,
ave_Protein = ave_Protein/100,
ave_Sugars = ave_Sugars/100,
ave_carb = ave_carb/100,
ave_cal = ave_cal/1000
)
alpha_macro_fat <- log(simpson_reciprocal) ~ 0 +
ave_fiber +
ave_fat +
ave_Sugars +
intensity +
EN +
TPN +
empirical +
(1 | mrn) +
(1 | timebin)
priors_alpha_macro_fat <- c(
# for the macro nutrients
prior(normal(0, 0.4), class = 'b', coef = "ave_fiber"),
prior(normal(0, 0.4), class = 'b', coef = "ave_fat"),
prior(normal(0, 0.4), class = 'b', coef = "ave_Sugars"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "intensityreduced"),
prior(normal(2, 0.1), class = 'b', coef = "intensityablative"),
prior(normal(2, 0.1), class = 'b', coef = "intensitynonablative"))
# vet the prior
model_alpha_macro_fat  <- brm( alpha_macro_fat,
data = full,
warmup = 1000, iter = 3000,
prior = priors_alpha_macro_fat,
control = list(adapt_delta = 0.99),
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
post_res <- suppressWarnings(posterior_samples(model_alpha_macro_fat))
post_res %>%  write_csv('../data/138_model_alpha_macro_fat_post.csv')
prior_df <- prior_draws(model_alpha_macro_fat)
prior_df %>%
write_csv('../data/138_model_alpha_macro_fat_prior.csv')
mean_macro <-  full %>%
select(starts_with('ave_')) %>%
summarise_all(funs(mean))
mean_ave_macro_fat_prior <- prior_draws(model_alpha_macro_fat) %>%
mutate(mean_div =
b_ave_fiber * mean_macro$ave_fiber+
b_ave_fat * mean_macro$ave_fat+
b_ave_Sugars * mean_macro$ave_Sugars+
b_intensityreduced ) %>%
select(mean_div) %>%
mutate(grp = 'mean_macro_fat') %>%
rename(prior_res = mean_div) %>%
select(grp, prior_res)
within_perc <- mean_ave_macro_fat_prior %>%
mutate(within = if_else(  between(prior_res, min(log(full$simpson_reciprocal)), max(log(full$simpson_reciprocal))), T, F) ) %>%
count(within) %>%
mutate(perc = round(n/sum(n)*100, 2))
within_perc
macronutrients_alpha_main
# plot the above model post coeff
post_coeff <- read_csv('../data/138_model_alpha_macro_fat_post.csv') %>%
select(starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = case_when(
item ==  'fiber' ~ 'Fibers',
item == 'fat' ~ 'Fat',
TRUE ~ item
))  %>%
mutate(item = fct_reorder(item, coeff, .fun=median, .desc = F))
macronutrients_alpha_main <- post_coeff %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Coefficients',
y = 'Macronutrients',
title = expression(Microbiome~alpha~diversity)) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=axis_text_size),
axis.title=element_text(size=axis_title_size),
aspect.ratio=1)
# plot the above model post coeff
post_coeff <- read_csv('../data/138_model_alpha_macro_fat_post.csv') %>%
select(starts_with('b_ave')) %>%
gather('item', 'coeff') %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = case_when(
item ==  'fiber' ~ 'Fibers',
item == 'fat' ~ 'Fat',
TRUE ~ item
))  %>%
mutate(item = fct_reorder(item, coeff, .fun=median, .desc = F))
macronutrients_alpha_main <- post_coeff %>%
ggplot(aes(x = coeff, y = item)) +
stat_pointinterval(.width = c(.66, .95)) +
geom_vline(xintercept = 0, col = 'black', linetype = 'dashed') +
labs(x = 'Coefficients',
y = 'Macronutrients',
title = expression(Microbiome~alpha~diversity)) +
theme_classic() +
theme(legend.position = 'none') +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=10),
aspect.ratio=1)
macronutrients_alpha_main %>%
write_rds('../data/090_macronutrients_alpha_main.rds')
macronutrients_alpha_main
exp(2)
test <- rnorm(1000, 2, 0.5)
quantile(test, probs = c(0, 0.25, 0.5, 0.75, 1))
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
# what priors I can set
model_formular <- log(simpson_reciprocal) ~ 0 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
intensity +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "intensityreduced"),
prior(normal(2, 0.1), class = 'b', coef = "intensityablative"),
prior(normal(2, 0.1), class = 'b', coef = "intensitynonablative"))
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "intensityreduced"),
prior(normal(2, 0.1), class = 'b', coef = "intensityablative"),
prior(normal(2, 0.1), class = 'b', coef = "intensitynonablative"))
model_div <- brm( model_formular,
data = meta,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 123, sample_prior = T)
# save it for future use
post_res <- suppressWarnings(posterior_samples(model_div))
post_res %>%  write_csv('../data/138_div_model_fg_post_batch2.csv')
# save the results of the prior
samples_prior <- prior_draws(model_div)
samples_prior %>% write_csv('../data/138_div_model_fg_prior_batch2.csv')
