# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.6), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
# for the intercept
prior(normal(-3, 1), class = 'Intercept'))
# vet the prior
model_Enterococcus_cal  <- brm( Enterococcus_cal,
data = full,
warmup = 1000, iter = 3000,
prior = priors_Enterococcus_cal,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
mean_ave_cal <- mean(full$ave_cal)
mean_Enterococcus_cal_prior <- prior_draws(model_Enterococcus_cal) %>%
mutate(mean_ave_Enterococcus_div = Intercept +
b_ave_cal * mean_ave_cal+
b_inten_re ) %>%
select(mean_ave_Enterococcus_div) %>%
mutate(grp = 'mean_ave_genus') %>%
rename(prior_res = mean_ave_Enterococcus_div) %>%
select(grp, prior_res)
mean_Enterococcus_cal_prior %>%
count(prior_res >= min(full$Enterococcus) & prior_res <= max(full$Enterococcus)) %>%
mutate(fraction = round(n /sum(n), 2))  %>%
slice(2) %>%
pull(fraction)
mean_Enterococcus_cal_prior %>%
count(prior_res >= min(full$Enterococcus) & prior_res <= max(full$Enterococcus)) %>%
mutate(fraction = round(n /sum(n), 2))  %>%
slice(2) %>%
pull(fraction)
Enterococcus_cal <- Enterococcus ~ 1 +
ave_cal +
inten_non + inten_ab + inten_re +
EN +
TPN +
empirical +
(1 | mrn) +
(1 | timebin)
priors_Enterococcus_cal <- c(
prior(normal(0, 0.5), class = 'b', coef = "ave_cal"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.6), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
# for the intercept
prior(normal(-3, 1), class = 'Intercept'))
# vet the prior
model_Enterococcus_cal  <- brm( Enterococcus_cal,
data = full,
warmup = 1000, iter = 3000,
prior = priors_Enterococcus_cal,
cores = ncores,
control = list(adapt_delta = 0.99),
chains = 2,
seed = 123, sample_prior = T)
mean_ave_cal <- mean(full$ave_cal)
mean_Enterococcus_cal_prior <- prior_draws(model_Enterococcus_cal) %>%
mutate(mean_ave_Enterococcus_div = Intercept +
b_ave_cal * mean_ave_cal+
b_inten_re ) %>%
select(mean_ave_Enterococcus_div) %>%
mutate(grp = 'mean_ave_genus') %>%
rename(prior_res = mean_ave_Enterococcus_div) %>%
select(grp, prior_res)
mean_Enterococcus_cal_prior %>%
count(prior_res >= min(full$Enterococcus) & prior_res <= max(full$Enterococcus)) %>%
mutate(fraction = round(n /sum(n), 2))  %>%
slice(2) %>%
pull(fraction)
priors_genus_cal <- c(
prior(normal(0, 0.5), class = 'b', coef = "ave_cal"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.6), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
# for the intercept
prior(normal(-3, 1), class = 'Intercept'))
# doing it on all the genera
ret_genus_cal <- target_genera %>%
set_names(target_genera) %>%
purrr::map(function(genus) {
mod =  brm( as.formula(str_glue('{genus}  ~
1 +
ave_cal +
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)')),
data = full,
warmup = 1000, iter = 3000,
prior = priors_genus_cal,
cores = ncores,
chains = 2,
control = list(adapt_delta = 0.99),
seed = 456, sample_prior = T)
})
# save the data
prior_df <- ret_genus_cal %>%
imap(~ prior_draws(.x) ) %>%
bind_rows(.id = 'genus')
prior_df %>%
write_csv('../data/078_genus_cal_model_prior.csv')
post_df <- ret_genus_cal %>%
imap(~ (suppressWarnings(posterior_samples(.x)) %>%
select(-starts_with('r_'))))  %>%
bind_rows(.id = 'genus')
post_df %>%
write_csv('../data/078_genus_cal_model_post.csv')
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave'))
View(post_res_genera)
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item)
# look at the post
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
col_key
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
# look at the post
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 1)
# look at the post
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_cal_ggplot.pdf', width = 8, height = 1)
ggsave('../figs/paper/078_heatmap_genus_36_cal_ggplot.pdf', width = 8, height = 3)
# look at the post
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_cal_ggplot.pdf', width = 8, height = 2)
# look at the post
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_cal_ggplot.pdf', width = 6, height = 3)
# look at the post
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_cal_ggplot.pdf', width = 8, height = 3)
col_key
# look at the post
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_genera, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI < 0 negative', '75% CI > 0 positive')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_cal_ggplot.pdf', width = 8, height = 3)
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('asv_counts_ag')
asv_counts_ag %>% distinct(sampleid) %>% nrow
22125*30
663750/1024
2000*3.5
7648/1024
post_df <- ret_genus_macro %>%
imap(~ (suppressWarnings(posterior_samples(.x)) %>%
select(-starts_with('r_'))))  %>%
bind_rows(.id = 'genus')
post_df <- read_csv('../data/078_genus_macro_model_post.csv')
post_df <- read_csv('../data/078_genus_macro_model_post.csv')
post_res_genera <- post_df %>%
select(genus, starts_with('b_ave')) %>%
gather('item','coeff', names(.)[2]:names(.)[ncol(.)]) %>%
group_by(genus, item) %>%
summarise(q50 = median(coeff),
q2.5 = quantile(coeff, probs = 0.025),
q97.5 = quantile(coeff, probs = 0.975),
q12.5 = quantile(coeff, probs = 0.125),
q87.5 = quantile(coeff, probs = 0.875),
q1.25 = quantile(coeff, probs = 0.0125),
q98.75 = quantile(coeff, probs = 0.9875),
q0.5 = quantile(coeff, probs = 0.005),
q99.5 = quantile(coeff, probs = 0.995)
) %>%
ungroup() %>%
mutate(mark = if_else(q99.5 < 0 | q0.5 > 0, '***', if_else(q98.75 < 0 | q1.25 > 0, '**', if_else(q97.5 < 0 | q2.5 > 0, '*', '')))) %>%
mutate(color = if_else(q87.5 < 0, 'steelblue', if_else(q12.5 > 0, 'maroon', 'white'))) %>%
mutate(item = str_replace(item, 'b_ave_','')) %>%
mutate(item = str_to_title(item))
# trying to order the rows and the columns by similarity in euclidean distances
# make it a numerical matrix and then calculate the distance
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('item', 'q50') %>%
column_to_rownames('genus')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
genus_order <- labels(dend)
# the macro order
dat <- post_res_genera %>%
select(genus:q50) %>%
spread('genus', 'q50') %>%
column_to_rownames('item')
hc <- hclust(dist(dat))
dend <- as.dendrogram(hc)
macro_order <- labels(dend)
post_res_ordered <- post_res_genera %>%
mutate(genus = factor(genus, levels = genus_order),
item = factor(item, levels = macro_order))
col_key <- post_res_genera %>%
ungroup() %>%
distinct(color) %>%
pull(color)
names(col_key) <- col_key
ggplot(post_res_ordered, aes(x = genus, y = item)) +
geom_tile(aes(fill = color,  x = genus, y =  item), alpha = 0.5, color='white', width=0.95, height=0.95) +
geom_text(aes(label = mark, x = genus,y =  item),
nudge_y = -0.1, nudge_x = 0,size = 5) +
scale_fill_manual(values = col_key, labels = c('Less than 75% CI crosses 0','75% CI > 0 positive', '75% CI < 0 negative')) +
theme_light() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(angle=50, hjust=1, size=11),
axis.text.y=element_text(size=11),
axis.title=element_text(size=axis_title_size),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
legend.position = 'top',
legend.key = element_rect( colour = "gray50"),
panel.background = element_blank())
ggsave('../figs/paper/078_heatmap_genus_36_macro_ggplot.pdf', width = 8, height = 3)
