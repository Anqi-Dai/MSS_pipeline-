axis.ticks.x=element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
)
plot_grid(irep, copies,entero_box, byrow = F,
nrow = 2, axis = 'ltbr', align = 'hv', rel_heights = c(2,1))
# customize patient 11
# use the global highest irep value for the highest in the y axis.
irep_highest <- max(entero$ave_irpe) + 0.05
irep_q25 <- quantile(x = entero$ave_irpe, 0.25)
irep_q50 <- quantile(x = entero$ave_irpe, 0.5)
irep_q75 <- quantile(x = entero$ave_irpe, 0.75)
p11 <- names(absl)[11]
xmax = 15
xmin = -5
quantile_annot_df <- tibble(
quant = c('25%','50%','75%'),
height = c(irep_q25, irep_q50, irep_q75)
)
irep = entero %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11) %>%
ggplot(aes(x = sdrt, y = ave_irpe )) +
geom_point() +
labs(title = str_glue('{}')) +
geom_hline(yintercept = irep_q25, linetype = 'dashed') +
#geom_text(data = quantile_annot_df, mapping = aes(x = 14, y = height, label = quant), nudge_y = 0.02, size = 2.5) +
geom_hline(yintercept = irep_q50, linetype = 'dashed') +
geom_hline(yintercept = irep_q75, linetype = 'dashed') +
xlim(xmin, xmax) +
ylim(1, irep_highest) +
labs(x = '',
y = 'Average replication rate')+
theme_classic()+
theme(aspect.ratio=1,
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.grid.major.x = element_line(color = "grey85"),
plot.margin = margin(b=-0.8,unit="cm"))
copies = cts_ %>%
filter(sdrt %in% -5:15) %>%
filter(mrn == p11) %>%
ggplot(aes(x = sdrt, y = entero_copy )) +
geom_point() +
geom_line(aes(x = sdrt, y = entero_copy), linetype = 'solid', size = 1, col = 'black') +
# scale_y_log10(breaks = scales::trans_breaks("log10", function(x) 10^x),
#          labels = scales::trans_format("log10", scales::math_format(10^.x))) +
xlim(xmin, xmax) +
labs(x = 'Day relative to transplant',
y = 'Enterococcus copy\nnumbers') +
theme_classic() +
theme(aspect.ratio=1/2.5,
plot.margin = margin(l=-0.8,unit="cm"),
panel.grid.major.x = element_line(colour = "grey85"))
# a violin plot to show all the entero irep distribution
entero_box <- ggboxplot(entero,  y = "ave_irpe", add = 'jitter',
xlab = '', ylab = 'All Enterococcus replication rate')+
theme_classic() +
ylim(1, irep_highest)+
theme(aspect.ratio=4,
plot.margin = margin(l=-0.8,unit="cm"),
axis.ticks.x=element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
)
plot_grid(irep, copies,entero_box, byrow = F,
nrow = 2, axis = 'ltbr', align = 'hv', rel_heights = c(2,1))
plot_grid(irep, copies,entero_box, byrow = F,labels = c('C',NA, NA),
nrow = 2, axis = 'ltbr', align = 'hv', rel_heights = c(2,1))
irep_p11 <- plot_grid(irep, copies,entero_box, byrow = F,labels = c('C',NA, NA),
nrow = 2, axis = 'ltbr', align = 'hv', rel_heights = c(2,1))
plot_grid(fruit_entero, fruit_all_other, irep_p11,
labels = c('A','B', NA),
axis = 'lbrt', align = 'hv')
irep_p11 <- plot_grid(irep, copies,entero_box, byrow = F,
nrow = 2, axis = 'ltbr', align = 'hv', rel_heights = c(2,1))
plot_grid(fruit_entero, fruit_all_other, irep_p11,
labels = c('A','B', 'C'),
axis = 'lbrt', align = 'hv')
fruit_entero <-combined %>%
filter(str_detect(best_species, 'Enterococcus')) %>%
group_by(sampleid) %>%
summarise(ave_irep = mean(aveirep)) %>%
inner_join(meta) %>%
ggscatter(x = 'fg_fruit', y = 'ave_irep', title = 'Enterococcus only',alpha = 0.7,
ylab = 'Average growth rate\n(iRep estimation)',
xlab = 'Fruit intake in previous 2 days (g)',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n",
label.x.npc = "center", label.y.npc = "bottom", size = 2))   +
theme_classic() +
theme(aspect.ratio = 1)
fruit_all_other <- combined %>%
filter(!str_detect(best_species, 'Enterococcus')) %>%
group_by(sampleid) %>%
summarise(ave_irep = mean(aveirep)) %>%
inner_join(meta) %>%
ggscatter(x = 'fg_fruit', y = 'ave_irep', title = 'Average of all taxa excluding Enterococcus',
alpha = 0.7,
ylab = 'Average growth rate\n(iRep estimation)',
xlab = 'Fruit intake in previous 2 days (g)',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n", size = 2))   +
theme_classic() +
theme(aspect.ratio = 1)
plot_grid(fruit_entero, fruit_all_other, irep_p11,
labels = c('A','B', 'C'),
axis = 'lbrt', align = 'hv')
ggsave('../figs/paper/F3_irep_p11_enterococcus.pdf')
irep_p11 <- plot_grid(irep, copies,entero_box, byrow = F,
nrow = 2, axis = 'ltbr', align = 'hv', rel_heights = c(2,1))
ggsave('../figs/paper/F3_irep_p11_enterococcus.pdf')
irep_p11
ggsave('../figs/paper/F3_irep_p11_enterococcus.pdf', width = 180,
height = 180, units = 'mm', dpi = 400)
irep_p11
ggsave('../figs/paper/F3_irep_p11_enterococcus.pdf', width = 150,
height = 180, units = 'mm', dpi = 400)
ggsave('../figs/paper/F3_irep_p11_enterococcus.pdf', width = 150,
height = 140, units = 'mm', dpi = 400)
plot_grid(fruit_entero, fruit_all_other,
labels = c('A','B'),
axis = 'lbrt', align = 'hv')
fruit_entero <-combined %>%
filter(str_detect(best_species, 'Enterococcus')) %>%
group_by(sampleid) %>%
summarise(ave_irep = mean(aveirep)) %>%
inner_join(meta) %>%
ggscatter(x = 'fg_fruit', y = 'ave_irep', title = 'Enterococcus only',alpha = 0.7,
ylab = 'Average growth rate\n(iRep estimation)',
xlab = 'Fruit intake in previous 2 days (g)',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n",
label.x.npc = "center", label.y.npc = "bottom", size = 2))   +
theme_classic() +
theme(aspect.ratio = 1)
fruit_all_other <- combined %>%
filter(!str_detect(best_species, 'Enterococcus')) %>%
group_by(sampleid) %>%
summarise(ave_irep = mean(aveirep)) %>%
inner_join(meta) %>%
ggscatter(x = 'fg_fruit', y = 'ave_irep', title = 'All taxa excluding Enterococcus',
alpha = 0.7,
ylab = 'Average growth rate\n(iRep estimation)',
xlab = 'Fruit intake in previous 2 days (g)',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n", size = 2))   +
theme_classic() +
theme(aspect.ratio = 1)
plot_grid(fruit_entero, fruit_all_other,
labels = c('A','B'),
axis = 'lbrt', align = 'hv')
ggsave('../figs/paper/F3_irep_p11_enterococcus.pdf', width = 120,
height = 140, units = 'mm', dpi = 400)
ggsave('../figs/paper/F3_irep_p11_enterococcus.pdf', width = 120,
height = 140, units = 'mm', dpi = 400, plot = irep_p11)
ggsave('../figs/paper/094_F3_entero_fruit.pdf', width = 180, units = 'mm', dpi = 400)
entero_top <- plot_grid(fruit_entero, fruit_all_other,
labels = c('A','B'),
axis = 'lbrt', align = 'hv')
ggsave('../figs/paper/094_F3_entero_fruit.pdf', width = 180, units = 'mm', dpi = 400, plot = entero_top)
View(combined)
spp <- combined %>%
count(best_species)
View(spp)
knitr::opts_chunk$set(echo = TRUE)
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
group_by(Sample, best_species) %>%
summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
# all the irep values I got
fns <- list.files('../data/growth/irep/updated_irep/', full.names = T, pattern = '.tsv')
irep <- fns %>%
set_names(fns) %>%
purrr::map(~  read_tsv(file = ., n_max = 1 , col_types = 'cc',  skip = 2, col_names = c('bin','iRep')) %>%  select(iRep) ) %>%
bind_rows(.id = 'fn') %>%
mutate(fn = str_replace(fn, '_irep.tsv$',''),
fn = str_replace(fn, '../data/growth/irep/updated_irep//','')) %>%
separate(fn, into = c('sampleid','samplebin'), sep = '__concat__', remove = T) %>%
mutate(iRep = as.numeric(iRep)) %>%
mutate(samplebin = str_replace(samplebin, '_irep_dastool.tsv','')) %>%
mutate(sbid = str_glue('{sampleid}__{samplebin}'))
full <- read_tsv('../data/growth/bhatpipeline/binning_table_all_full.tsv')
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
group_by(Sample, best_species) %>%
summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
# save a copy of the high quality bins from the growth samples
bins <-  read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
filter(best_species != 'Unclassified') %>%
arrange(Sample,Bin,  best_species) %>%
relocate(best_species, .after = 'Bin')
bins %>%
distinct(Sample,  best_species)
# check the one best species that have multiple irep
tb %>%
count(Sample, best_species, sort = T)
# combined %>%
#   mutate(gt15 = if_else(iRep > 1.5, T, F)) %>%
#   count(gt15) %>%
#   mutate(perc = n/sum(n)*100)
View(tb)
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species)
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
group_by(Sample, best_species, best_level) %>%
summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
# meta data of the samples
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
# join with the meta table
# there are p2d and d0 diet data
combined <- tb %>%
rename(sampleid = Sample) %>%
inner_join(meta , by = "sampleid")
# save this table , very important
combined %>%
write_csv('../data/growth/069_irep_combined_res.csv')
combined <- read_csv('../data/growth/069_irep_combined_res.csv')
spp <- combined %>%
count(best_species, best_level)
combined <- read_csv('../data/growth/069_irep_combined_res.csv')
combined <- read_csv('../data/growth/069_irep_combined_res.csv')
spp <- combined %>%
count(best_species, best_level)
spp
spp <- combined %>%
count(best_species, best_level) %>%
filter(best_level != 'superkingdom')
spp <- combined %>%
count(best_species, best_level) %>%
filter(!best_level %in% c('superkingdom', 'family'))
spp
spp <- combined %>%
count(best_species, best_level) %>%
filter(!best_level %in% c('superkingdom', 'family')) %>%
mutate(cleaned_genus = str_replace(best_species, '[|]',''))
spp
spp <- combined %>%
count(best_species, best_level) %>%
filter(!best_level %in% c('superkingdom', 'family')) %>%
mutate(cleaned_genus = str_replace(best_species, '\\[|\\]',''))
spp
spp <- combined %>%
count(best_species, best_level) %>%
filter(!best_level %in% c('superkingdom', 'family')) %>%
mutate(cleaned_genus = str_replace(best_species, '\\[|\\]',''))
spp
spp <- combined %>%
count(best_species, best_level) %>%
filter(!best_level %in% c('superkingdom', 'family')) %>%
mutate(cleaned_genus = str_replace(best_species, '\\[',''),
cleaned_genus = str_replace(best_species, '\\]',''))
spp
spp <- combined %>%
count(best_species, best_level) %>%
filter(!best_level %in% c('superkingdom', 'family')) %>%
mutate(cleaned_genus = str_replace(best_species, '^\\[',''),
cleaned_genus = str_replace(best_species, '\\]',''))
spp
spp <- combined %>%
count(best_species, best_level) %>%
filter(!best_level %in% c('superkingdom', 'family')) %>%
mutate(cleaned_genus = str_replace(best_species, '^\\[',''),
cleaned_genus = str_replace(cleaned_genus, '\\]',''))
spp
spp <- combined %>%
count(best_species, best_level) %>%
filter(!best_level %in% c('superkingdom', 'family')) %>%
mutate(cleaned_genus = str_replace(best_species, '^\\[',''),
cleaned_genus = str_replace(cleaned_genus, '\\]','')) %>%
mutate(cleaned_genus = str_replace(cleaned_genus, ' .+$',''))
spp <- combined %>%
count(best_species, best_level) %>%
filter(!best_level %in% c('superkingdom', 'family')) %>%
mutate(cleaned_genus = str_replace(best_species, '^\\[',''),
cleaned_genus = str_replace(cleaned_genus, '\\]','')) %>%
mutate(cleaned_genus = str_replace(cleaned_genus, ' .+$',''))
spp
spp %>%
count(cleaned_genus)
c_genus <- spp %>%
count(cleaned_genus)
View(c_genus)
View(combined)
genus_combined <- combined %>%
left_join(spp %>%
select(best_species, cleaned_genus))
View(genus_combined)
genus_combined
genus_combined %>%
gghistogram(x = 'cleaned_genus', y = 'aveirep')
genus_combined %>%
ungroup() %>%
gghistogram(x = 'cleaned_genus', y = 'aveirep')
genus_combined %>%
ungroup() %>%
gghistogram(x = 'cleaned_genus', y = 'aveirep')
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep')
genus_combined %>%
ungroup() %>%
ggviolin(x = 'cleaned_genus', y = 'aveirep', add = 'jitter')
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter')
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter', order = 'cleaned_genus')
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter')
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter') +
theme(
axis.text.x = element_text(angle=90, hjust=1)
)
genus_combined <- combined %>%
left_join(spp %>%
select(best_species, cleaned_genus)) %>%
mutate(cleaned_genus = fct_reorder(cleaned_genus, aveirep, .fun=median, .desc = F))
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter') +
theme(
axis.text.x = element_text(angle=90, hjust=1)
)
genus_combined <- combined %>%
left_join(spp %>%
select(best_species, cleaned_genus)) %>%
mutate(cleaned_genus = fct_reorder(cleaned_genus, aveirep, .fun=median, .desc = T))
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter') +
theme(
axis.text.x = element_text(angle=90, hjust=1)
)
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter',
add.params = list(transparency = 0.5)) +
theme(
axis.text.x = element_text(angle=90, hjust=1)
)
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter',
add.params = list(alpha = 0.5)) +
theme(
axis.text.x = element_text(angle=90, hjust=1)
)
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter',xlab = 'Genus',
ylab = 'Average irep value',
add.params = list(alpha = 0.5)) +
theme(
axis.text.x = element_text(angle=90, hjust=1)
)
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter',xlab = 'Genus',
ylab = 'Average irep value',
add.params = list(alpha = 0.5)) +
theme(
axis.text.x = element_text(angle=45, hjust=1)
)
genus_combined <- combined %>%
inner_join(spp %>%
select(best_species, cleaned_genus)) %>%
mutate(cleaned_genus = fct_reorder(cleaned_genus, aveirep, .fun=median, .desc = T))  %>%
filter()
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'cleaned_genus', y = 'aveirep', add = 'jitter',xlab = 'Genus',
ylab = 'Average irep value',
add.params = list(alpha = 0.5)) +
theme(
axis.text.x = element_text(angle=45, hjust=1)
)
ggsave('../figs/paper/S10_genus_irep_histogram_094_Jan25.pdf', width = 180, height = 120, units = 'mm', dpi = 400)
ggsave('../figs/paper/S10_genus_irep_histogram_094_Jan25.pdf', width = 220, height = 120, units = 'mm', dpi = 400)
ggsave('../figs/paper/S10_genus_irep_histogram_094_Jan25.pdf', width = 250, height = 120, units = 'mm', dpi = 400)
ggsave('../figs/paper/S10_genus_irep_histogram_094_Jan25.pdf', width = 280, height = 120, units = 'mm', dpi = 400)
ggsave('../figs/paper/S10_genus_irep_histogram_094_Jan25.pdf', width = 320, height = 120, units = 'mm', dpi = 400)
genus_combined <- combined %>%
inner_join(spp %>%
select(best_species, cleaned_genus)) %>%
mutate(cleaned_genus = fct_reorder(cleaned_genus, aveirep, .fun=median, .desc = T))
genus_combined <- combined %>%
inner_join(spp %>%
select(best_species, cleaned_genus)) %>%
mutate(cleaned_genus = fct_reorder(cleaned_genus, aveirep, .fun=median, .desc = T)) %>%
add_count(cleaned_genus)
genus_combined <- combined %>%
inner_join(spp %>%
select(best_species, cleaned_genus)) %>%
mutate(cleaned_genus = fct_reorder(cleaned_genus, aveirep, .fun=median, .desc = T)) %>%
add_count(cleaned_genus) %>%
# remove the genus as singletons
filter(n > 1)
genus_combined <- combined %>%
inner_join(spp %>%
select(best_species, cleaned_genus)) %>%
mutate(cleaned_genus = fct_reorder(cleaned_genus, aveirep, .fun=median, .desc = T)) %>%
add_count(cleaned_genus) %>%
# remove the genus as singletons
filter(n > 1) %>%
mutate(xlabel = str_glue('{cleaned_genus}({n})'))
spp <- combined %>%
count(best_species, best_level) %>%
filter(!best_level %in% c('superkingdom', 'family')) %>%
mutate(cleaned_genus = str_replace(best_species, '^\\[',''),
cleaned_genus = str_replace(cleaned_genus, '\\]','')) %>%
mutate(cleaned_genus = str_replace(cleaned_genus, ' .+$',''))
c_genus <- spp %>%
count(cleaned_genus)
genus_combined <- combined %>%
inner_join(spp %>%
select(best_species, cleaned_genus)) %>%
mutate(cleaned_genus = fct_reorder(cleaned_genus, aveirep, .fun=median, .desc = T)) %>%
add_count(cleaned_genus) %>%
# remove the genus as singletons
filter(n > 1) %>%
mutate(xlabel = str_glue('{cleaned_genus} ({n})'))
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'xlabel', y = 'aveirep', add = 'jitter',xlab = 'Genus',
ylab = 'Average irep value',
add.params = list(alpha = 0.5)) +
theme(
axis.text.x = element_text(angle=45, hjust=1)
)
ggsave('../figs/paper/S10_genus_irep_histogram_094_Jan25.pdf', width = 320, height = 120, units = 'mm', dpi = 400)
genus_combined <- combined %>%
inner_join(spp %>%
select(best_species, cleaned_genus)) %>%
add_count(cleaned_genus) %>%
# remove the genus as singletons
filter(n > 1) %>%
mutate(xlabel = str_glue('{cleaned_genus} ({n})')) %>%
mutate(xlabel = fct_reorder(xlabel, aveirep, .fun=median, .desc = T))
genus_combined %>%
ungroup() %>%
ggboxplot(x = 'xlabel', y = 'aveirep', add = 'jitter',xlab = 'Genus',
ylab = 'Average irep value',
add.params = list(alpha = 0.5)) +
theme(
axis.text.x = element_text(angle=45, hjust=1)
)
ggsave('../figs/paper/S10_genus_irep_histogram_094_Jan25.pdf', width = 320, height = 120, units = 'mm', dpi = 400)
