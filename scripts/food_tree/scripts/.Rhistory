add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n", label.x.npc = "left")) +
theme(aspect.ratio = 1,
legend.position = 'none',
legend.title=element_blank())
# put the above two in the same row
library(cowplot)
g <- plot_grid(ave_fruit, ave_sweets,
ncol = 2,
o = 'hv',
#labels = 'AUTO',
axis = 'bltr')
ggsave('../data/123_new_2fam_fig3top_split2.pdf', width = 200, height = 100, units = c("mm"),
dpi = 400, plot = g)
ave_fruit <- them %>%
mutate(ave_fruit = sum_fruits/2) %>%
ggpubr::ggscatter(x = 'ave_fruit', y = 'iRep_zscore',  color = 'genus',palette = 'lancet',
xlab = 'Fruits intake averaged',
ylab = 'Growth rate\n(standardized within genus) ',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n", label.x.npc = "left")) +
theme(aspect.ratio = 1,
legend.position = 'none',
legend.title=element_blank())
ave_sweets <- them %>%
mutate(ave_sweets = sum_sweets/2) %>%
ggpubr::ggscatter(x = 'ave_sweets', y = 'iRep_zscore',  color = 'genus',palette = 'lancet',
xlab = 'Sweets intake averaged',
ylab = 'Growth rate\n(standardized within genus) ',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n", label.x.npc = "left")) +
theme(aspect.ratio = 1,
legend.position = 'none',
legend.title=element_blank())
library(cowplot)
g <- plot_grid(ave_fruit, ave_sweets,
ncol = 2,
o = 'hv',
#labels = 'AUTO',
axis = 'bltr')
ggsave('../data/123_new_2fam_fig3top_split2.pdf', width = 200, height = 100, units = c("mm"),
dpi = 400, plot = g)
ggsave('../data/123_new_2fam_fig3top_split2.jpg', width = 200, height = 100, units = c("mm"),
dpi = 400, plot = g)
library(cowplot)
g <- plot_grid(ave_fruit, ave_sweets,
ncol = 2,
o = 'hv',
#labels = 'AUTO',
axis = 'bltr')
ggsave('../data/123_new_2fam_fig3top_split2.jpg', width = 200, height = 100, units = c("mm"),
dpi = 300, plot = g)
ave_combined <- them %>%
mutate(ave_sugar = sum_sugar/2) %>%
ggpubr::ggscatter(x = 'ave_sugar', y = 'iRep_zscore',  color = 'genus',palette = 'lancet',
xlab = 'Fruits intake averaged',
ylab = 'Growth rate\n(standardized within genus) ',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n", label.x.npc = "left")) +
theme(aspect.ratio = 1,
legend.position = 'none',
legend.title=element_blank())
ave_combined
ggsave('../data/123_new_2fam_fig3top.jpg', height = 3.5, plot = ave_combined)
ggsave('../data/123_new_2fam_fig3top.jpg', height = 2, plot = ave_combined)
ggsave('../data/123_new_2fam_fig3top.jpg', height = 3, plot = ave_combined)
ggsave('../data/123_new_2fam_fig3top.jpg', height = 3, plot = ave_combined)
ave_combined <- them %>%
mutate(ave_sugar = sum_sugar/2) %>%
ggpubr::ggscatter(x = 'ave_sugar', y = 'iRep_zscore',  color = 'genus',palette = 'lancet',
xlab = 'Sweets and fruits intake averaged',
ylab = 'Growth rate\n(standardized within genus) ',
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient.
cor.coeff.args = list(method = "spearman",  label.sep = "\n", label.x.npc = "left")) +
theme(aspect.ratio = 1,
legend.position = 'none',
legend.title=element_blank())
ggsave('../data/123_new_2fam_fig3top.jpg', height = 3, plot = ave_combined)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vdbR)
library(readxl)
library(ggpubr)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
get_table_from_database('asv_annotation_blast_ag')
get_table_from_database('asv_annotation_blast_color_ag')
q <- read_excel('../data/Tsoni_59samples_pool1154_16SqPCR_Results_07112022.xlsx')
updated_q <- q %>%
rename(sampleid=Sample.ID,
copies_16s_per_g_pre = "16S COPIES/G") %>%
mutate(
g = `16S COPY NUMBER`/ copies_16s_per_g_pre,
copies_16s_bounded = ifelse(
`16S COPY NUMBER` < 12800,
(12800*.5),
ifelse(
`16S COPY NUMBER` > 2e8,
1.5 * (2e8),
`16S COPY NUMBER`
)
)
) %>%
mutate(copies_16s_per_g =  copies_16s_bounded/g)  # use the *copies_16s_per_g*
pheno <- read_csv('../data/correct_flourfenicol_biapenem_cfucounts.csv')  # there is one mouse that no stool was collected
# Only C014165 has no stool pellet so it wasn’t given to sequencing.
# C014184: That tube has stool. It just didn’t grow on our plate selective for enterococcus.(no colony count)
sampleids <- asv_alpha_diversity_ag %>%
filter(str_detect(oligos_id, 'pool1154'))
cts <- get_counts_subset(sampleids$sampleid)
cts_entero <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
filter(genus == 'Enterococcus') %>%
full_join(updated_q %>%
select(sampleid  = `Tube ID`, copies_16s_per_g )) %>%
mutate(entero_copy = copies_16s_per_g*relab)  %>%
inner_join(pheno %>%
select(sampleid = TubeID, Treatment:Mouse_identifier, Log_CFUs_per_GramStool )) %>%
inner_join(sampleids %>%
select(sampleid:simpson_reciprocal)) %>%
relocate(relab, .after = simpson_reciprocal) %>%
relocate(entero_copy, .after = relab)  %>%
mutate(abx = str_extract(Treatment, '^.+\\+'),
abx = str_replace(abx, ' \\+', ''),
grouping = str_extract(Treatment, '\\+.+$'),
grouping = str_replace(grouping, '\\+ ', ''),
grouping = factor(grouping, levels = c('Plain Hydrogel','Sucrose','Naked Smoothie','Canned Peaches')) ,
sid = str_glue('{grouping}__Day{Day}__{Mouse_identifier}'),
faceting_var = str_glue('{grouping}__Day{Day}')) %>%
relocate(Log_CFUs_per_GramStool, .before = 'grouping') %>%
relocate(abx, after = 'grouping') %>%
mutate(Log_CFUs_per_GramStool = log10(Log_CFUs_per_GramStool)) %>%
gather('key', 'value', relab:Log_CFUs_per_GramStool) %>%
mutate(key = factor(key, levels = c('Log_CFUs_per_GramStool','entero_copy','relab')))
cts_entero %>%
write_csv('../data/121_mouse_exp.csv')
# to only plotting the Biapenem for now
bia_df <- cts_entero %>%
filter(abx == 'Biapenem')
rows <- bia_df %>%
ggscatter(x = 'sampleid', y = 'value', title = 'Biapenem',
ylab = 'Enterococcus') +
facet_grid(key~ faceting_var, scales = 'free') +
theme_linedraw() +
theme(legend.position = 'none',
strip.background = element_blank(),
axis.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank())
ggsave('../data/121_mouse_exp.pdf', width = 15)
cts_entero <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
filter(genus == 'Enterococcus') %>%
full_join(updated_q %>%
select(sampleid  = `Tube ID`, copies_16s_per_g )) %>%
mutate(entero_copy = copies_16s_per_g*relab)  %>%
inner_join(pheno %>%
select(sampleid = TubeID, Treatment:Mouse_identifier, Log_CFUs_per_GramStool )) %>%
inner_join(sampleids %>%
select(sampleid:simpson_reciprocal)) %>%
relocate(relab, .after = simpson_reciprocal) %>%
relocate(entero_copy, .after = relab)  %>%
mutate(abx = str_extract(Treatment, '^.+\\+'),
abx = str_replace(abx, ' \\+', ''),
grouping = str_extract(Treatment, '\\+.+$'),
grouping = str_replace(grouping, '\\+ ', ''),
grouping = factor(grouping, levels = c('Plain Hydrogel','Sucrose','Naked Smoothie','Canned Peaches')) ,
sid = str_glue('{grouping}__Day{Day}__{Mouse_identifier}'),
faceting_var = str_glue('{grouping}__Day{Day}')) %>%
relocate(Log_CFUs_per_GramStool, .before = 'grouping') %>%
relocate(abx, after = 'grouping') %>%
mutate(Log_CFUs_per_GramStool = log10(Log_CFUs_per_GramStool))
View(cts_entero)
cts_entero <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
filter(genus == 'Enterococcus') %>%
full_join(updated_q %>%
select(sampleid  = `Tube ID`, copies_16s_per_g )) %>%
mutate(entero_copy = copies_16s_per_g*relab)  %>%
inner_join(pheno %>%
select(sampleid = TubeID, Treatment:Mouse_identifier, Log_CFUs_per_GramStool )) %>%
inner_join(sampleids %>%
select(sampleid:simpson_reciprocal)) %>%
relocate(relab, .after = simpson_reciprocal) %>%
relocate(entero_copy, .after = relab)  %>%
mutate(abx = str_extract(Treatment, '^.+\\+'),
abx = str_replace(abx, ' \\+', ''),
grouping = str_extract(Treatment, '\\+.+$'),
grouping = str_replace(grouping, '\\+ ', ''),
grouping = factor(grouping, levels = c('Plain Hydrogel','Sucrose','Naked Smoothie','Canned Peaches')) ,
sid = str_glue('{grouping}__Day{Day}__{Mouse_identifier}'),
faceting_var = str_glue('{grouping}__Day{Day}')) %>%
relocate(Log_CFUs_per_GramStool, .before = 'grouping') %>%
relocate(abx, after = 'grouping') %>%
mutate(Log_CFUs_per_GramStool = log10(Log_CFUs_per_GramStool),
entero_copy = log10(entero_copy)) %>%
gather('key', 'value', relab:Log_CFUs_per_GramStool) %>%
mutate(key = factor(key, levels = c('Log_CFUs_per_GramStool','entero_copy','relab')))
# to only plotting the Biapenem for now
bia_df <- cts_entero %>%
filter(abx == 'Biapenem')
rows <- bia_df %>%
ggscatter(x = 'sampleid', y = 'value', title = 'Biapenem',
ylab = 'Enterococcus') +
facet_grid(key~ faceting_var, scales = 'free') +
theme_linedraw() +
theme(legend.position = 'none',
strip.background = element_blank(),
axis.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank())
ggsave('../data/121_mouse_exp.pdf', width = 15)
cts_entero <- cts %>%
left_join(asv_annotation_blast_ag %>%
select(asv_key, genus)) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
filter(genus == 'Enterococcus') %>%
full_join(updated_q %>%
select(sampleid  = `Tube ID`, copies_16s_per_g )) %>%
mutate(entero_copy = copies_16s_per_g*relab)  %>%
inner_join(pheno %>%
select(sampleid = TubeID, Treatment:Mouse_identifier, Log_CFUs_per_GramStool )) %>%
inner_join(sampleids %>%
select(sampleid:simpson_reciprocal)) %>%
relocate(relab, .after = simpson_reciprocal) %>%
relocate(entero_copy, .after = relab)  %>%
mutate(abx = str_extract(Treatment, '^.+\\+'),
abx = str_replace(abx, ' \\+', ''),
grouping = str_extract(Treatment, '\\+.+$'),
grouping = str_replace(grouping, '\\+ ', ''),
grouping = factor(grouping, levels = c('Plain Hydrogel','Sucrose','Naked Smoothie','Canned Peaches')) ,
sid = str_glue('{grouping}__Day{Day}__{Mouse_identifier}'),
faceting_var = str_glue('{grouping}__Day{Day}')) %>%
relocate(Log_CFUs_per_GramStool, .before = 'grouping') %>%
relocate(abx, after = 'grouping') %>%
mutate(Log_CFUs_per_GramStool = log10(Log_CFUs_per_GramStool),
entero_copy = log10(entero_copy)) %>%
gather('key', 'value', relab:Log_CFUs_per_GramStool) %>%
mutate(key = factor(key, levels = c('Log_CFUs_per_GramStool','entero_copy','relab')))
# to only plotting the Biapenem for now
bia_df <- cts_entero %>%
filter(abx == 'Biapenem')
rows <- bia_df %>%
ggscatter(x = 'sampleid', y = 'value', title = 'Biapenem',
ylab = 'Enterococcus') +
facet_grid(key~ faceting_var, scales = 'free') +
theme_linedraw() +
theme(legend.position = 'none',
strip.background = element_blank(),
axis.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_blank())
dat <- cts %>%
select(asv_key:count_total, count_relative) %>%
left_join(asv_annotation_blast_color_ag %>%
select(asv_key,color_label_group_distinct), by = "asv_key")
# there are some ASVs that don't have a color with it, but can use the color for the genus level
color_group <- dat %>%
split(is.na(.$color_label_group_distinct))
# find the genus for these asv
no_color <- color_group %>%
pluck('TRUE') %>%
distinct(asv_key) %>%
inner_join(asv_annotation_blast_ag %>%
select(asv_key, genus))
# find the colors for these genera
genera_colors <- no_color %>%
distinct(genus) %>%
inner_join(asv_annotation_blast_color_ag %>%
distinct(genus, color_label_group_distinct))
# the full df for the no color genera
no_color_df <- no_color %>%
left_join(genera_colors)
no_color_df_full <- color_group %>%
pluck('TRUE') %>%
select(-color_label_group_distinct) %>%
left_join(no_color_df %>%
select(- genus))
# so if the genus is unknown then it's gonna be assigned "other" gray color
# the question is do we go one taxa level higher or make a new color base and shades for the new asv
# after discussing with Tsoni, we decided that it's ok to assign gray to the unknown genus
# merge the new no_color_df_full to the original df
dat <- bind_rows(
no_color_df_full,
color_group %>%
pluck('FALSE')
) %>% left_join(pheno %>%
select(sampleid = TubeID, Treatment:Mouse_identifier, Log_CFUs_per_GramStool )) %>%
mutate(abx = str_extract(Treatment, '^.+\\+'),
abx = str_replace(abx, ' \\+', ''),
grouping = str_extract(Treatment, '\\+.+$'),
grouping = str_replace(grouping, '\\+ ', ''),
grouping = factor(grouping, levels = c('Plain Hydrogel','Sucrose','Naked Smoothie','Canned Peaches')) ,
sid = str_glue('{grouping}__Day{Day}__{Mouse_identifier}'),
faceting_var = str_glue('{grouping}__Day{Day}'))
dat_bia <- dat %>%
filter(abx == 'Biapenem')
asv_color_set <- asv_annotation_blast_color_ag %>%
distinct(color,color_label_group_distinct,color_label_group,color_base) %>%
select(color_label_group_distinct, color) %>%
deframe()
cbd <- compute_beta_diversity_and_tsne(sampleid = dat_bia$sampleid,
taxonomy = dat_bia$color_label_group_distinct,
count = dat_bia$count);
#compute beta diversity
cbd$compute_beta_diversity()
stacked_bar <- ggplot(dat_bia,aes(sid, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
facet_grid(. ~ faceting_var, scales = 'free') +
theme_linedraw() +
labs(title = '',
y = 'Relative abundance') +
theme(axis.text.x = element_text(angle = 90),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
strip.background = element_blank(),
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
stacked_bar
library(cowplot)
p <- '../../miscellaneous/data//composition_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(p),   scale = 0.9)
legend
top <- plot_grid(stacked_bar, legend, labels = 'none',rel_widths  = c(2, 0.5) )
ggsave('../data/121_bar_human_palette.pdf',
width = 15, plot = stacked_bar)
library(cowplot)
both <- plot_grid(rows, stacked_bar, nrow = 2,align = 'hv', axis = 'lr')
ggsave('../data/121_overlay.pdf',
width = 10, plot = both)
library(tidyverse)
them <- read_csv('../data/sum of sugar intake vs max zscore family(E,E).csv')
View(them)
them %>% distinct(sampleid)
knitr::opts_chunk$set(echo = TRUE)
# save a copy of the high quality bins from the growth samples
bins <-  read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
filter(best_species != 'Unclassified') %>%
arrange(Sample,Bin,  best_species) %>%
relocate(best_species, .after = 'Bin')
View(bins)
bins %>% distinct(Sample)
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
fns <- list.files('../data/growth/irep/updated_irep/', full.names = T, pattern = '.tsv')
irep <- fns %>%
set_names(fns) %>%
purrr::map(~  read_tsv(file = ., n_max = 1 , col_types = 'cc',  skip = 2, col_names = c('bin','iRep')) %>%  select(iRep) ) %>%
bind_rows(.id = 'fn') %>%
mutate(fn = str_replace(fn, '_irep.tsv$',''),
fn = str_replace(fn, '../data/growth/irep/updated_irep//','')) %>%
separate(fn, into = c('sampleid','samplebin'), sep = '__concat__', remove = T) %>%
mutate(iRep = as.numeric(iRep)) %>%
mutate(samplebin = str_replace(samplebin, '_irep_dastool.tsv','')) %>%
mutate(sbid = str_glue('{sampleid}__{samplebin}'))
full <- read_tsv('../data/growth/bhatpipeline/binning_table_all_full.tsv')
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
View(tb)
# all the irep values I got
fns <- list.files('../data/growth/irep/updated_irep/', full.names = T, pattern = '.tsv')
irep <- fns %>%
set_names(fns) %>%
purrr::map(~  read_tsv(file = ., n_max = 1 , col_types = 'cc',  skip = 2, col_names = c('bin','iRep')) %>%  select(iRep) ) %>%
bind_rows(.id = 'fn') %>%
mutate(fn = str_replace(fn, '_irep.tsv$',''),
fn = str_replace(fn, '../data/growth/irep/updated_irep//','')) %>%
separate(fn, into = c('sampleid','samplebin'), sep = '__concat__', remove = T) %>%
mutate(iRep = as.numeric(iRep)) %>%
mutate(samplebin = str_replace(samplebin, '_irep_dastool.tsv','')) %>%
mutate(sbid = str_glue('{sampleid}__{samplebin}'))
full <- read_tsv('../data/growth/bhatpipeline/binning_table_all_full.tsv')
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
View(tb)
tb %>% distinct(Sample)
full <- read_tsv('../data/growth/bhatpipeline/binning_table_all_full.tsv')
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
View(tb)
tb %>% distinct(Sample)
tb %>% distinct(Sample)
View(tb)
tb %>% distinct(Sample)
#151 samples
tb %>% distinct(Sample)
tb %>% distinct(Sample)
#151 samples
#151 samples
tb %>% distinct(Sample)
# all the irep values I got
fns <- list.files('../data/growth/irep/updated_irep/', full.names = T, pattern = '.tsv')
irep <- fns %>%
set_names(fns) %>%
purrr::map(~  read_tsv(file = ., n_max = 1 , col_types = 'cc',  skip = 2, col_names = c('bin','iRep')) %>%  select(iRep) ) %>%
bind_rows(.id = 'fn') %>%
mutate(fn = str_replace(fn, '_irep.tsv$',''),
fn = str_replace(fn, '../data/growth/irep/updated_irep//','')) %>%
separate(fn, into = c('sampleid','samplebin'), sep = '__concat__', remove = T) %>%
mutate(iRep = as.numeric(iRep)) %>%
mutate(samplebin = str_replace(samplebin, '_irep_dastool.tsv','')) %>%
mutate(sbid = str_glue('{sampleid}__{samplebin}'))
full <- read_tsv('../data/growth/bhatpipeline/binning_table_all_full.tsv')
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
tb %>% distinct(Sample)
#151 samples
tb %>% distinct(Sample)
tb %>% distinct(Sample)
