line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
middle_3_umap <- plot_grid(umap_caloric,umap_faith,umap_drt_high_to_low_bin,
labels = c('X'),
nrow = 3,axis = 'lbrt', align = 'hv')
ggsave('../figs/paper/F1_overview_072_umap3_change.pdf',
width = 80,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, plot = middle_3_umap)
umap_pt_size
umap_pt_size
fig1_umap <- df %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'shortname', alpha = 1,size = 0.2 , shape = 16,
xlab = 'TaxUMAP1', ylab = 'TaxUMAP2') +
scale_color_manual(values = color_key) +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(legend.position = "none",
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1) +
guides(colour = guide_legend(override.aes = list(alpha=1)))
# another umap colored by the diet diversity?
another <- df %>%
full_join(faith)
library(viridis)
umap_faith <- another %>%
arrange(desc(n)) %>%
mutate(log10faith = log10(faith_pd + 1)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'faith_pd', alpha = 1,size = umap_pt_size, shape = 16,
xlab = '', ylab = '') +
scale_color_viridis() +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
# another umap colored by the daily caloric intake
umap_cal <- df %>%
full_join(day_calori)
library(viridis)
umap_caloric <- umap_cal %>%
arrange(desc(n)) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'daycal', alpha = 1,size = umap_pt_size , shape = 16,
xlab = '', ylab = '') +
paletteer::scale_color_paletteer_c("viridis::plasma") +
theme_classic() +
#lemon::coord_capped_cart(bottom = 'both', left = 'both') +
theme(
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
umap_caloric
# cuztomizing the times bins of the drt
cutoff = 0 # Day 0 is conveneint but this can be varied
n_groups_pre = 3;  # all HCT days <0 will be split into 3 bins; can vary this number to play
n_groups_post = 6; # all HCT days >0 will be split into 6 bins; can vary this number to play
# split the fdrt into groups:
umap_time <- umap_cal %>%
select(taxumap1, taxumap2, fdrt)
times <- umap_time %>% select( fdrt)
splits <- times %>%
split(.$fdrt <= 0)
pre <- splits %>%
pluck('TRUE') %>%
mutate(bin = cut_number(fdrt, n_groups_pre))
post <- splits %>%
pluck('FALSE') %>%
mutate(bin = cut_number(fdrt, n_groups_post))
both <- bind_rows(pre, post) %>%
distinct(fdrt, .keep_all = T)
umap_time_df <- umap_time %>%
left_join(both)
umap_drt_high_to_low_bin <- umap_time_df %>%
arrange(desc(fdrt)) %>%
#arrange(fdrt) %>%
ggscatter(x = 'taxumap1', y = 'taxumap2', color = 'bin', alpha = 1, size = umap_pt_size, shape = 16,
xlab = '', ylab = '') +
scale_color_manual(values = RColorBrewer::brewer.pal(9,"Spectral"))  +
theme_classic() +
theme(
#legend.position = 'none',
line = element_blank(),
legend.title = element_blank(),
axis.title=element_blank(),
axis.text= element_blank(),
axis.ticks = element_blank(),
aspect.ratio=1)
stool_two <- plot_grid(stool_alpha,stool_alpha,
nrow = 2,axis = 'lbrt', align = 'hv')
bot <- plot_grid(food2, m_panel, fg_panel,  stool_two,
nrow = 1,
align = 'hv',
rel_widths =  c(1,1.2,1.4,1),
#rel_heights = c(1,1),
labels = c('E','F', 'G', "H"),
axis = 'tblr')
top <- plot_grid(tree, fig1_umap, NA,
#labels = c('B', "C", "D"),
nrow = 1, rel_widths = c(1.5,1, 1), axis = 'lbrt', align = 'hv')
# assemble all
f1 <-  plot_grid(top, bot,
rel_heights = c(1,1),
nrow = 2)
ggsave('../figs/paper/F1_overview_072_raw.pdf',
width = 220,
height = 140,
#height = 60,
units = c("mm"),
dpi = 400, plot = f1)
# a sub figure of only the two umaps so tht I can put them into my current version Figure 1
middle_3_umap <- plot_grid(umap_caloric,umap_faith,umap_drt_high_to_low_bin,
labels = c('D'),
nrow = 3,axis = 'lbrt', align = 'hv')
ggsave('../figs/paper/F1_overview_072_umap3.pdf',
width = 80,
height = 100,
#height = 60,
units = c("mm"),
dpi = 400, plot = middle_3_umap)
knitr::opts_chunk$set(echo = TRUE, message = F)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
dtb %>%
distinct(mrn) %>%
write_csv('../data/nutrition_patients_97_mrns.csv', col_names = T)
# the mean food group intake from our data
ave_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean)) %>%
gather
knitr::opts_chunk$set(echo = TRUE, message = F)
library(tidyverse)
library(brms)
library(ggpubr)
library(tidybayes)
library(cowplot)
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
theme_set(theme_tidybayes() + panel_border())
ncores <- parallel::detectCores()
key <- read_csv('../data/cleaned_diet_data/food_group_color_key_final.csv', col_types = 'ccccc')
axis_text_size <- 10
axis_title_size <- 10
dtb %>%
distinct(mrn) %>%
write_csv('../data/nutrition_patients_97_mrns.csv', col_names = T)
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv') %>%
mutate(timebin = cut_width(sdrt, 7, boundary=0, closed = 'left')) %>%
mutate(intensity = factor(intensity, levels = c('nonablative','reduced','ablative'))) %>%
mutate(mrn = factor(mrn)) %>%
mutate(fg_egg = fg_egg/100,
fg_fruit = fg_fruit/100,
fg_grain = fg_grain/100,
fg_legume = fg_legume/100,
fg_meat = fg_meat/100,
fg_milk = fg_milk/100,
fg_oils = fg_oils/100,
fg_sweets = fg_sweets/100,
fg_veggie = fg_veggie/100) %>%
mutate(inten_non = if_else(intensity == 'nonablative', 1, 0),
inten_ab = if_else(intensity == 'ablative', 1, 0),
inten_re = if_else(intensity == 'reduced', 1, 0))
colnames(meta)
glimpse(meta)
meta %>%
select(-mrn, -disease.simple, -admit_wt, -ci) %>%
mutate(inten_non = factor(inten_non),
inten_ab = factor(inten_ab),
inten_re = factor(inten_re)) %>%
summary
# the mean food group intake from our data
ave_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean)) %>%
gather
mean_fg <-  meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(mean))
max_fg <- meta %>%
select(starts_with('fg')) %>%
summarise_all(funs(max))
# what priors I cann set
model_formular <- log(simpson_reciprocal)~
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "inten_re"),
prior(normal(2, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(2, 0.1), class = 'b', coef = "inten_non"))
# samples are drawn solely from the priors ignoring the likelihood
# model_wo_EN  means the usual model that the EN is still a binary variable and not ann inndivicual group
model_div <- brm( model_formular,
data = meta,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
# actually draw samples from the priors
samples_prior <- prior_draws(model_div)
# save it for future use
post_res <- suppressWarnings(posterior_samples(model_div)) %>%
select(-starts_with('r_'))
post_res %>%  write_csv('../data/068_div_model_fg_post.csv')
View(post_res)
model_div
# what priors I cann set
model_formular <- log(simpson_reciprocal)~ 0+
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
# what priors I cann set
model_formular <- log(simpson_reciprocal)~ 1+
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
# what priors I cann set
model_formular <- log(simpson_reciprocal)~ 1+
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
# what priors I cann set
model_formular <- log(simpson_reciprocal)~ 0+
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "inten_re"),
prior(normal(2, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(2, 0.1), class = 'b', coef = "inten_non"))
# samples are drawn solely from the priors ignoring the likelihood
# model_wo_EN  means the usual model that the EN is still a binary variable and not ann inndivicual group
model_div <- brm( model_formular,
data = meta,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
# actually draw samples from the priors
samples_prior <- prior_draws(model_div)
# save it for future use
post_res <- suppressWarnings(posterior_samples(model_div)) %>%
select(-starts_with('r_'))
post_res %>%  write_csv('../data/068_div_model_fg_post.csv')
model_div
model_div
model_div
# extract posterior samples for the coeff
post_samples  <- read_csv('../data/068_div_model_fg_post.csv')
# extract posterior samples for the coeff
post_samples  <- read_csv('../data/068_div_model_fg_post.csv')
View(post_samples)
coeff_bi <- post_samples %>%
select(!starts_with('b_fg'))
View(coeff_bi)
coeff_bi <- post_samples %>%
select(starts_with('b_')) %>%
select(!starts_with('b_fg'))
# what priors I cann set
model_formular <- log(simpson_reciprocal)~ 0+
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
# what priors I cann set
model_formular <- log(simpson_reciprocal)~ -1 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
post_res <- suppressWarnings(posterior_samples(model_div))
# what priors I cann set
model_formular <- log(simpson_reciprocal)~ 1 +
fg_fruit+
fg_meat+
fg_milk+
fg_oils+
fg_egg+
fg_grain+
fg_sweets+
fg_legume+
fg_veggie+
inten_non + inten_ab + inten_re +
empirical+
TPN+
EN+
(1 | mrn) +
(1 | timebin)
get_prior( model_formular,
data = meta)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(2, 0.1), class = 'b', coef = "inten_re"),
prior(normal(2, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(2, 0.1), class = 'b', coef = "inten_non"))
# samples are drawn solely from the priors ignoring the likelihood
# model_wo_EN  means the usual model that the EN is still a binary variable and not ann inndivicual group
model_div <- brm( model_formular,
data = meta,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
priors <- c(# for the food group variables
prior(normal(0, 1), class = 'b', coef = "fg_egg"),
prior(normal(0, 1), class = 'b', coef = "fg_fruit"),
prior(normal(0, 1), class = 'b', coef = "fg_grain"),
prior(normal(0, 1), class = 'b', coef = "fg_legume"),
prior(normal(0, 1), class = 'b', coef = "fg_meat"),
prior(normal(0, 1), class = 'b', coef = "fg_milk"),
prior(normal(0, 1), class = 'b', coef = "fg_oils"),
prior(normal(0, 1), class = 'b', coef = "fg_sweets"),
prior(normal(0, 1), class = 'b', coef = "fg_veggie"),
# for the TPN
prior(normal(0, 0.1), class = 'b', coef = "TPNTRUE"),
# for the EN
prior(normal(0, 0.1), class = 'b', coef = "ENTRUE"),
# for the empirical
prior(normal(0, 0.5), class = 'b', coef = "empiricalTRUE"),
# for the intensity
prior(normal(0, 0.1), class = 'b', coef = "inten_re"),
prior(normal(0, 0.1), class = 'b', coef = "inten_ab"),
prior(normal(0, 0.1), class = 'b', coef = "inten_non"),
prior(normal(2, 0.1), class = 'Intercept'))
# samples are drawn solely from the priors ignoring the likelihood
# model_wo_EN  means the usual model that the EN is still a binary variable and not ann inndivicual group
model_div <- brm( model_formular,
data = meta,
warmup = 1000, iter = 3000,
prior = priors,
cores = ncores,
chains = 2,
seed = 123, sample_prior = T)
# actually draw samples from the priors
samples_prior <- prior_draws(model_div)
# save it for future use
post_res <- suppressWarnings(posterior_samples(model_div)) %>%
select(-starts_with('r_'))
post_res %>%  write_csv('../data/068_div_model_fg_post.csv')
post_res <- suppressWarnings(posterior_samples(model_div))
