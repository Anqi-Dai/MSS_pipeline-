total <- read_csv('../data/08_total_seq_shotgun_FALSE.csv') %>%
mutate(pair = if_else(str_detect(fn, 'R1'), 'R1_beforetrim', 'R2_beforetrim')) %>%
mutate(oligos_id = str_replace(fn, '../data/chi_16s//',''),
oligos_id = str_replace(oligos_id, '_R.+$','')) %>%
select(-fn) %>%
spread('pair', 'totalseq')
View(tot)
View(total)
totalall <- tot %>%
full_join(total)
View(totalall)
totalall <- tot %>%
full_join(total)
totalall
totalall <- tot %>%
full_join(total) %>%
mutate(before_trim_total = R1_beforetrim + R2_beforetrim)
totalall <- tot %>%
full_join(total) %>%
mutate(before_trim_total = R1_beforetrim + R2_beforetrim)
totalall
totalall <- tot %>%
full_join(total) %>%
mutate(before_trim_total = R1_beforetrim + R2_beforetrim,
after_trim_total = R1_aftertrim + R2_aftertrim)
totalall
totalall <- tot %>%
full_join(total) %>%
mutate(before_trim_total = R1_beforetrim + R2_beforetrim,
after_trim_total = R1_aftertrim + R2_aftertrim) %>%
mutate(kept_perc = round(after_trim_total/before_trim_total*100, 2))
totalall
View(tot)
tot %>%
full_join(total)
tot %>%
full_join(total) %>%
mutate(before_trim_total = R1_beforetrim + R2_beforetrim,
after_trim_total = R1_aftertrim + R2_aftertrim)
totalall <- tot %>%
full_join(total) %>%
mutate(before_trim_total = R1_beforetrim + R2_beforetrim,
after_trim_total = R1_aftertrim + R2_aftertrim) %>%
mutate(kept_perc = round(after_trim_total/before_trim_total*100, 2))
totalall
quantile(totalall$kept_perc, probs = seq(0.1, 1, 0.1)) %>%
enframe('quantiles', 'value') %>%
mutate(kept_perc = comma(value)) %>%
select(quantiles, kept_perc) %>%
kbl(caption = 'Percent reads remained after trimming in 16s samples') %>%
kable_styling()
quantile(totalall$kept_perc, probs = seq(0.1, 1, 0.1)) %>%
enframe('quantiles', 'value') %>%
#mutate(kept_perc = comma(value)) %>%
select(quantiles, kept_perc) %>%
kbl(caption = 'Percent reads remained after trimming in 16s samples') %>%
kable_styling()
quantile(totalall$kept_perc, probs = seq(0.1, 1, 0.1)) %>%
enframe('quantiles', 'value') %>%
#mutate(kept_perc = comma(value)) %>%
select(quantiles, kept_perc) %>%
kbl(caption = 'Percent reads remained after trimming in 16s samples') %>%
kable_styling()
quantile(totalall$kept_perc, probs = seq(0.1, 1, 0.1)) %>%
enframe('quantiles', 'value')
quantile(totalall$kept_perc, probs = seq(0.1, 1, 0.1)) %>%
enframe('quantiles', 'value') %>%
mutate(kept_perc = comma(value)) %>%
select(quantiles, kept_perc) %>%
kbl(caption = 'Percent reads remained after trimming in 16s samples') %>%
kable_styling()
quantile(totalall$kept_perc, probs = c(seq(0, 0.1, 0.01), seq(0.1, 1, 0.1))) %>%
enframe('quantiles', 'value') %>%
mutate(kept_perc = comma(value)) %>%
select(quantiles, kept_perc) %>%
kbl(caption = 'Percent reads remained after trimming in 16s samples') %>%
kable_styling()
totalall
quantile(totalall$before_trim_total, probs = seq(0.1, 1, 0.1)) %>%
enframe('quantiles', 'value') %>%
mutate(before_trim_total = comma(value)) %>%
select(quantiles, before_trim_total) %>%
kbl(caption = 'Total number of reads before trimming in 16s samples') %>%
kable_styling()
totalall
quantile(totalall$after_trim_total, probs = seq(0.1, 1, 0.1)) %>%
enframe('quantiles', 'value') %>%
mutate(after_trim_total = comma(value)) %>%
select(quantiles, after_trim_total) %>%
kbl(caption = 'Total number of reads after trimming in 16s samples') %>%
kable_styling()
qual <- read_csv('../data/08_quality_score_shotgun_FALSE.csv')
qual <- read_csv('../data/08_quality_score_shotgun_FALSE.csv')
View(qual)
qual <- read_csv('../data/08_quality_score_shotgun_FALSE.csv') %>%
mutate(fn = str_replace(fn, '../data/chi_16s//','')) %>%
mutate(pair = if_else(str_detect(fn, 'R1'), 'R1', 'R2'))
qualscore <- qual %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail')) %>%
group_by(fn, pair, threshold) %>%
summarise(threshold_count = sum(count)) %>%
spread('threshold', 'threshold_count') %>%
mutate(total_one = fail + pass ) %>%
mutate(pass_perc = round(pass/total_one*100, 2))
View(qualscore)
# compare the quality score of the R1 and R2
qualscore %>%
gghistogram(x = 'pass_perc', bins = 50, color = 'white', fill = 'forestgreen',
title = '% reads that have average quality score > 28 in 16s samples')  +
facet_grid(pair~ .)
read_csv('../data/08_quality_score_shotgun_FALSE.csv')
read_csv('../data/08_quality_score_shotgun_FALSE.csv')
read_csv('../data/08_quality_score_shotgun_FALSE.csv') %>%
mutate(fn = str_replace(fn, '../data/chi_16s//',''),
fn = str_replace(fn, '_fastqc_data.txt',''))
qual <- read_csv('../data/08_quality_score_shotgun_FALSE.csv') %>%
mutate(fn = str_replace(fn, '../data/chi_16s//',''),
fn = str_replace(fn, '_fastqc_data.txt','')) %>%
separate(fn, into = c('oligos_id','pair'), sep = '_')
View(qual)
qual %>% write_csv('../data/11_quality_score_before_trimming_16s.csv')
qual %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail'))
qual %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail')) %>%
group_by(qual, pair, threshold) %>%
summarise(threshold_count = sum(count))
qual %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail')) %>%
group_by(qual, pair, threshold)
qual
qual %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail'))
qual %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail')) %>%
group_by(oligos_id, pair, threshold) %>%
summarise(threshold_count = sum(count))
qualscore <- qual %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail')) %>%
group_by(oligos_id, pair, threshold) %>%
summarise(threshold_count = sum(count)) %>%
spread('threshold', 'threshold_count') %>%
mutate(total_one = fail + pass ) %>%
mutate(pass_perc = round(pass/total_one*100, 2))
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt')
View(aq)
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt')
# after trimming
aq <- read_csv('../data/trimmed_16s/trimmed_seq_quality_score.txt', col_names = F)
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt', col_names = F, delim = ' ')
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt', col_names = F, delim = '\t')
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt', col_names = F, delim = '\t')
aq
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt', col_names = F, delim = '\t' , comment = '>>') %>%
separate(X2, into = c('Count','fn'), sep = ';')
aq
?read_delim
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt', col_names = F, delim = '\t' , comment = '>>#') %>%
separate(X2, into = c('Count','fn'), sep = ';')
aq
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt', col_names = F, delim = '\t' , comment = '>>') %>%
separate(X2, into = c('Count','fn'), sep = ';')
aq
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt', col_names = F, delim = '\t' , comment = '>>') %>%
separate(X2, into = c('Count','fn'), sep = ';') %>%
filter(!str_detect(Count, 'Count'))
aq
View(aq)
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt', col_names = F, delim = '\t' , comment = '>>') %>%
separate(X2, into = c('Count','fn'), sep = ';') %>%
filter(!str_detect(Count, 'Count')) %>%
mutate(fn = str_replace(fn, '/home/daia1/my_workdir/samples/amplicon/fastqc_res/',''),
fn = str_replace(fn, '_filt_seq_quality_score.txt','')) %>%
separate(fn, into = c('oligos_id','pair'), sep = '_')
aq
# after trimming
aq <- read_delim('../data/trimmed_16s/trimmed_seq_quality_score.txt', col_names = F, delim = '\t' , comment = '>>') %>%
separate(X2, into = c('Count','fn'), sep = ';') %>%
filter(!str_detect(Count, 'Count')) %>%
mutate(fn = str_replace(fn, '/home/daia1/my_workdir/samples/amplicon/fastqc_res/',''),
fn = str_replace(fn, '_filt_seq_quality_score.txt','')) %>%
separate(fn, into = c('oligos_id','pair'), sep = '_') %>%
mutate(Count = as.numeric(Count)) %>%
rename(qscore = X1)
aq
aq_score <- aq %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail')) %>%
group_by(oligos_id, pair, threshold) %>%
summarise(threshold_count = sum(Count)) %>%
spread('threshold', 'threshold_count') %>%
mutate(total_one = fail + pass ) %>%
mutate(pass_perc = round(pass/total_one*100, 2))
View(aq_score)
aq %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail'))
aq_score <- aq %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail'))
?spread
aq_score <- aq %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail')) %>%
group_by(oligos_id, pair, threshold) %>%
summarise(threshold_count = sum(Count))
aq_score <- aq %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail')) %>%
group_by(oligos_id, pair, threshold) %>%
summarise(threshold_count = sum(Count)) %>%
spread('threshold', 'threshold_count' ,fill = 0) %>%
mutate(total_one = fail + pass ) %>%
mutate(pass_perc = round(pass/total_one*100, 2))
20374/2
aq %>% write_csv('../data/11_quality_score_after_trimming_16s.csv')
aq_score
View(qualscore)
qualscore %>%
mutate(grp = 'beforetrimming')
aq_score %>%
mutate(grp = 'aftertrimming')
qualscore %>%
mutate(grp = 'beforetrimming')
allscore <- bind_rows(
qualscore %>%
mutate(grp = 'beforetrimming'),
aq_score %>%
mutate(grp = 'aftertrimming')
)
View(allscore)
40748/4
aq_score <- aq %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail')) %>%
group_by(oligos_id, pair, threshold) %>%
summarise(threshold_count = sum(Count)) %>%
spread('threshold', 'threshold_count' ,fill = 0) %>%
mutate(total_one = fail + pass ) %>%
mutate(pass_perc = round(pass/total_one*100, 2))
allscore <- bind_rows(
qualscore %>%
mutate(grp = 'beforetrimming'),
aq_score %>%
mutate(grp = 'aftertrimming')
)
allscore <- bind_rows(
qualscore %>%
mutate(grp = 'beforetrimming'),
aq_score %>%
mutate(grp = 'aftertrimming')
)
40748/4
allscore
allscore
# compare the quality score of the R1 and R2
allscore %>%
gghistogram(x = 'pass_perc', bins = 50, color = 'white', fill = 'forestgreen',
title = '% reads that have average quality score > 28 in 16s samples')  +
facet_grid(pair~ grp)
aq_score
aq_score
aq_score <- aq %>%
mutate(threshold = if_else(qscore >= 28, 'pass', 'fail')) %>%
group_by(oligos_id, pair, threshold) %>%
summarise(threshold_count = sum(Count)) %>%
spread('threshold', 'threshold_count' ,fill = 0) %>%
mutate(total_one = fail + pass ) %>%
mutate(pass_perc = round(pass/total_one*100, 2)) %>%
mutate(pair = if_else(pair == 'F', 'R1', 'R2'))
allscore <- bind_rows(
qualscore %>%
mutate(grp = 'beforetrimming'),
aq_score %>%
mutate(grp = 'aftertrimming')
)
# compare the quality score of the R1 and R2
allscore %>%
gghistogram(x = 'pass_perc', bins = 50, color = 'white', fill = 'forestgreen',
title = '% reads that have average quality score > 28 in 16s samples')  +
facet_grid(pair~ grp)
allscore <- bind_rows(
qualscore %>%
mutate(grp = 'beforetrimming'),
aq_score %>%
mutate(grp = 'aftertrimming')
) %>%
mutate(grp = factor(grp, levels = c('beforetrimming','aftertrimming')))
# compare the quality score of the R1 and R2
allscore %>%
gghistogram(x = 'pass_perc', bins = 50, color = 'white', fill = 'forestgreen',
xlab = '% reads that have average quality score > 28 in each sample',
title = '% reads that have high quality score before and after trimming in 16s samples')  +
facet_grid(pair~ grp)
totalall %>% write_csv('../data/11_total_reads_16s.csv')
View(totalall)
knitr::opts_chunk$set(echo = F, message = F, warning = F)
library(tidyverse)
library(kableExtra)
library(ggpubr)
library(scales)
over <- read_csv('../data/08_adapter_no_hit_FALSE.csv')
View(over)
over <- read_csv('../data/08_adapter_no_hit_FALSE.csv') %>%
filter(str_detect(fn, 'chi_16s'))
View(over)
over <- read_csv('../data/08_adapter_no_hit_FALSE.csv') %>%
filter(str_detect(fn, 'chi_16s')) %>%
mutate(fn = str_replace(fn, '../data/chi_16s//',''))
over
over <- read_csv('../data/08_adapter_no_hit_FALSE.csv') %>%
filter(str_detect(fn, 'chi_16s')) %>%
mutate(fn = str_replace(fn, '../data/chi_16s//','')) %>%
mutate(fn = str_replace(fn, '_fastqc.+$',''))
over
read_csv('../data/08_adapter_no_hit_FALSE.csv') %>%
filter(str_detect(fn, 'chi_16s')) %>%
mutate(fn = str_replace(fn, '../data/chi_16s//','')) %>%
mutate(fn = str_replace(fn, '_fastqc.+$',''))
# the table with the over-represented sequences
over <- read_csv('../data/08_adapter_no_hit_FALSE.csv') %>%
filter(str_detect(fn, 'chi_16s')) %>%
mutate(fn = str_replace(fn, '../data/chi_16s//','')) %>%
mutate(fn = str_replace(fn, '_fastqc.+$','')) %>%
separate(fn, into = c('oligos_id','pair'), sep = '_')
View(over)
over
over
over_df <- over %>%
group_by(oligos_id) %>%
summarise(max_perc = max(percentage))
View(over_df)
over_df
View(over)
quantile(over_df$max_perc, probs = seq(0.1, 1, 0.1)) %>%
enframe('quantiles', 'value') %>%
mutate(max_perc = comma(value)) %>%
select(quantiles, max_perc) %>%
kbl(caption = 'Max perct in primer/adapter in each sample before trimming in 16s samples') %>%
kable_styling()
# how many samples have hits in primer or adapter before trimming in 16s samples
over %>%
distinct(oligos_id) %>%
nrow
over <- read_csv('../data/08_adapter_no_hit_FALSE.csv')
View(over)
over <- read_csv('../data/08_adapter_no_hit_FALSE.csv') %>%
filter(str_detect(fn, 'chi_16s')) %>%
mutate(fn = str_replace(fn, '../data/chi_16s//','')) %>%
mutate(fn = str_replace(fn, '_fastqc.+$','')) %>%
separate(fn, into = c('oligos_id','pair'), sep = '_')
View(over)
over <- read_csv('../data/08_adapter_no_hit_FALSE.csv')
View(over_df)
knitr::opts_chunk$set( message = F, warning = F)
gc <- read_tsv('../data/trimmed_16s/raw_gc_content.txt')
View(gc)
gc <- read_tsv('../data/trimmed_16s/raw_gc_content.txt', col_names = c('oligos_id','gc'), col_types = 'cc')
gc
gc <- read_tsv('../data/trimmed_16s/raw_gc_content.txt', col_names = c('oligos_id','gc'), col_types = 'cc') %>%
mutate(oligos_id = str_replace(oligos_id, '/home/daia1/my_workdir/samples/amplicon/fastqc_res/',''),
oligos_id = str_replace(oligos_id, '_fastqc_data.txt:>>Per sequence GC content','')) %>%
separate(oligos_id, into = c('oligos_id','pair'), sep = '_')
gc
read_tsv('../data/trimmed_16s/raw_gc_content.txt', col_names = c('oligos_id','gc'), col_types = 'cc') %>%
mutate(oligos_id = str_replace(oligos_id, '/home/daia1/my_workdir/samples/amplicon/fastqc_res/',''),
oligos_id = str_replace(oligos_id, '_fastqc_data.txt:>>Per sequence GC content','')) %>%
separate(oligos_id, into = c('oligos_id','pair'), sep = '_')
# before trimming
gc <- read_tsv('../data/trimmed_16s/raw_gc_content.txt', col_names = c('oligos_id','gc'), col_types = 'cc') %>%
mutate(oligos_id = str_replace(oligos_id, '/home/daia1/my_workdir/samples/amplicon/fastqc_res/',''),
oligos_id = str_replace(oligos_id, '_fastqc_data.txt:>>Per sequence GC content','')) %>%
separate(oligos_id, into = c('oligos_id','pair'), sep = '_')
gc
# count the number of fail or pass or warn
gc %>%
count(pair, gc)
9902+  18+267
9902+  18+267
9902+  18+267
9902+  18+267
nrow(unique(gc$oligos_id))
length(unique(gc$oligos_id))
# count the number of fail or pass or warn
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/length(unique(gc$oligos_id))*100, 2))
ength(unique(gc$oligos_id))
length(unique(gc$oligos_id))
# count the number of fail or pass or warn
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/(length(unique(gc$oligos_id)))*100, 2))
# count the number of fail or pass or warn
total_samples <- length(unique(gc$oligos_id))
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/total_samples*100, 2))
# count the number of fail or pass or warn
total_samples <- length(unique(gc$oligos_id))
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/total_samples*100, 2))
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/total_samples*100, 2)) %>%
spread('pair', 'perc')
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/total_samples*100, 2)) %>%
spread('gc', 'perc')
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/total_samples*100, 2))
# count the number of fail or pass or warn
total_samples <- length(unique(gc$oligos_id))
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/total_samples*100, 2)) %>%
spread('gc', 'perc')
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/total_samples*100, 2))
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/total_samples*100, 2))
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/total_samples*100, 2))
gc %>%
count(pair, gc) %>%
mutate(perc = round(n/total_samples*100, 2))
knitr::opts_chunk$set(echo = TRUE)
# load the three tables
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
get_table_from_database('asv_annotation_blast_ag')
View(asv_annotation_blast_ag)
cts <- get_counts_subset(c('02.tp.72'))
View(cts)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
knitr::opts_chunk$set(echo = TRUE, message = F, warning = F)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
get_table_from_database('asv_alpha_diversity_ag')
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
knitr::opts_chunk$set(echo = TRUE)
# load the three tables
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
knitr::opts_chunk$set(echo = TRUE)
# load the three tables
library(vdbR)
connect_database('~/dbConfig.txt')
# load the three tables
library(vdbR)
connect_database('~/dbConfig.txt')
get_table_from_database
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
list_table_from_database()
get_table_from_database('asv_annotation_blast_ag')
View(asv_annotation_blast_ag)
get_counts_subset(c('CS1'))
CS1 <- get_counts_subset(c('CS1'))
View(CS1)
View(CS1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(vdbR)
connect_database()
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database()
get_table_from_database('shotgun_lookup_ad')
View(shotgun_lookup_ad)
knitr::opts_chunk$set(echo = TRUE)
connect_database()
library(vdbR)
connect_database()
list_table_from_database('tsne')
get_table_from_database('tsne_ag')
View(tsne_ag)
