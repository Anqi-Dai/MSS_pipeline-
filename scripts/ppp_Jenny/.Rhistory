full_join(DTB %>% distinct(mrn))
# - can you classify patients based on how many days they had high fiber diet (between days 0 and 21) in 3 groups:
#     - High fiber: at least 4 days of high fiber diet
#     - Mod fiber: 1-3 days of high fiber diet
#     - Low fiber: no high fiber diet
all_patients_groups <- above0.75fiber_days %>%
full_join(DTB %>% distinct(mrn))
View(all_patients_groups)
all_patients_groups
# - can you classify patients based on how many days they had high fiber diet (between days 0 and 21) in 3 groups:
#     - High fiber: at least 4 days of high fiber diet
#     - Mod fiber: 1-3 days of high fiber diet
#     - Low fiber: no high fiber diet
all_patients_groups <- above0.75fiber_days %>%
full_join(DTB %>% distinct(mrn)) %>%
mutate(n = if_else(is.na(n), 0, n))
# - can you classify patients based on how many days they had high fiber diet (between days 0 and 21) in 3 groups:
#     - High fiber: at least 4 days of high fiber diet
#     - Mod fiber: 1-3 days of high fiber diet
#     - Low fiber: no high fiber diet
all_patients_groups <- above0.75fiber_days %>%
full_join(DTB %>% distinct(mrn)) %>%
mutate(n = if_else(is.na(n), 0, n))
?full_join
all_patients_groups %>% filter(is.na(n))
all_patients_groups <- bind_rows(
all_patients_groups %>% filter(!is.na(n)),
all_patients_groups %>% filter(is.na(n)) %>% mutate(n = 0)
)
all_patients_groups <- above0.75fiber_days %>%
full_join(DTB %>% distinct(mrn) )
all_patients_groups <- bind_rows(
all_patients_groups %>% filter(!is.na(n)),
all_patients_groups %>% filter(is.na(n)) %>% mutate(n = 0)
)
# - can you classify patients based on how many days they had high fiber diet (between days 0 and 21) in 3 groups:
#     - High fiber: at least 4 days of high fiber diet
#     - Mod fiber: 1-3 days of high fiber diet
#     - Low fiber: no high fiber diet
all_patients_groups <- above0.75fiber_days %>%
full_join(DTB %>% distinct(mrn) )
all_patients_groups <- bind_rows(
all_patients_groups %>% filter(!is.na(n)),
all_patients_groups %>% filter(is.na(n)) %>% mutate(n = 0)
)
all_patients_groups
all_patients_groups_fiber <- all_patients_groups %>%
mutate(fiber_grp = case_when(
n >= 4 ~ 'High',
n %in% 1:3 ~ 'Mod',
n == 0 ~ 'Low'
))
View(all_patients_groups_fiber)
# find the gvhd of the patients
library(vdbR)
connect_database()
list('patient')
list_table_from_database('patient')
get_table_from_database('patient_allo_ks_20221104')
View(patient_allo_ks_20221104)
pt_clinincal <- patient_allo_ks_20221104 %>%
filter(mrn %in% DTB$mrn)
View(pt_clinincal)
get_table_from_database('patient_allo_ag')
pt_clinincal_old <- patient_allo_ag %>%
filter(mrn %in% DTB$mrn)
colnames(pt_clinincal)
pt_clinincal <- patient_allo_ks_20221104 %>%
filter(mrn %in% DTB$mrn) %>%
select(mrn, gvhd_old)
pt_clinincal_old <- patient_allo_ag %>%
filter(mrn %in% DTB$mrn) %>%
colnames(pt_clinincal_old)
pt_clinincal_old <- patient_allo_ag %>%
filter(mrn %in% DTB$mrn) %>%
colnames(pt_clinincal_old)
pt_clinincal_old <- patient_allo_ag %>%
filter(mrn %in% DTB$mrn) %>%
colnames(pt_clinincal_old)
pt_clinincal_old <- patient_allo_ag %>%
filter(mrn %in% DTB$mrn)
get_table_from_database('patient_allo_ag')
get_table_from_database('patient_allo_ks_20221104')
pt_clinincal <- patient_allo_ks_20221104 %>%
filter(mrn %in% DTB$mrn) %>%
select(mrn, gvhd_old)
pt_clinincal <- patient_allo_ks_20221104 %>%
filter(mrn %in% DTB$mrn) %>%
select(mrn, gvhd_old)
pt_clinincal_old <- patient_allo_ag %>%
filter(mrn %in% DTB$mrn)
colnames(pt_clinincal_old)
pt_clinincal_old <- patient_allo_ag %>%
filter(mrn %in% DTB$mrn)  %>%
select(mrn, gvhd)
length(union(pt_clinincal$mrn, pt_clinincal_old$mrn))
pt_clinincal <- patient_allo_ks_20221104 %>%
filter(mrn %in% DTB$mrn) %>%
select(mrn, gvhd_old)
View(pt_clinincal)
View(pt_clinincal_old)
View(pt_clinincal)
View(pt_clinincal_old)
colnames(patient_allo_ks_20221104)
pt_clinincal <- patient_allo_ks_20221104 %>%
filter(mrn %in% DTB$mrn) %>%
select(mrn, gvhd_old, d100_gvhd)
pt_clinincal <- patient_allo_ks_20221104 %>%
filter(mrn %in% DTB$mrn) %>%
select(mrn, gvhd_old, d100_gvhd)
colnames(patient_allo_ks_20221104)
pt_clinincal <- patient_allo_ks_20221104 %>%
filter(mrn %in% DTB$mrn) %>%
select(mrn, gvhd_old, d100_a_gvhd)
pt_clinincal <- patient_allo_ks_20221104 %>%
filter(mrn %in% DTB$mrn) %>%
select(mrn, gvhd_old, d100_a_gvhd, hct)
pt_clinincal <- patient_allo_ks_20221104 %>%
filter(mrn %in% DTB$mrn) %>%
select(mrn, gvhd_old, d100_a_gvhd, hct)
View(pt_clinincal)
View(pt_clinincal)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3)
View(types)
View(types)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3)
types
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100)
View(types)
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
View(DTB)
types
types
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food))
View(types)
types
types
# find how many food_nsc have each of the "Food"
unique_food <- types %>%
distinct(Food) %>% pull(Food)
dtb_find <- DTB %>%
distinct(Food_NSC)
unique_foodnsc <- DTB %>%
distinct(Food_NSC, Food_code, description)
?str_detect
View(unique_foodnsc)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
unique_foodnsc
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
View(found)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''))
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
View(found)
View(found[["bran"]])
View(found[["cherrie"]])
View(found[["frie"]])
View(found[["fruit"]])
View(found[["goldfish"]])
View(found[["italian wedding"]])
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
# find how many food_nsc have each of the "Food"
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
# the foods that have no matches
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
# find how many food_nsc have each of the "Food"
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
# the foods that have no matches
# the foods that have no matches
notfound <- found %>%
keep( ~ nrow(.) == 0)
View(notfound)
# names of the not found food
names(notfound)
View(unique_foodnsc)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
ood = str_replace(Food, '_$',''))
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
ood = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
Food = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
Food = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
Food = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
Food = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
# find how many food_nsc have each of the "Food"
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
# the foods that have no matches
notfound <- found %>%
keep( ~ nrow(.) == 0)
# names of the not found food
names(notfound)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
Food = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
# find how many food_nsc have each of the "Food"
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
# the foods that have no matches
notfound <- found %>%
keep( ~ nrow(.) == 0)
# names of the not found food
names(notfound)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
Food = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
# find how many food_nsc have each of the "Food"
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
# the foods that have no matches
notfound <- found %>%
keep( ~ nrow(.) == 0)
# names of the not found food
names(notfound)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
Food = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
# find how many food_nsc have each of the "Food"
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
# the foods that have no matches
notfound <- found %>%
keep( ~ nrow(.) == 0)
# names of the not found food
names(notfound)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
Food = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
# find how many food_nsc have each of the "Food"
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
# the foods that have no matches
notfound <- found %>%
keep( ~ nrow(.) == 0)
# names of the not found food
names(notfound)
View(types)
DTB %>% distinct(description)
# names of the not found food
names(notfound)
DTB %>%
distinct(mrn, fdrt)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
Food = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
DTB %>%
distinct(mrn, fdrt)
# find how many food_nsc have each of the "Food"
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
# the foods that have no matches
notfound <- found %>%
keep( ~ nrow(.) == 0)
# names of the not found food
names(notfound)
View(found)
View(found[["blueberry"]])
View(types)
View(types)
DTB
# the distinct ones of the
DTB %>%
distinct(Food_code, description)
# the distinct ones of the
codes <- DTB %>%
distinct(Food_code, description)
View(codes)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
types <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_exclu_UPDATEDJP (1).xlsm', sheet = 3) %>%
mutate(fraction = Percentage/100) %>%
mutate(Food = str_to_lower(Food),
Food = str_replace(Food, 's$',''),
Food = str_replace(Food, '_$',''))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
DTB %>%
distinct(mrn, fdrt)
# find how many food_nsc have each of the "Food"
unique_food <- types %>%
distinct(Food) %>% pull(Food)
unique_foodnsc <- DTB %>%
mutate(Food_NSC = str_to_lower(Food_NSC)) %>%
distinct(Food_NSC, Food_code, description)
found <- unique_food %>%
set_names(unique_food) %>%
map(function(food_str){
unique_foodnsc %>%
filter(str_detect(Food_NSC, food_str))
})
# the foods that have no matches
notfound <- found %>%
keep( ~ nrow(.) == 0)
# names of the not found food
names(notfound)
# the distinct ones of the
codes <- DTB %>%
distinct(Food_code, description)
DTB
# the distinct ones of the
toannotate <- DTB %>%
distinct(Food_code, description, Fibers_g)
View(toannotate)
# names of the not found food
names(DTB)
# to find the unique description/food_code for the fiber subtype annotation
toannotate <- DTB %>%
distinct(Food_code, description, Fibers_g, total_weight)
View(toannotate)
toannotate <- DTB %>%
distinct(Food_code, description, Fibers_g, total_weight)
View(toannotate)
# to find the unique description/food_code for the fiber subtype annotation
toannotate <- DTB %>%
distinct(Food_code, description, Fibers_g) %>%
arrange(Food_code, desc(Fibers_g))
# to find the unique description/food_code for the fiber subtype annotation
toannotate <- DTB %>%
distinct(Food_code, description, Fibers_g) %>%
group_by(Food_code, description) %>%
arrange(desc(Fibers_g), .by_group = T)
# to find the unique description/food_code for the fiber subtype annotation
toannotate <- DTB %>%
distinct(Food_code, description, Fibers_g) %>%
group_by(Food_code, description) %>%
arrange(desc(Fibers_g), .by_group = T) %>%
slice(1)
toannotate <- DTB %>%
distinct(Food_code, description, Fibers_g) %>%
group_by(Food_code, description) %>%
arrange(desc(Fibers_g), .by_group = T) %>%
slice(1)
View(DTB)
toannotate <- DTB %>%
distinct(Food_code, description, Fibers_g)
