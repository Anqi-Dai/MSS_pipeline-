test <- selected %>%
filter(timegrp == 'pre') %>%
distinct(mrn, fdrt, Food_NSC,Por_eaten, Unit, Calories_kcal, Protein_g,  Fibers_g, Sugars_g, Carbohydrates_g, Fat_g) %>%
distinct(Food_NSC,.keep_all = T)
peri <- selected %>%
filter(timegrp == 'peri') %>%
distinct(mrn, fdrt, Food_NSC,Por_eaten, Unit, Calories_kcal, Protein_g,  Fibers_g, Sugars_g, Carbohydrates_g, Fat_g) %>%
distinct(Food_NSC,.keep_all = T)
View(peri)
View(peri)
peri <- selected %>%
filter(timegrp == 'peri') %>%
distinct(mrn, fdrt, Food_NSC,Por_eaten, Unit, Calories_kcal, Protein_g,  Fibers_g, Sugars_g, Carbohydrates_g, Fat_g) %>%
distinct(Food_NSC,.keep_all = T)
View(peri)
dtb
# ok find that data for Peter to review .........
doubt <- dtb %>%
distinct(Food_NSC,Food_code, description, Por_eaten, Unit, Calories_kcal, Protein_g,  Fibers_g, Sugars_g, Carbohydrates_g, Fat_g, Sodium_g )
View(doubt)
# ok find that data for Peter to review .........
doubt <- dtb %>%
distinct(Food_NSC,Food_code, description, Por_eaten, Unit, Calories_kcal, Protein_g,  Fibers_g, Sugars_g, Carbohydrates_g, Fat_g, Sodium_g ) %>%
filter(Fibers_g > 10)
View(doubt)
# ok find that data for Peter to review .........
doubt <- dtb %>%
distinct(Food_NSC,Food_code, description, Por_eaten, Unit, Calories_kcal, Protein_g,  Fibers_g, Sugars_g, Carbohydrates_g, Fat_g, Sodium_g ) %>%
filter(Fibers_g > 10)
doubt <- dtb %>%
distinct(Food_NSC,Food_code, description, Por_eaten, Unit, Calories_kcal, Protein_g,  Fibers_g, Sugars_g, Carbohydrates_g, Fat_g, Sodium_g ) %>%
filter(Fibers_g > 10)
dtb <- read_csv('../../food_tree/data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
doubt <- dtb %>%
distinct(Food_NSC,Food_code, description, Por_eaten, Unit, Calories_kcal, Protein_g,  Fibers_g, Sugars_g, Carbohydrates_g, Fat_g, Sodium_g ) %>%
filter(Fibers_g > 10)
doubt %>% write_csv('../data/02_fiber_questionable.csv')
knitr::opts_chunk$set(echo = TRUE)
# now gather the dl metaphlan results
fns <- list.files('../data/', pattern = '_metaphlan3_profile.txt$', full.names = T)
library(tidyverse)
library(vdbR)
connect_database()
get_table_from_database('shotgun_lookup_ad')
samp <- readxl::read_excel('../data/fiberstudy_patientsamples_shotgun.xlsx')
View(samp)
sampleids <- samp %>%
select(ends_with('id')) %>%
gather() %>%
filter(value != 'NA')
View(sampleids)
length(intersect(shotgun_lookup_ad$sampleid, sampleids$value))
setdiff(sampleids$value, shotgun_lookup_ad$sampleid)
setdiff(sampleids$value, shotgun_lookup_ad$sampleid)
# find if I have already got the metaphlan results for all of those
location <- shotgun_lookup_ad %>%
mutate(sampleid = if_else(sampleid == '1574E_2', '1574E.2', sampleid)) %>%
filter(sampleid %in% sampleids$value) %>%
distinct(sampleid, .keep_all = T)
View(location)
fns <- list.files('../data/human_shotgun/', pattern = '_metaphlan3_profile.txt$', full.names = T)
human <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance) %>%
filter(str_detect(clade_name, 's__')) %>%
mutate(relative_abundance = relative_abundance/100)) %>%
bind_rows(.id = 'fid')
View(human)
human <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance) %>%
filter(str_detect(clade_name, 's__')) %>%
mutate(relative_abundance = relative_abundance/100)) %>%
bind_rows(.id = 'fid') %>%
mutate(fid = str_replace(fid, '../data/human_shotgun//Sample_',''),
fid = str_replace(fid, '_IGO_.+$',''))
human <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
rename(clade_name = names(.)[1]) %>%
select(clade_name, relative_abundance) %>%
filter(str_detect(clade_name, 's__')) %>%
mutate(relative_abundance = relative_abundance/100)) %>%
bind_rows(.id = 'fid') %>%
mutate(fid = str_replace(fid, '../data/human_shotgun//Sample_',''),
fid = str_replace(fid, '_IGO_.+$',''))  %>%
left_join(location %>% select(fid, sampleid)) %>%
select(-fid)
human %>% distinct(sampleid)
human %>% write_csv('../data/human_metaphlan_61samples.csv')
# the alpha diversity
library(ggpubr)
library(vegan)
human
human
cts <- human %>%
spread(key = 'clade_name', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('sampleid')
View(cts)
meta_human <- diversity(cts, index = 'inv') %>%
enframe(name = 'sampleid', value = 'inv')
View(meta_human)
View(dtb)
# find the sdrt of those stool samples
my <- read_csv('../../food_tree/data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
# find the sdrt of those stool samples
my <- read_csv('../../food_tree/data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv') %>%
filter(sampleid %in% sampleids$value)
View(my)
get_table_from_database('samples_castori_ag')
length(intersect(samp$mrn, my$mrn))
ptb <- read_csv('../../food_tree/data/cleaned_patients/diet_patients_97.csv')
length(intersect(samp$mrn, ptb$mrn))
list_table_from_database('ks')
get_table_from_database('patient_allo_ks_20221104')
this <- sampleids %>%
select(sampleid = value) %>%
inner_join(samples_castori_ag %>% select(sampleid, collectiondate))
this <- sampleids %>%
select(sampleid = value) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection))
View(this)
this <- sampleids %>%
select(sampleid = value) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection, mrn))
this <- sampleids %>%
select(sampleid = value) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection, mrn))
this <- sampleids %>%
select(sampleid = value) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection, mrn)) %>%
inner_join(patient_allo_ks_20221104 %>% select(mrn, hct))
this <- sampleids %>%
select(sampleid = value) %>%
inner_join(samples_castori_ag %>% select(sampleid, datecollection, mrn)) %>%
left_join(patient_allo_ks_20221104 %>% select(mrn, hct))
View(patient_allo_ks_20221104)
get_table_from_database('patient_allo_ag')
get_table_from_database('patient_allo_ag')
library(vdbR)
connect_database()
list_table_from_database('patient_allo_ag')
get_table_from_database('patient_allo_ag')
View(patient_allo_ag)
View(samp)
new2 <- read_csv('../../food_tree/data/129_new_76_full_patient_info.csv')
View(new2)
this
fixed <- this %>%
split(is.na(.$hct))
View(fixed)
fixed_ <- bind_rows(
fixed %>% pluck('FALSE'),
fixed %>% pluck('TRUE') %>% select(-hct) %>% inner_join(new2 %>% select(mrn, hct))
)
fixed %>% pluck('TRUE') %>% select(-hct) %>% inner_join(new2 %>% select(mrn, hct))
fixed_ <- bind_rows(
fixed %>% pluck('FALSE'),
fixed %>% pluck('TRUE') %>% select(-hct) %>% inner_join(new2 %>% select(mrn, hct))
)
View(fixed_)
fixed_
fixed_ <- bind_rows(
fixed %>% pluck('FALSE'),
fixed %>% pluck('TRUE') %>% select(-hct) %>% inner_join(new2 %>% select(mrn, hct))
) %>%
mutate(drt = as.numeric(datecollection - hct))
fixed_ <- bind_rows(
fixed %>% pluck('FALSE'),
fixed %>% pluck('TRUE') %>% select(-hct) %>% inner_join(new2 %>% select(mrn, hct))
) %>%
mutate(drt = as.numeric(datecollection - hct)) %>%
mutate(grp = case_when(
drt %in% -8:-6 ~ 'pre_HCT',
drt %in% -1:1 ~ 'peri_HCT',
drt %in% 6:8 ~ 'nadir',
drt %in% 13:15 ~ 'engraftment',
drt %in% 20:22 ~ 'recover'
))
fixed_ %>% write_csv('../data/05_human_samples_meta.csv')
fixed_ <- bind_rows(
fixed %>% pluck('FALSE'),
fixed %>% pluck('TRUE') %>% select(-hct) %>% inner_join(new2 %>% select(mrn, hct))
) %>%
mutate(drt = as.numeric(datecollection - hct)) %>%
mutate(grp = case_when(
drt %in% -8:-6 ~ 'pre_HCT',
drt %in% -1:1 ~ 'peri_HCT',
drt %in% 6:8 ~ 'nadir',
drt %in% 13:15 ~ 'engraftment',
drt %in% 20:22 ~ 'recover'
)) %>%
full_join(meta_human)
View(fixed_)
fixed_ %>% write_csv('../data/05_human_samples_meta.csv')
fixed_
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
add.params = list(color = 'forestgreen', size = 2, alpha = 1, shape = 20))
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
add.params = list(color = 'forestgreen', size = 2, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover)),
label= "p.format",
method= 'wilcox.test',
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
add.params = list(color = 'forestgreen', size = 2, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
add.params = list(color = 'brown', size = 2, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
add.params = list(color = 'darkbrown', size = 2, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
add.params = list(color = 'wood', size = 2, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
add.params = list(color = 'blue', size = 2, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
add.params = list(color = 'darkyellow', size = 2, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
add.params = list(color = 'brown', size = 2, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
title = 'shotgun data human 61 samples',
add.params = list(color = 'brown', size = 2, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
ggsave('../data/05_human_shotgun_alpha_61.pdf', width = 8)
ggsave('../data/05_human_shotgun_alpha_61.pdf', width = 10)
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
title = 'shotgun data human 61 samples',
add.params = list(color = 'brown', size = 1, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
fixed_ %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
title = 'shotgun data human 61 samples',
add.params = list(color = 'brown', size = 1, alpha = 1, shape = 20)) +
#facet_grid(Day ~ grp)  +
stat_compare_means(comparisons= list(c('pre_HCT', 'peri_HCT'),
c('pre_HCT', 'nadir'),
c('pre_HCT', 'engraftment'),
c('pre_HCT', 'recover'),
c('peri_HCT', 'engraftment'),
c('peri_HCT', 'recover')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
ggsave('../data/05_human_shotgun_alpha_61.pdf', width = 10)
View(dtb)
# pre transplant and peri engraftment day -10 to 0;  day 7 -21
# top 10 foods that have the fiber content
dtb <- read_csv('../../food_tree/data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv') %>%
filter(!Food_NSC %in% c('Yogurt,  Plain - (1 Carb)', 'CHICKEN FINGERS'))
selected <- dtb %>%
filter(fdrt %in% -10:0 | fdrt %in% 7:21) %>%
mutate(timegrp = if_else(fdrt <=0, 'pre', 'peri'))
test <- selected %>%
filter(timegrp == 'pre') %>%
distinct(mrn, fdrt, Food_NSC,Por_eaten, Unit, Calories_kcal, Protein_g,  Fibers_g, Sugars_g, Carbohydrates_g, Fat_g) %>%
distinct(Food_NSC,.keep_all = T)
peri <- selected %>%
filter(timegrp == 'peri') %>%
distinct(mrn, fdrt, Food_NSC,Por_eaten, Unit, Calories_kcal, Protein_g,  Fibers_g, Sugars_g, Carbohydrates_g, Fat_g) %>%
distinct(Food_NSC,.keep_all = T)
View(test)
View(doubt)
dir <- '/Volumes/vandenBrinkLab/Diet-Microbiome Projects/Dietary Fiber/Shotgun Data/'
dir <- '/Volumes/vandenBrinkLab/Diet-Microbiome Projects/Dietary Fiber/Shotgun Data/'
fixed_ %>% write_csv(file.path(dir, 'human/5_human_samples_meta.csv'))
dir.create(file.path(dir, 'human'))
fixed_ %>% write_csv(file.path(dir, 'human/5_human_samples_meta.csv'))
ggsave(file.path(dir, 'human/05_human_shotgun_alpha_61.pdf'), width = 10)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
dir <- '/Volumes/vandenBrinkLab/Diet-Microbiome Projects/Dietary Fiber/Shotgun Data/'
meta_mouse <- read_csv('../data/pheno_with_alpha_diversity.csv')
# look at the bar stacked plots at genus level
spp <- read_csv(file.path(dir, 'Mouse/metaphlan_results_fraction.csv'))
genera <- spp %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(relative_abundance)) %>%
ungroup() %>%
mutate(ge = str_extract(genus, 'g__.+$')) %>%
#mutate(ge = fct_reorder(ge, genus, )) %>%
left_join(meta_mouse, by = "sampleid") %>%
mutate(Day = factor(Day, levels = c(1, 7, 14)),
fiber = factor(fiber, c('0%','6%', '12%','40%'))) %>%
arrange(Day, grp, fiber, Box_number) %>%
mutate(sid = str_glue('Day {Day}: {grp}: {fiber}:Box {Box_number}'))
genera %>%
ungroup() %>%
distinct(genus) %>% nrow
# find the genera > 0.01% in more than 10% samples
#  26/59 left
keepgenera <- genera %>%
filter(relab > 0.0001) %>%
count(genus) %>%
filter(n > floor(nrow(meta_mouse) * 0.1)) %>%
pull(genus)
#to find colors for these features
library(randomcoloR)
n <- length(keepgenera)
palette <- distinctColorPalette(n)
pie(rep(1, n), col=palette)
# output this palette otherwise another random generated ...
bar_palette <- genera %>%
filter(genus %in% keepgenera) %>%
distinct(ge) %>%
arrange(ge) %>%
mutate(color = palette)
bar_palette %>% write_csv('../data/bar_palette.csv')
#bar_palette <-  read_csv(file.path(dir, 'Mouse/bar_palette.csv'))
bar_plot_pal <- deframe(bar_palette)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(file.path(dir, 'Mouse/results/bar_all.jpg'), width = 14, height = 7)
#to find colors for these features
library(randomcoloR)
n <- length(keepgenera)
palette <- distinctColorPalette(n)
pie(rep(1, n), col=palette)
# output this palette otherwise another random generated ...
bar_palette <- genera %>%
filter(genus %in% keepgenera) %>%
distinct(ge) %>%
arrange(ge) %>%
mutate(color = palette)
bar_palette %>% write_csv('../data/bar_palette.csv')
#bar_palette <-  read_csv(file.path(dir, 'Mouse/bar_palette.csv'))
bar_plot_pal <- deframe(bar_palette)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(file.path(dir, 'Mouse/results/bar_all.jpg'), width = 14, height = 7)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
dir <- '/Volumes/vandenBrinkLab/Diet-Microbiome Projects/Dietary Fiber/Shotgun Data/'
meta_mouse <- read_csv('../data/pheno_with_alpha_diversity.csv')
# look at the bar stacked plots at genus level
spp <- read_csv(file.path(dir, 'Mouse/metaphlan_results_fraction.csv'))
genera <- spp %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(relative_abundance)) %>%
ungroup() %>%
mutate(ge = str_extract(genus, 'g__.+$')) %>%
#mutate(ge = fct_reorder(ge, genus, )) %>%
left_join(meta_mouse, by = "sampleid") %>%
mutate(Day = factor(Day, levels = c(1, 7, 14)),
fiber = factor(fiber, c('0%','6%', '12%','40%'))) %>%
arrange(Day, grp, fiber, Box_number) %>%
mutate(sid = str_glue('Day {Day}: {grp}: {fiber}:Box {Box_number}'))
genera %>%
ungroup() %>%
distinct(genus) %>% nrow
# find the genera > 0.01% in more than 10% samples
#  26/59 left
keepgenera <- genera %>%
filter(relab > 0.0001) %>%
count(genus) %>%
filter(n > floor(nrow(meta_mouse) * 0.1)) %>%
pull(genus)
#to find colors for these features
library(randomcoloR)
n <- length(keepgenera)
palette <- distinctColorPalette(n)
pie(rep(1, n), col=palette)
# output this palette otherwise another random generated ...
bar_palette <- genera %>%
filter(genus %in% keepgenera) %>%
distinct(ge) %>%
arrange(ge) %>%
mutate(color = palette)
bar_palette %>% write_csv('../data/bar_palette.csv')
#bar_palette <-  read_csv(file.path(dir, 'Mouse/bar_palette.csv'))
bar_plot_pal <- deframe(bar_palette)
# all samples
genera %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave(file.path(dir, 'Mouse/results/bar_all.jpg'), width = 14, height = 7)
