DTB %>% filter(Meal == 'Enteral nutrition') %>% distinct(Food_code)
setdiff(toannotate$Food_code, unit$Food_code)
unit %>% distinct(Food_code)
unit %>% distinct(Food_code)
setdiff(toannotate$Food_code, unit$Food_code)
DTB %>% filter(Meal == 'Enteral nutrition') %>% distinct(Food_code)
unit
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T)
View(units)
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fibers_g), .by_group = T) %>%
slice(1)
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1)
View(units)
unit %>% distinct(Food_code)
View(units)
units
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2))
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
filter(fiber_perc > 0)
View(units)
units
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
filter(fiber_perc > 0) %>%
select(Food_NSC:description, Fiber_psu, fiber_perc)
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
filter(fiber_perc > 0) %>%
select(Food_NSC:description, Fiber_psu, fiber_perc) %>%
arrange(Food_code)
View(unit)
View(units)
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
filter(fiber_perc > 0) %>%
select(Food_NSC:description, Fiber_psu, fiber_perc) %>%
arrange(Food_code)
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
filter(fiber_perc > 0) %>%
select(Food_NSC:description, Fiber_psu, fiber_perc)
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
filter(fiber_perc > 0) %>%
select(Food_NSC:description, Fiber_psu, fiber_perc)
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
filter(fiber_perc > 0) %>%
select(Food_NSC:description, Fiber_psu, fiber_perc) %>%
arrange(Food_code)
DTB %>% filter(Meal == 'Enteral nutrition') %>% distinct(Food_code)
View(DTB)
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition')
View(en_unit)
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T)
View(en_unit)
units
en_unit
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten)
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2))
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
select(Food_NSC:description, Fiber_psu, fiber_perc) %>%
arrange(Food_NSC)
en_unit
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
select(Food_NSC, Unit, Food_code,description, Fiber_psu, fiber_perc) %>%
arrange(Food_NSC)
en_unit
# to find the unique description/food_code for the fiber subtype annotation
toannotate <- DTB %>%
distinct(Food_code, description, Fibers_g) %>%
group_by(Food_code, description) %>%
arrange(desc(Fibers_g), .by_group = T) %>%
slice(1)
anyfiber <- toannotate %>%
filter(Fibers_g > 0)
# unit table
unit <- read_csv('../../food_tree/data/148_both_batches_UNIT_table_EN_exclu.csv')
unit %>% distinct(Food_code)
DTB %>% filter(Meal == 'Enteral nutrition') %>% distinct(Food_code)
setdiff(toannotate$Food_code, unit$Food_code)
# find the things that have the
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
filter(fiber_perc > 0) %>%
select(Food_NSC:description, Fiber_psu, fiber_perc) %>%
arrange(Food_code)
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
select(Food_NSC, Unit, Food_code,description, Fiber_psu, fiber_perc) %>%
arrange(Food_NSC)
all_units <- bind_rows(en_unit, units)
View(all_units)
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
select(Food_NSC, Unit, Food_code,description, Fiber_psu, fiber_perc) %>%
arrange(Food_NSC)
all_units <- bind_rows(en_unit, units)
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
select(Food_NSC, Unit, Food_code,description, Fiber_psu, fiber_perc) %>%
arrange(Food_NSC)
all_units <- bind_rows(en_unit, units)
View(en_unit)
View(DTB)
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
select(Food_NSC, Unit, Food_code,description, Fiber_psu, fiber_perc) %>%
arrange(Food_NSC) %>%
filter(fiber_perc > 0)
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
select(Food_NSC, Unit, Food_code,description, Fiber_psu, fiber_perc) %>%
arrange(Food_NSC)
View(en_unit)
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
select(Food_NSC, Unit, Food_code,description, Fiber_psu, fiber_perc) %>%
arrange(Food_NSC) %>%
filter(fiber_perc > 0)
all_units <- bind_rows(en_unit, units)
# to find the unique description/food_code for the fiber subtype annotation
toannotate <- DTB %>%
distinct(Food_code, description, Fibers_g) %>%
group_by(Food_code, description) %>%
arrange(desc(Fibers_g), .by_group = T) %>%
slice(1)
anyfiber <- toannotate %>%
filter(Fibers_g > 0)
# unit table
unit <- read_csv('../../food_tree/data/148_both_batches_UNIT_table_EN_exclu.csv')
unit %>% distinct(Food_code)
DTB %>% filter(Meal == 'Enteral nutrition') %>% distinct(Food_code)
setdiff(toannotate$Food_code, unit$Food_code)
# find the things that have the
units <- unit %>%
distinct(Food_code, description, Fiber_psu, dehydrated_psu, .keep_all = T) %>%
group_by(Food_code, description) %>%
arrange(desc(Fiber_psu), .by_group = T) %>%
slice(1) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
filter(fiber_perc > 0) %>%
select(Food_NSC:description, Fiber_psu, fiber_perc) %>%
arrange(Food_code)
# add the 5 EN ones
en_unit <- DTB %>% filter(Meal == 'Enteral nutrition') %>%
mutate(description = if_else(Food_NSC == 'Suplena 1.8', 'Enteral formula, suplena', description)) %>%
distinct(Food_NSC,Unit, Food_code, description, .keep_all = T) %>%
mutate(Fiber_psu = Fibers_g/Por_eaten,
dehydrated_psu = dehydrated_weight/Por_eaten) %>%
mutate(fiber_perc = round(Fiber_psu/dehydrated_psu*100, 2)) %>%
select(Food_NSC, Unit, Food_code,description, Fiber_psu, fiber_perc) %>%
arrange(Food_NSC) %>%
filter(fiber_perc > 0)
all_units <- bind_rows(en_unit, units)
View(all_units)
View(all_units)
all_units <- bind_rows(en_unit, units) %>% arrange(Food_code)
all_units %>% write_csv('../data/09_unit_serving_food_fiber.csv')
View(all_units)
# ok Jenny sent a table, found the missing ones
jenny <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_Fiber_Types_JP.xlsm')
View(jenny)
# ok Jenny sent a table, found the missing ones
jenny <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_Fiber_Types_JP.xlsm', sheet = 3)
View(jenny)
# find the missing ones
length(intersect(jenny$Food_code, all_units$Food_code))
View(jenny)
# find the missing ones
length(intersect(jenny$Food_code, all_units$Food_code))
setdiff(jenny$Food_code, all_units$Food_code)
setdiff( all_units$Food_code, jenny$Food_code)
need <- all_units %>%
filter(! Food_code %in% jenny$Food_code)
setdiff( all_units$Food_code, jenny$Food_code)
View(need)
need <- all_units %>%
filter(! Food_code %in% jenny$Food_code)
need <- all_units %>%
filter(! Food_code %in% jenny$Food_code) %>%
arrange(Food_code)
View(need)
need %>% write_csv('../data/09_more_need_info.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
type1 <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_Fiber_Types_JP.xlsm', sheet = 3)
View(type1)
type2 <- readxl::read_excel('../data/09_more_need_info_Fiber_types_jenny.xlsx')
View(type2)
type1 <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_Fiber_Types_JP.xlsm', sheet = 3) %>%
clean_names
??clean_names
type1 <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_Fiber_Types_JP.xlsm', sheet = 3) %>%
janitor::clean_names
install.packages('janitor')
type1 <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_Fiber_Types_JP.xlsm', sheet = 3) %>%
janitor::clean_names()
View(type1)
type2 <- readxl::read_excel('../data/09_more_need_info_Fiber_types_jenny.xlsx') %>% janitor::clean_names()
type1
type1 <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_Fiber_Types_JP.xlsm', sheet = 3) %>%
janitor::clean_names() %>%
rename(soluble = soluble_yes_or_not)
type1
full <- type1 %>%
select(food_code, description,fiber_type, soluble )
type1 %>%
select(food_code, description,fiber_type, soluble )
View(type1)
full <- bind_rows(
type1 %>%
select(food_code, description,fiber_type, soluble ) ,
type2
)
type2
type2
full <- bind_rows(
type1 %>% select(food_code, description,fiber_type, soluble ) ,
type2 %>% select(food_code, description,fiber_type, soluble )
)
View(full)
full <- bind_rows(
type1 %>% select(food_code, description,fiber_type, soluble ) ,
type2 %>% select(food_code, description,fiber_type, soluble )
) %>% distinct()
View(full)
View(full)
View(full)
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
# have I got all of the foodcode
length(intersect(full$food_code, DTB$Food_code))
all_need <- read_csv('../data/09_unit_serving_food_fiber.csv')
View(all_need)
View(full)
# have I got all of the foodcode
length(intersect(full$food_code, all_need$Food_code))
# have I got all of the foodcode
length(intersect(full$food_code, all_need$Food_code))
# what is the missing one
setdiff(full$food_code, all_need$Food_code)
# what is the missing one
setdiff( all_need$Food_code, full$food_code)
# what is the missing one
setdiff( all_need$Food_code, full$food_code)
all_need <- read_csv('../data/09_unit_serving_food_fiber.csv') %>%
distinct(Food_code, .keep_all = T)
all_need <- read_csv('../data/09_unit_serving_food_fiber.csv') %>%
distinct(Food_code, .keep_all = T)
# have I got all of the foodcode
length(intersect(full$food_code, all_need$Food_code))
View(full)
full
View(all_need)
allfibertype <- full %>%
filter(food_code %in% all_need$Food_code)
View(full)
dups <- full %>%
filter(duplicated(food_code))
View(dups)
full
# all types of fiber
alltype <- full %>%
count(fiber_type, sort = T)
View(alltype)
dupsdf <- full %>%
filter(food_code %in% dups$food_code)
View(dupsdf)
dupsdf %>% write_csv('../data/10_duplicated_6.csv')
full
full <- bind_rows(
type1 %>% select(food_code, description,fiber_type, soluble ) ,
type2 %>% select(food_code, description,fiber_type, soluble )
) %>% distinct() %>%
# correct some stupid misspelling
mutate(fiber_type = if_else(fiber_type == 'Ligning', 'Lignin',fiber_type))
allfibertype <- full %>%
filter(food_code %in% all_need$Food_code)
# all types of fiber
alltype <- full %>%
count(fiber_type, sort = T)
View(allfibertype)
View(DTB)
# after the dups have been removed
# calculate daily intake of each food code
dailycode <- DTB %>%
group_by(mrn, fdrt, Food_code)
View(dailycode)
# after the dups have been removed
# calculate daily intake of each food code
dailycode <- DTB %>%
group_by(mrn, fdrt, Food_code) %>%
summarise(dcodefiber = sum(Fibers_g))
View(dailycode)
allfibertype <- full %>%
filter(food_code %in% all_need$Food_code) %>%
distinct(food_code, .keep_all = T)
View(allfibertype)
# after the dups have been removed
# calculate daily intake of each food code
dailycode <- DTB %>%
group_by(mrn, fdrt, Food_code) %>%
summarise(dcodefiber = sum(Fibers_g)) %>%
janitor::clean_names()
View(dailycode)
View(dailycode)
dtb <- DTB %>% select(-mrn)
View(dtb)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# the cleaned dups
cleaneddup <- readxl::read_excel('../data/10_duplicated_6_Corrected_JP.xlsx')
View(cleaneddup)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
type1 <- readxl::read_excel('../data/148_both_batches_UNIT_table_EN_Fiber_Types_JP.xlsm', sheet = 3) %>%
janitor::clean_names() %>%
rename(soluble = soluble_yes_or_not)
type2 <- readxl::read_excel('../data/09_more_need_info_Fiber_types_jenny.xlsx') %>% janitor::clean_names()
full <- bind_rows(
type1 %>% select(food_code, description,fiber_type, soluble ) ,
type2 %>% select(food_code, description,fiber_type, soluble )
) %>% distinct() %>%
# correct some stupid misspelling
mutate(fiber_type = if_else(fiber_type == 'Ligning', 'Lignin',fiber_type))
DTB <- read_csv('../../food_tree/data/152_combined_DTB.csv')
all_need <- read_csv('../data/09_unit_serving_food_fiber.csv') %>%
distinct(Food_code, .keep_all = T)
# have I got all of the foodcode
length(intersect(full$food_code, all_need$Food_code))
# what is the missing one
setdiff( all_need$Food_code, full$food_code)
# so I have got all of the data ! good
View(full)
View(cleaneddup)
# merge it into the df
completetype <- bind_rows(
full %>%
filter(!food_code %in% dups$food_code),
cleaneddup
)
dups <- full %>%
filter(duplicated(food_code))
allfibertype <- full %>%
filter(food_code %in% all_need$Food_code) %>%
distinct(food_code, .keep_all = T)
# all types of fiber
alltype <- full %>%
count(fiber_type, sort = T)
dupsdf <- full %>%
filter(food_code %in% dups$food_code)
dupsdf %>% write_csv('../data/10_duplicated_6.csv')
# merge it into the df
completetype <- bind_rows(
full %>%
filter(!food_code %in% dups$food_code),
cleaneddup
)
View(completetype)
# all types of fiber
alltype <- completetype %>%
count(fiber_type, sort = T)
View(alltype)
completetype %>% write_csv('../data/patients_16s_data/10_patients_foods_fiber_type_all.csv')
completetype %>% write_csv('../data/patients_16s_data/10_patients_foods_fiber_type_all.csv')
completetype %>% write_csv('../data/10_patients_foods_fiber_type_all.csv')
View(DTB)
# after the dups have been removed
# calculate daily intake of each food code
dailycode <- DTB %>%
group_by(mrn, fdrt, Food_code) %>%
summarise(dcodefiber = sum(Fibers_g)) %>%
janitor::clean_names()
View(dailycode)
View(dups)
dailycode <- DTB %>%
group_by(mrn, fdrt, Food_code) %>%
summarise(dcodefiber = sum(Fibers_g)) %>%
janitor::clean_names()
View(dailycode)
View(completetype)
# after the dups have been removed
# calculate daily intake of each food code
dailycode <- DTB %>%
group_by(mrn, fdrt, Food_code) %>%
summarise(dcodefiber = sum(Fibers_g)) %>%
janitor::clean_names() %>%
left_join(completetype)
# after the dups have been removed
# calculate daily intake of each food code
dailycode <- DTB %>%
group_by(mrn, fdrt, Food_code) %>%
summarise(dcodefiber = sum(Fibers_g)) %>%
janitor::clean_names() %>%
left_join(completetype, by = "food_code")
dailycode <- DTB %>%
group_by(mrn, fdrt, Food_code) %>%
summarise(dcodefiber = sum(Fibers_g)) %>%
janitor::clean_names()
# after the dups have been removed
# calculate daily intake of each food code
dailycode <- DTB %>%
group_by(mrn, fdrt, Food_code) %>%
summarise(dcodefiber = sum(Fibers_g)) %>%
janitor::clean_names() %>%
filter(dcodefiber > 0)
# after the dups have been removed
# calculate daily intake of each food code
dailycode <- DTB %>%
group_by(mrn, fdrt, Food_code) %>%
summarise(dcodefiber = sum(Fibers_g)) %>%
janitor::clean_names() %>%
filter(dcodefiber > 0) %>%
left_join(completetype, by = "food_code")
