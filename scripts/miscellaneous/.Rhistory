knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# clean the irep values of those samples
fns <- list.files('../data/cart_irep/', full.names = T, pattern = 'dastools')
# clean the irep values of those samples
fns <- list.files('../data/cart_irep/', full.names = T, pattern = 'dastool')
# clean the irep values of those samples
fns <- list.files('../data/cart_irep/', full.names = T, pattern = 'dastool')
fns
fns <- list.files('../data/cart_irep/', full.names = T, pattern = 'dastool')
irep <- fns %>%
set_names(fns) %>%
purrr::map(~  read_tsv(file = ., n_max = 1 , col_types = 'cc',  skip = 2, col_names = c('bin','iRep')) %>%  select(iRep) ) %>%
bind_rows(.id = 'fn') %>%
mutate(fn = str_replace(fn, '_irep.tsv$',''),
fn = str_replace(fn, '../data/cart_irep//','')) %>%
separate(fn, into = c('sampleid','samplebin'), sep = '__concat__', remove = T) %>%
mutate(iRep = as.numeric(iRep)) %>%
mutate(samplebin = str_replace(samplebin, '_irep_dastool.tsv','')) %>%
mutate(sbid = str_glue('{sampleid}__{samplebin}'))
View(irep)
View(irep)
full <- read_tsv('../data/cart_irep/binning_table_all_full.tsv')
View(full)
tb <- read_tsv('../data/cart_irep/binning_table_all_simple.tsv')
View(tb)
tb <- read_tsv('../data/cart_irep/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
# clean the irep values of those samples
fns <- list.files('../data/cart_irep/', full.names = T, pattern = 'dastool')
irep <- fns %>%
set_names(fns) %>%
purrr::map(~  read_tsv(file = ., n_max = 1 , col_types = 'cc',  skip = 2, col_names = c('bin','iRep')) %>%  select(iRep) ) %>%
bind_rows(.id = 'fn') %>%
mutate(fn = str_replace(fn, '_irep.tsv$',''),
fn = str_replace(fn, '../data/cart_irep//','')) %>%
separate(fn, into = c('sampleid','samplebin'), sep = '__concat__', remove = T) %>%
mutate(iRep = as.numeric(iRep)) %>%
mutate(samplebin = str_replace(samplebin, '_irep_dastool.tsv','')) %>%
mutate(sbid = str_glue('{sampleid}__{samplebin}'))
full <- read_tsv('../data/cart_irep/binning_table_all_full.tsv')
tb <- read_tsv('../data/cart_irep/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
View(tb)
tb <- read_tsv('../data/cart_irep/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep')
tb <- read_tsv('../data/cart_irep/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
tb <- read_tsv('../data/cart_irep/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
# clean the irep values of those samples
fns <- list.files('../data/cart_irep/', full.names = T, pattern = 'dastool')
irep <- fns %>%
set_names(fns) %>%
purrr::map(~  read_tsv(file = ., n_max = 1 , col_types = 'cc',  skip = 2, col_names = c('bin','iRep')) %>%  select(iRep) ) %>%
bind_rows(.id = 'fn') %>%
mutate(fn = str_replace(fn, '_irep.tsv$',''),
fn = str_replace(fn, '../data/cart_irep//','')) %>%
separate(fn, into = c('sampleid','samplebin'), sep = '__concat__', remove = T) %>%
mutate(iRep = as.numeric(iRep)) %>%
mutate(samplebin = str_replace(samplebin, '_irep_dastool.tsv','')) %>%
mutate(sbid = str_glue('{sampleid}__{samplebin}'))
full <- read_tsv('../data/cart_irep/binning_table_all_full.tsv')
tb <- read_tsv('../data/cart_irep/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
View(tb)
# clean the irep values of those samples
fns <- list.files('../data/cart_irep/', full.names = T, pattern = 'dastool')
irep <- fns %>%
set_names(fns) %>%
purrr::map(~  read_tsv(file = ., n_max = 1 , col_types = 'cc',  skip = 2, col_names = c('bin','iRep')) %>%  select(iRep) ) %>%
bind_rows(.id = 'fn') %>%
mutate(fn = str_replace(fn, '_irep.tsv$',''),
fn = str_replace(fn, '../data/cart_irep//','')) %>%
separate(fn, into = c('sampleid','samplebin'), sep = '__concat__', remove = T) %>%
mutate(iRep = as.numeric(iRep)) %>%
mutate(samplebin = str_replace(samplebin, '_irep_dastool.tsv','')) %>%
mutate(sbid = str_glue('{sampleid}__{samplebin}'))
full <- read_tsv('../data/cart_irep/binning_table_all_full.tsv')
tb <- read_tsv('../data/cart_irep/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
mutate(fpmbp = `# contigs (>= 0 bp)`/Size_Mb) %>%
filter(Completeness >= 75 & fpmbp <= 175 & Contamination <= 2) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
relocate(iRep, .after = 'Bin') %>%
relocate(best_species, .after = 'iRep') %>%
filter(!is.na(iRep)) %>%
arrange(Sample,Bin,  best_species) %>%
# if there are multiple get the average
#group_by(Sample, best_species, best_level) %>%
#summarise(aveirep = mean(iRep)) %>%
filter(best_species != 'Unclassified')
tb %>% write_csv('../data/16_CART_samples_irep.csv')
View(tb)
knitr::opts_chunk$set(echo = TRUE)
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv')
library(tidyverse)
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv')
View(shotgun)
pheno <- read_csv('../data/final_comprehensive_UPDATED_simple.csv')
pheno
bins <- read_csv('../data/16_CART_samples_irep.csv')
View(bins)
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, projectid, directory)
library(tidyverse)
library(vdbR)
connect_database()
get_table_from_database('shotgun_lookup_ad')
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, projectid, directory)
View(shotgun)
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, projectid, directory) %>%
arrange(projectid) %>%
mutate(folder = str_extract(directory, 'Sample_.+$'))
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, projectid, directory) %>%
arrange(projectid) %>%
mutate(folder = str_extract(directory, 'Sample_.+$'))
View(shotgun)
library(tidyverse)
library(vdbR)
connect_database()
get_table_from_database('shotgun_lookup_ad')
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, projectid, directory) %>%
arrange(projectid) %>%
mutate(folder = str_extract(directory, 'Sample_.+$'))
View(shotgun)
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, projectid, directory) %>%
arrange(projectid) %>%
mutate(folder = str_extract(directory, 'Sample_.+$'))
View(shotgun)
shotgun
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv')
shotgun
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, projectid, directory, center:toxicity) %>%
arrange(projectid) %>%
mutate(folder = str_extract(directory, 'Sample_.+$'))
shotgun
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, center:toxicity) %>%
arrange(projectid) %>%
mutate(folder = str_extract(directory, 'Sample_.+$'))
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, center:toxicity) %>%
mutate(folder = str_extract(directory, 'Sample_.+$'))
View(bins)
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, center:toxicity) %>%
mutate(Sample = str_extract(directory, 'Sample_.+$'))
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, center:toxicity) %>%
mutate(Sample = str_extract(directory, 'Sample_.+$')) %>%
select(Sample, center:toxicity)
together <- bins %>%
left_join(shotgun)
together <- bins %>%
left_join(shotgun, by = "Sample")
View(shotgun)
View(together)
together %>%
write_csv('../data/16_CART_samples_irep_with_pheno.csv')
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
samples_clinical <- read_csv('/Volumes/vandenbrinklab/oriana/Study\ideas/bile_acids/final_datasets/samples_clinical_temp.csv')
samples_clinical <- read_csv('/Volumes/vandenbrinklab/oriana/Study ideas/bile_acids/final_datasets/samples_clinical_temp.csv')
samples_clinical <- read_csv('/Volumes/vandenbrinklab/oriana/Study ideas/bile_acids/final_datasets/samples_clinical_temp.csv', num_threads = 16)
View(samples_clinical)
library(vdbR)
connect_database()
get_table_from_database('asv_annotation_blast_color_ag')
asv_color_set = unique(asv_annotation_blast_color_ag[,.(color,color_label_group_distinct,color_label_group,color_base)])
color_set_asv_carT = asv_color_set$color
names(color_set_asv_carT)=asv_color_set$color_label_group_distinct;
counts_data<-samples_clinical %>% left_join(asv_counts_ag) %>%
mutate(count_relative=count/count_total)
samples_clinical
cts <- get_counts_subset(samples_clinical$sampleid)
View(cts)
samples_clinical %>% distinct(sampleid)
counts_data<-samples_clinical %>% left_join(cts)
m = merge(counts_data[,.(asv_key,sampleid,oligos_id,
count,count_relative,count_total)],
asv_annotation_blast_color_ag[,.(asv_key,color_label_group_distinct)]);
setDT(counts_data)
m = merge(counts_data[,.(asv_key,sampleid,oligos_id,
count,count_relative,count_total)],
asv_annotation_blast_color_ag[,.(asv_key,color_label_group_distinct)]);
View(m)
composition <- m %>%
left_join(samples_clinical %>% select(sampleid, mrn))
View(composition)
m1<-m %>%
group_by(sampleid, color_label_group_distinct) %>%
mutate(sampleid = fct_reorder(sampleid, dplyr::desc(count_relative))) %>%
inner_join(samples_clinical)
View(cts)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database()
get_table_from_database('asv_annotation_blast_color_ag')
View(asv_annotation_blast_color_ag)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database()
library(tidyverse)
library(ggpubr)
get_table_from_database('asv_alpha_diversity_ag')
get_table_from_database('asv_annotation_blast_ag')
get_table_from_database('asv_annotation_blast_color_ag')
# the alpha diversity
alpha <- asv_alpha_diversity_ag %>%
filter(sampleid %in% c('1964A','1943B'))
# the composition of the two samples
counts_data <- get_counts_subset(c('1964A','1943B'))
dat <- counts_data %>%
select(asv_key:count_total, count_relative) %>%
left_join(asv_annotation_blast_color_ag %>%
select(asv_key,color_label_group_distinct), by = "asv_key") %>%
left_join(alpha %>% select(sampleid, simpson_reciprocal)) %>%
mutate(simpson_reciprocal = round(simpson_reciprocal, digits = 1),
xlabel = str_glue('{sampleid}\ndiversity:{simpson_reciprocal}'))  %>%
mutate(xlabel = factor(xlabel, levels = c('1964A\ndiversity:14.8','1943B\ndiversity:2.7')))
asv_color_set <- asv_annotation_blast_color_ag %>%
distinct(color,color_label_group_distinct,color_label_group,color_base) %>%
select(color_label_group_distinct, color) %>%
deframe()
cbd <- compute_beta_diversity_and_tsne(sampleid = dat$sampleid,
taxonomy = dat$color_label_group_distinct,
count = dat$count);
#compute beta diversity
cbd$compute_beta_diversity()
stacked_bar <- ggplot(dat,aes(xlabel, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
labs(title = '',
x = '',
y = 'Relative abundance') +
theme(
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
stacked_bar
library(cowplot)
p <- '../data/composition_legend.png'
legend <- ggdraw() +
draw_image(magick::image_read(p),   scale = 0.9)
legend
top <- plot_grid(stacked_bar, legend,rel_widths  = c(1, 2) )
ggsave('../data/13_bar.pdf',
width = 190,
height = 80,
#height = 60,
units = c("mm"),
dpi = 400, plot = top)
# what are the others
dat %>%
filter(str_detect(color_label_group_distinct, 'other')) %>%
left_join(asv_annotation_blast_ag %>% select(asv_key, genus)) %>%
filter(sampleid == '1943B') %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(count_relative)) %>%
arrange(-relab) %>%
write_csv('../data/13_other_genera.csv')
# to get the color of the three genera
colors <- asv_color_set %>%
filter(str_detect(color_label_group_distinct, 'Enterococcus|Actinobacteria|Ruminoco')) %>%
mutate(taxa = str_replace(color_label_group_distinct, '\\..+$','')) %>%
group_by(taxa) %>%
sample_n(size = 1, replace = F) %>%
ungroup() %>%
mutate(genus = c('Ruminococcus','Enterococcus','Bifidobacterium'))
View(dat)
asv_color_set <- asv_annotation_blast_color_ag %>%
distinct(color,color_label_group_distinct,color_label_group,color_base) %>%
select(color_label_group_distinct, color) %>%
deframe()
asv_color_set
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database()
get_table_from_database('shotgun_lookup_ad')
library(tidyverse)
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, center:toxicity) %>%
mutate(Sample = str_extract(directory, 'Sample_.+$')) %>%
select(Sample, center:toxicity)
View(shotgun)
shotgun_lookup_ad
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, projectid, center:toxicity) %>%
mutate(Sample = str_extract(directory, 'Sample_.+$')) %>%
select(Sample, projectid, center:toxicity)
shotgun %>%
select(folder)
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, projectid, center:toxicity) %>%
mutate(Sample = str_extract(directory, 'Sample_.+$')) %>%
select(Sample, projectid, center:toxicity, folder)
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, projectid, center:toxicity) %>%
mutate(Sample = str_extract(directory, 'Sample_.+$'))
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, projectid, center:toxicity) %>%
mutate(Sample = str_extract(directory, 'Sample_.+$')) %>%
select(Sample, projectid, center:toxicity)
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, projectid, center:toxicity) %>%
mutate(Sample = str_extract(directory, 'Sample_.+$')) %>%
select(Sample, projectid, center:toxicity) %>%
mutate(folder = str_glue('/home/daia1/my_workdir/samples/{Sample}'))
shotgun <- read_csv('../data/final_comprehensive_UPDATED_simple.csv') %>%
inner_join(shotgun_lookup_ad) %>%
select(fid, directory, projectid, center:toxicity) %>%
mutate(Sample = str_extract(directory, 'Sample_.+$')) %>%
select(Sample, projectid, center:toxicity) %>%
mutate(folder = str_glue('/home/daia1/my_workdir/samples/{Sample}')) %>%
mutate(cmd = str_glue('cp -r {folder} /home/daia1/my_workdir/samples/concatenated/for_jonas_melody_data'))
shotgun %>%
select(cmd) %>%
write_csv('../data/16_shotgun_cart_sample_cmd.csv', col_names = F)
