stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=T)
d7_ba_ko %>%
write_csv('../data/02_for_Fig2_three_KO_cpm.csv')
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442')) %>%
gather('sampleid', 'cpm', names(.)[2]:names(.)[ncol(.)])  %>%
mutate(sampleid = str_replace(sampleid, '_humann3','')) %>%
left_join(pheno) %>%
filter(day == 'D7')
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442'))
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442')) %>%
gather('sampleid', 'cpm', names(.)[2]:names(.)[ncol(.)])  %>%
mutate(sampleid = str_replace(sampleid, '_humann3','')) %>%
left_join(pheno) %>%
filter(day == 'D7')
tb %>%
filter(!str_detect(KO, 'Bifido')) %>%
write_csv('../data/05_for_FigS2_contribution_to_BSH.csv')
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
library(corncob)
library(tidyverse)
library(vdbR)
library("phyloseq")
connect_database()
pheno <- readxl::read_excel('../data/05_meta_with_alpha.xlsx') %>%
filter(day == 'D7')
# getting the cts from shotgun
fns <- list.files('../data/metaphlan/', pattern = 'profile', full.names = T)
metaphlan <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4) %>%
select(species  = `#clade_name`, counts = estimated_number_of_reads_from_the_clade) %>%
filter(str_detect(species, 's__'))) %>%
bind_rows(.id = 'sampleid') %>%
mutate(sampleid = str_extract(sampleid, 'C00....')) %>%
filter(sampleid %in% pheno$sampleid) %>%
# filter out virus ...
filter(!str_detect(species, 'k__Viruses'))
cts <- metaphlan %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
# I think I need to build a phyloseq object for this
all.equal(pheno$sampleid, colnames(cts))
sampledata <- pheno %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('BM','BMT')))
samples = sample_data(sampledata)
# assemble a phyloseq object
OTU = otu_table(cts, taxa_are_rows = T)
physeq = phyloseq(OTU,  samples)
# You may see NAs in the model summary because Wald testing is invalid.
#Likelihood ratio testing can be used, but valid standard errors cannot be calculated.
set.seed(1)
dv_analysis <- differentialTest(
formula = ~ grp,
phi.formula = ~ grp,
formula_null = ~ 1,
phi.formula_null = ~ grp,
test = "LRT", boot = FALSE,
data = physeq,
fdr_cutoff = 0.25)
total <- metaphlan %>%
group_by(sampleid) %>%
summarise(total = sum(counts))
relab <- metaphlan %>%
left_join(total) %>%
mutate(relab = counts/total)
library(Maaslin2)
cts_relab <- relab %>%
select(species, sampleid, relab) %>%
spread('species','relab', fill = 0) %>%
column_to_rownames('sampleid')
all.equal(rownames(sampledata), rownames(cts_relab))
fit_data <- Maaslin2(
input_data = cts_relab,
input_metadata = sampledata,
normalization = "TSS",
min_abundance = 0.0,
min_prevalence = 0.0,
max_significance = 0.25,
output = "../data/output_shotgun-Maaslin2",
fixed_effects = c("grp"),
reference = c("grp,BM"))
sig <- read_tsv('../data/output_shotgun-Maaslin2/significant_results.tsv') %>%
mutate(feature = str_replace_all(feature, '\\.','\\|'))
library(metagenomeSeq)
pheno_data <- pheno %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('BM','BMT')))
all.equal(colnames(cts) , pheno$sampleid)
# assemble the object for metagenomeSeq
phenotypeData <- AnnotatedDataFrame(pheno_data)
d7 <- newMRexperiment(cts,phenoData=phenotypeData)
p = cumNormStatFast(d7)
d7 = filterData(d7, present = 2, depth = 1)
d7 <- cumNorm(d7, p = p)
pd <- pData(d7)
mod <- model.matrix(~1 + grp, data = pd)
d7_res = fitFeatureModel(d7, mod)
whole <- tibble(species = d7_res@taxa,
pval = d7_res@pvalues) %>%
mutate(padj = p.adjust(pval, method = 'BH'))
q0.25_res <- whole %>%
filter(padj < 0.25)
library(ggvenn)
res_list <- list(metagenomeSeq = q0.25_res$species,
MaAsLin2 = sig$feature,
Corncob = dv_analysis$significant_taxa)
ggvenn(res_list, show_percentage = F)
ggsave('../data/07_d7_DE_venn.pdf', width = 5)
# the sig results (FDR < 0.25) from MaAsLin2
sig$feature
# the sig results (FDR < 0.25) from metagenomeSeq
q0.25_res$species
# the sig results (FDR < 0.25) from Corncob
dv_analysis$significant_taxa
# what is the taxa annotation for the shared 1
all3 <- intersect(intersect(q0.25_res$species,sig$feature), dv_analysis$significant_taxa)
# the intersected sig results between maaslin2 and metagenomicSeq
mas_meta <- intersect(q0.25_res$species,sig$feature)
mas_meta
# the intersected sig results between corncob and metagenomicSeq
intersect(q0.25_res$species,dv_analysis$significant_taxa)
# the intersected sig results between corncob and maaslin2
intersect(sig$feature,dv_analysis$significant_taxa)
# plot the boxplot relab of those asv
cts_relab %>%
rownames_to_column('sampleid') %>%
gather('species', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
filter(species %in% union(q0.25_res$species,union(sig$feature, dv_analysis$significant_taxa))) %>%
left_join(pheno %>% select(sampleid, grp)) %>%
mutate(spp = str_extract(species, 's__.+$')) %>%
split(.$spp) %>%
imap(function(df_, Name_) {
ggpubr::ggboxplot(data = df_,x = 'grp', y ='relab',  add = 'jitter',
title = Name_,
add.params = list(color = 'forestgreen', alpha = 0.5, size = 3, shape = 16))
})
sig
View(sig)
View(q0.25_res)
d7_res
d7_res@fitZeroLogNormal
browseVignettes("metagenomeSeq")
d7_res_coeff <- MRcoefs(d7_res)
View(d7_res_coeff)
View(d7_res_coeff)
d7_res_sig25
d7_res_sig25 <- MRcoefs(d7_res)
d7_res_sig25
d7_res_sig25 <- MRcoefs(d7_res) %>%
filter(adjPvalues < 0.25)
View(d7_res_sig25)
View(sig)
dv_analysis
dv_analysis$significant_models
dv_analysis
dv_analysis$p_fdr
dv_analysis$significant_taxa
dv_analysis$significant_models
dv_analysis
dv_analysis$significant_models
dv_analysis$significant_models
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models[[1]]
corns
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models[[1]]$coefficients
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models[[1]]$coefficients
corns
corns <- dv_analysis$significant_models[[1]]$coefficients
corns
corns <- dv_analysis$significant_models[[1]]$coefficients
corns
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models[[1]]$coefficients[2,1]
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models[[1]]$coefficients[2,1]
corns
names(dv_analysis$significant_models)
# get the corncob coeff for the sig ones
corns_ <- dv_analysis$significant_models[[1]]$coefficients[2,1]
corns <- dv_analysis$significant_models %>%
map(function(item){
item$coefficients[2,1]
})
View(corns)
corns <- dv_analysis$significant_models %>%
map_dfr(function(item){
item$coefficients[2,1]
})
corns <- dv_analysis$significant_models %>%
map(function(item){
item$coefficients[2,1]
}) %>%
bind_rows(.id = 'id')
corns <- dv_analysis$significant_models %>%
map(function(item){
item$coefficients[2,1]
}) %>%
bind_rows(.id = 'taxa')
dv_analysis$significant_taxa
bind_rows(.id = 'id)
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map(function(item){
item$coefficients[2,1]
}) %>%
bind_rows(.id = 'id')
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
})
View(corns)
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather()
item$coefficients[2,1]
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather()
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
)
corns
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
) %>%
mutate(coeff_scale = coeff/max(coeff))
-1.5/3.2
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p_fdr
analysis$significant_models
dv_analysis$significant_models
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p
corns_p
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p_fdr %>%
enframe
View(corns_p)
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p_fdr %>%
enframe('taxa', 'FDR')
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p_fdr %>%
enframe('taxa', 'FDR')
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p_fdr %>%
enframe('taxa', 'FDR') %>%
inner_join(corns)
View(sig)
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25)
View(mas)
mas
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coeff, qval)
mas
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)
mas
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)
mas
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)  %>%
mutate(coeff_scale = coef/max(coef))
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)  %>%
mutate(coeff_scale = coef/max(coef))
mas
View(d7_res_sig25)
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
rownames_to_column('taxa')
mmseq
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
rownames_to_column('taxa') %>%
mutate(coeff_scale = logFC/max(logFC))
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
rownames_to_column('taxa') %>%
mutate(coeff_scale = logFC/max(logFC))
mmseq
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
rownames_to_column('taxa') %>%
mutate(coeff_scale = logFC/max(logFC)) %>%
select(taxa, coeff_scale,adjPvalues)
mmseq
View(mmseq)
View(mas)
View(corns_p)
corns_p
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p_fdr %>%
enframe('taxa', 'FDR') %>%
inner_join(corns) %>%
select(taxa, coeff_scale, FDR)
corns_p
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)  %>%
mutate(coeff_scale = coef/max(coef))
mas
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)  %>%
mutate(coeff_scale = coef/max(coef)) %>%
select(taxa, coeff_scale, FDR = qval)
mmseq <- d7_res_sig25 %>%
rownames_to_column('taxa') %>%
mutate(coeff_scale = logFC/max(logFC)) %>%
select(taxa, coeff_scale,FDR = adjPvalues)
mmseq
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
rownames_to_column('taxa') %>%
mutate(coeff_scale = logFC/max(logFC)) %>%
select(taxa, coeff_scale,FDR = adjPvalues) %>%
mutate(tool = 'metagenomeSeq')
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p_fdr %>%
enframe('taxa', 'FDR') %>%
inner_join(corns) %>%
select(taxa, coeff_scale, FDR)%>%
mutate(tool = 'Corncob')
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)  %>%
mutate(coeff_scale = coef/max(coef)) %>%
select(taxa, coeff_scale, FDR = qval)%>%
mutate(tool = 'MaAsLin2')
three <- bind_rows(mmseq, mas, corns_p)
View(three)
three
three <- bind_rows(mmseq, mas, corns_p) %>%
mutate(taxa = str_extract(taxa, 's__.+$'))
three
three %>%
ggpubr::ggdotchart( x = 'taxa', y = 'coeff_scale')
three %>%
ggpubr::ggdotchart( x = 'taxa', y = 'coeff_scale', rotate = T)
three %>%
ggpubr::ggdotchart( x = 'taxa', y = 'coeff_scale', rotate = T,facet.by = 'tool')
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F)
three
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale')
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
theme(axis.text.x = element_text(angle = 45))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
theme(axis.text.x = element_text(angle = 45, hjust=1))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
theme(axis.text.x = element_text(angle = 45, hjust=-11))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
theme(axis.text.x = element_text(angle = 45, hjust=-1))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
theme(axis.text.x = element_text(angle = 45, hjust=-0.5))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
theme(axis.text.x = element_text(angle = 90, hjust=-0.5))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
theme(axis.text.x = element_text(angle = 90, hjust=0.25))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale')
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
theme(axis.text.x = element_text(angle = 45))
library(viridis)
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
scale_color_viridis() +
theme(axis.text.x = element_text(angle = 45))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
scale_color_viridis_b() +
theme(axis.text.x = element_text(angle = 45))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45)) +
guides(color = guide_legend(title = "Relative coefficient (per tool)"),
shape = guide_legend(title = "Corrected p-value"))
three %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'coeff_scale') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45)) +
guides(color = guide_legend(title = "Relative coefficient (per tool)"),
size = guide_legend(title = "Corrected p-value"))
three
three %>%
rename(`Relative coefficient (per tool)` = coeff_scale) %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'Relative coefficient (per tool)') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45)) +
guides(
size = guide_legend(title = "Corrected p-value"))
library(ggpubr)
three %>%
rename(`Relative coefficient (per tool)` = coeff_scale) %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'Relative coefficient (per tool)') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45)) +
guides(
size = guide_legend(title = "Corrected p-value")) +
theme_cleveland()
ggsave('../data/07_three_tools_coeff.pdf', width = 5)
ggsave('../data/07_three_tools_coeff.pdf', width = 7)
three %>%
rename(`Relative coefficient (per tool)` = coeff_scale) %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'Relative coefficient (per tool)') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45),
legend.position = 'right') +
guides(
size = guide_legend(title = "Corrected p-value")) +
theme_cleveland()
ggsave('../data/07_three_tools_coeff.pdf', width = 7)
ggsave('../data/07_three_tools_coeff.pdf', width = 10)
three %>% write_csv('../data/07_thre_tools_data.csv')
