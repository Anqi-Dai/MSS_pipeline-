mutate(padj = p.adjust(pval, method = 'BH')) %>%
filter(padj < 0.25)
View(whole2)
View(sig2)
View(all_alpha)
View(Maaslin1)
View(cts_relab)
View(cts)
View(cts_)
View(cts)
knitr::opts_chunk$set(echo = TRUE)
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
knitr::opts_chunk$set(echo = TRUE)
# the anti-CD3 projects
kos <- list.files('../data/anticd3/', 'KO')
kos
kos <- list.files('../data/anticd3/', 'KO')
ko <- kos %>%
set_names(kos) %>%
map(~ read_tsv(.,  col_types = 'cd') %>%
select(KO  = `# Gene Family`, cpm = names(.)[2])  ) %>%
bind_rows(.id = 'sampleid')
library(tidyverse)
library(ggpubr)
kos <- list.files('../data/anticd3/', 'KO')
ko <- kos %>%
set_names(kos) %>%
map(~ read_tsv(.,  col_types = 'cd') %>%
select(KO  = `# Gene Family`, cpm = names(.)[2])  ) %>%
bind_rows(.id = 'sampleid')
# the anti-CD3 projects
kos <- list.files('../data/anticd3/', 'KO', full.names = T)
ko <- kos %>%
set_names(kos) %>%
map(~ read_tsv(.,  col_types = 'cd') %>%
select(KO  = `# Gene Family`, cpm = names(.)[2])  ) %>%
bind_rows(.id = 'sampleid')
View(ko)
ko
ko <- kos %>%
set_names(kos) %>%
map(~ read_tsv(.,  col_types = 'cd') %>%
select(KO  = `# Gene Family`, cpm = names(.)[2])  ) %>%
bind_rows(.id = 'sampleid') %>%
mutate(sampleid = str_replace(sampleid, '../data/anticd3//Sample_',''),
sampleid = str_replace(sampleid, '_IGO_.+$',''))
KOs <- c('K01442','K15868','K15869','K15870','K15871','K15872','K15873','K15874',
'K07007','K22604','K22605','K22606','K22607')
KO_str <- paste(KOs, collapse = '|')
ko
ko <- kos %>%
set_names(kos) %>%
map(~ read_tsv(.,  col_types = 'cd') %>%
select(KO  = `# Gene Family`, cpm = names(.)[2])  ) %>%
bind_rows(.id = 'sampleid') %>%
mutate(sampleid = str_replace(sampleid, '../data/anticd3//Sample_',''),
sampleid = str_replace(sampleid, '_IGO_.+$','')) %>%
filter(str_detect(KO, KO_str))
ko
ko %>%
mutate(grp = if_else(str_detect(sampleid, 'D7_1'), 'control', if_else(str_detect(sampleid, 'D7_2'), 'lower', 'higher')))
ko %>%
mutate(grp = if_else(str_detect(sampleid, 'D7_1'), 'control', if_else(str_detect(sampleid, 'D7_2'), 'lower', 'higher'))) %>%
filter(!str_detect(KO, '\\|') ) %>%
ggboxplot(x = 'grp', 'cpm', facet.by = 'KO')
ko %>%
mutate(grp = if_else(str_detect(sampleid, 'D7_1'), 'control', if_else(str_detect(sampleid, 'D7_2'), 'lower', 'higher'))) %>%
filter(!str_detect(KO, '\\|') ) %>%
ggboxplot(x = 'grp', 'cpm', facet.by = 'KO', add = 'jitter')
ko %>%
mutate(grp = if_else(str_detect(sampleid, 'D7_1'), 'control', if_else(str_detect(sampleid, 'D7_2'), 'lower', 'higher'))) %>%
filter(!str_detect(KO, '\\|') ) %>%
ggboxplot(x = 'grp', 'cpm', facet.by = 'KO', add = 'jitter') +
facet_grid(~KO)
ko %>%
mutate(grp = if_else(str_detect(sampleid, 'D7_1'), 'control', if_else(str_detect(sampleid, 'D7_2'), 'lower', 'higher'))) %>%
filter(!str_detect(KO, '\\|') ) %>%
ggboxplot(x = 'grp', 'cpm', facet.by = 'KO', add = 'jitter') +
facet_grid(KO~.)
ko %>%
mutate(grp = if_else(str_detect(sampleid, 'D7_1'), 'control', if_else(str_detect(sampleid, 'D7_2'), 'lower', 'higher'))) %>%
filter(!str_detect(KO, '\\|') ) %>%
ggboxplot(x = 'grp', 'cpm', facet.by = 'KO', add = 'jitter') +
facet_grid(KO~., scales = 'free')
ko %>%
mutate(grp = if_else(str_detect(sampleid, 'D7_1'), 'control', if_else(str_detect(sampleid, 'D7_2'), 'lower', 'higher'))) %>%
filter(!str_detect(KO, '\\|') ) %>%
ggboxplot(x = 'grp', 'cpm', facet.by = 'KO', add = 'jitter') +
facet_grid(KO~., scales = 'free')
ko %>%
mutate(grp = if_else(str_detect(sampleid, 'D7_1'), 'control', if_else(str_detect(sampleid, 'D7_2'), 'lower', 'higher'))) %>%
filter(!str_detect(KO, '\\|') ) %>%
ggboxplot(x = 'grp', 'cpm', facet.by = 'KO', add = 'jitter') +
facet_grid(KO~., scales = 'free')
ggsave('../data/anticd3_KO.pdf', width = 5, height = 4)
ko %>%
mutate(grp = if_else(str_detect(sampleid, 'D7_1'), 'control', if_else(str_detect(sampleid, 'D7_2'), 'lower', 'higher'))) %>%
filter(!str_detect(KO, '\\|') ) %>%
ggboxplot(x = 'grp', 'cpm', facet.by = 'KO', add = 'jitter') +
facet_grid(KO~., scales = 'free') +
stat_compare_means(comparisons= list(c('control', 'lower'),
c('control', 'higher'),
c('lower', 'higher')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
ggsave('../data/anticd3_KO.pdf', width = 5, height = 4)
# the anti-CD3 projects
kos <- list.files('../data/anticd3/', 'KO', full.names = T)
ko <- kos %>%
set_names(kos) %>%
map(~ read_tsv(.,  col_types = 'cd') %>%
select(KO  = `# Gene Family`, cpm = names(.)[2])  ) %>%
bind_rows(.id = 'sampleid') %>%
mutate(sampleid = str_replace(sampleid, '../data/anticd3//Sample_',''),
sampleid = str_replace(sampleid, '_IGO_.+$','')) %>%
filter(str_detect(KO, KO_str))
ko %>%
mutate(grp = if_else(str_detect(sampleid, 'D7_1'), 'control', if_else(str_detect(sampleid, 'D7_2'), 'lower', 'higher'))) %>%
filter(!str_detect(KO, '\\|') ) %>%
ggboxplot(x = 'grp', 'cpm', facet.by = 'KO', add = 'jitter') +
facet_grid(KO~., scales = 'free') +
stat_compare_means(comparisons= list(c('control', 'lower'),
c('control', 'higher'),
c('lower', 'higher')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
ggsave('../data/anticd3_KO.pdf', width = 5, height = 6)
ko %>% write_csv('../data/anticd3_KO.csv')
knitr::opts_chunk$set(echo = TRUE)
library(seqinr)
bai <- read.fasta('../data/IMG_aa_seq/bai_aa_seq/fasta.faa')
View(bai)
ids <- tibble(id = names(bai))
View(ids)
??sample_data
knitr::opts_chunk$set(echo = TRUE, message = F)
library(tidyverse, quietly = T)
library(ggpubr)
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
fns <- list.files('../data/anticd3/', pattern = '.txt', full.names = T)
taxa <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
select(species  = `#clade_name`, counts = estimated_number_of_reads_from_the_clade) %>%
filter(str_detect(species, 's__')) ) %>%
bind_rows(.id = 'sampleid') %>%
filter(!str_detect(species, 'k__Viruses')) %>%
mutate(sampleid = str_replace(sampleid, '../data/anticd3//Sample_',''),
sampleid = str_replace(sampleid, '_IGO_.+$',''))
# make a table of the pheno of the samples
pheno <- tibble(
sampleid = taxa %>% distinct(sampleid) %>% pull(sampleid),
grp = c(rep('control', 3), rep('grp1', 3),rep('grp2', 3))
)
# to look at the alpha diversity
library(vegan)
cts_relab <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
select(species  = `#clade_name`, relative_abundance) %>%
filter(str_detect(species, 's__')) ) %>%
bind_rows(.id = 'sampleid') %>%
filter(!str_detect(species, 'k__Viruses')) %>%
mutate(sampleid = str_replace(sampleid, '../data/anticd3//Sample_',''),
sampleid = str_replace(sampleid, '_IGO_.+$',''))
cts_ <- cts_relab %>%
spread(key = 'species', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('sampleid')
meta <- diversity(cts_, index = 'inv') %>%
enframe(name = 'sampleid', value = 'inv') %>%
inner_join(pheno)
all_alpha <- meta %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
add.params = list(color = 'forestgreen', size = 2, alpha = 1, shape = 20)) +
stat_compare_means(comparisons= list(c('control', 'grp1'),
c('control', 'grp2'),
c('grp1', 'grp2')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
# beta diversity
# calculate the Bray curtis beta diversity
dist_ <- vegdist(cts_, method = 'bray')
eigen <- cmdscale(dist_, eig = T)$eig
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
beta_df <- bc %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
full_join(meta)
beta_df %>%
ggscatter(x = 'V1', y = 'V2', color =  'grp', palette = 'lancet',  alpha = 1) +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
library(corncob)
library(phyloseq)
cts <- taxa %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
# I think I need to build a phyloseq object for this
all.equal(pheno$sampleid, colnames(cts))
# the 6 samples that are control and grp1
cts1 <- taxa %>%
filter(!str_detect(sampleid, 'D7_3')) %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
samples1 = phyloseq::sample_data(sampledata %>% filter(grp != 'grp2'))
library(corncob)
library(phyloseq)
cts <- taxa %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
# I think I need to build a phyloseq object for this
all.equal(pheno$sampleid, colnames(cts))
# the 6 samples that are control and grp1
cts1 <- taxa %>%
filter(!str_detect(sampleid, 'D7_3')) %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
samples1 = corncob::sample_data(sampledata %>% filter(grp != 'grp2'))
samples1 = phyloseq::sample_data(sampledata %>% filter(grp != 'grp2'))
View(pheno)
library(corncob)
library(phyloseq)
cts <- taxa %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
# I think I need to build a phyloseq object for this
all.equal(pheno$sampleid, colnames(cts))
# the 6 samples that are control and grp1
cts1 <- taxa %>%
filter(!str_detect(sampleid, 'D7_3')) %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
samples1 = phyloseq::sample_data(pheno %>% filter(grp != 'grp2'))
OTU1 = otu_table(cts1, taxa_are_rows = T)
physeq1 = phyloseq(OTU1,  samples1)
pheno
library(corncob)
library(phyloseq)
cts <- taxa %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
# I think I need to build a phyloseq object for this
all.equal(pheno$sampleid, colnames(cts))
# the 6 samples that are control and grp1
cts1 <- taxa %>%
filter(!str_detect(sampleid, 'D7_3')) %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
samples1 = phyloseq::sample_data(pheno %>% filter(grp != 'grp2') %>% column_to_rownames('sampleid'))
OTU1 = otu_table(cts1, taxa_are_rows = T)
physeq1 = phyloseq(OTU1,  samples1)
set.seed(1)
dv_analysis1 <- differentialTest(
formula = ~ grp,
phi.formula = ~ grp,
formula_null = ~ 1,
phi.formula_null = ~ grp,
test = "LRT", boot = FALSE,
data = physeq1,
fdr_cutoff = 0.25)
# the 6 samples that are control and grp2
cts2 <- taxa %>%
filter(!str_detect(sampleid, 'D7_2')) %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
samples2 = sample_data(sampledata %>% filter(grp != 'grp1'))
library(corncob)
library(phyloseq)
cts <- taxa %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
# I think I need to build a phyloseq object for this
all.equal(pheno$sampleid, colnames(cts))
# the 6 samples that are control and grp1
cts1 <- taxa %>%
filter(!str_detect(sampleid, 'D7_3')) %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
samples1 = sample_data(pheno %>% filter(grp != 'grp2') %>% column_to_rownames('sampleid'))
OTU1 = otu_table(cts1, taxa_are_rows = T)
physeq1 = phyloseq(OTU1,  samples1)
set.seed(1)
dv_analysis1 <- differentialTest(
formula = ~ grp,
phi.formula = ~ grp,
formula_null = ~ 1,
phi.formula_null = ~ grp,
test = "LRT", boot = FALSE,
data = physeq1,
fdr_cutoff = 0.25)
# the 6 samples that are control and grp2
cts2 <- taxa %>%
filter(!str_detect(sampleid, 'D7_2')) %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
samples2 = sample_data(pheno %>% filter(grp != 'grp1') %>% column_to_rownames('sampleid'))
OTU2 = otu_table(cts2, taxa_are_rows = T)
physeq2 = phyloseq(OTU2,  samples2)
dv_analysis2 <- differentialTest(
formula = ~ grp,
phi.formula = ~ grp,
formula_null = ~ 1,
phi.formula_null = ~ grp,
test = "LRT", boot = FALSE,
data = physeq2,
fdr_cutoff = 0.25)
Corncob1 <- dv_analysis1$significant_taxa
Corncob2 <- dv_analysis2$significant_taxa
all_alpha
# to look at the alpha diversity
library(vegan)
cts_relab <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
select(species  = `#clade_name`, relative_abundance) %>%
filter(str_detect(species, 's__')) ) %>%
bind_rows(.id = 'sampleid') %>%
filter(!str_detect(species, 'k__Viruses')) %>%
mutate(sampleid = str_replace(sampleid, '../data/anticd3//Sample_',''),
sampleid = str_replace(sampleid, '_IGO_.+$',''))
cts_ <- cts_relab %>%
spread(key = 'species', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('sampleid')
meta <- diversity(cts_, index = 'inv') %>%
enframe(name = 'sampleid', value = 'inv') %>%
inner_join(pheno)
all_alpha <- meta %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
title = 'Alpha diversity (grp1: lower grp2: higher)'
add.params = list(color = 'forestgreen', size = 2, alpha = 1, shape = 20)) +
# to look at the alpha diversity
library(vegan)
cts_relab <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4, col_types = 'ccddd') %>%
select(species  = `#clade_name`, relative_abundance) %>%
filter(str_detect(species, 's__')) ) %>%
bind_rows(.id = 'sampleid') %>%
filter(!str_detect(species, 'k__Viruses')) %>%
mutate(sampleid = str_replace(sampleid, '../data/anticd3//Sample_',''),
sampleid = str_replace(sampleid, '_IGO_.+$',''))
cts_ <- cts_relab %>%
spread(key = 'species', value = 'relative_abundance', fill = 0) %>%
column_to_rownames('sampleid')
meta <- diversity(cts_, index = 'inv') %>%
enframe(name = 'sampleid', value = 'inv') %>%
inner_join(pheno)
all_alpha <- meta %>%
ggboxplot(x = 'grp', y = 'inv', add = 'dotplot', ylab = 'inverse simpson',
title = 'Alpha diversity (grp1: lower grp2: higher)',
add.params = list(color = 'forestgreen', size = 2, alpha = 1, shape = 20)) +
stat_compare_means(comparisons= list(c('control', 'grp1'),
c('control', 'grp2'),
c('grp1', 'grp2')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE) +
theme_bw()
all_alpha
# beta diversity
# calculate the Bray curtis beta diversity
dist_ <- vegdist(cts_, method = 'bray')
eigen <- cmdscale(dist_, eig = T)$eig
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
beta_df <- bc %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
full_join(meta)
beta_df %>%
ggscatter(x = 'V1', y = 'V2', color =  'grp', palette = 'lancet',  alpha = 1) +
labs(title = 'Bray curtis distance') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
Corncob1 <- dv_analysis1$significant_taxa
Corncob1
Corncob2
Corncob1
Corncob2
sig1
library(Maaslin2)
cts_1 <- cts_relab %>%
filter(!str_detect(sampleid, 'D7_3')) %>%
spread('species','relative_abundance', fill = 0) %>%
column_to_rownames('sampleid')
samples_1 <- pheno %>%
filter(!str_detect(sampleid, 'D7_3')) %>%
column_to_rownames('sampleid')
all.equal(rownames(samples_1), rownames(cts_1))
Maaslin1 <- Maaslin2(
input_data = cts_1,
input_metadata = samples_1,
normalization = "TSS",
min_abundance = 0.0,
min_prevalence = 0.0,
max_significance = 0.25,
output = "../data/output_shotgun-Maaslin1",
fixed_effects = c("grp"),
reference = c("grp,control"))
sig1 <- read_tsv('../data/output_shotgun-Maaslin1/significant_results.tsv')
sig1
cts_2 <- cts_relab %>%
filter(!str_detect(sampleid, 'D7_2')) %>%
spread('species','relative_abundance', fill = 0) %>%
column_to_rownames('sampleid')
samples_2 <- pheno %>%
filter(!str_detect(sampleid, 'D7_2')) %>%
column_to_rownames('sampleid')
all.equal(rownames(samples_2), rownames(cts_2))
Maaslin2 <- Maaslin2(
input_data = cts_2,
input_metadata = samples_2,
normalization = "TSS",
min_abundance = 0.0,
min_prevalence = 0.0,
max_significance = 0.25,
output = "../data/output_shotgun-Maaslin2",
fixed_effects = c("grp"),
reference = c("grp,control"))
sig2 <- read_tsv('../data/output_shotgun-Maaslin2/significant_results.tsv')
sig2
sig2
library(metagenomeSeq)
pheno_data1 <- pheno %>%
filter(!str_detect(sampleid, 'D7_3')) %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('control','grp1')))
counts1 <- cts %>%
select(!starts_with('D7_3'))
all.equal(colnames(counts1) , rownames(pheno_data1))
# assemble the object for metagenomeSeq
phenotypeData1 <- AnnotatedDataFrame(pheno_data1)
d1 <- newMRexperiment(counts1,phenoData=phenotypeData1)
p1 = cumNormStatFast(d1)
d1 = filterData(d1, present = 1, depth = 1)
d1 <- cumNorm(d1, p = p1)
pd1 <- pData(d1)
mod1 <- model.matrix(~1 + grp, data = pd1)
d1_res = fitFeatureModel(d1, mod1)
whole1 <- tibble(species = d1_res@taxa,
pval = d1_res@pvalues) %>%
mutate(padj = p.adjust(pval, method = 'BH')) %>%
filter(padj < 0.25)
whole1
pheno_data2 <- pheno %>%
filter(!str_detect(sampleid, 'D7_2')) %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('control','grp2')))
counts2 <- cts %>%
select(!starts_with('D7_2'))
all.equal(colnames(counts2) , rownames(pheno_data2))
# assemble the object for metagenomeSeq
phenotypeData2 <- AnnotatedDataFrame(pheno_data2)
d2 <- newMRexperiment(counts2,phenoData=phenotypeData2)
p2 = cumNormStatFast(d2)
d2 = filterData(d2, present = 1, depth = 1)
d2 <- cumNorm(d2, p = p2)
pd2 <- pData(d2)
mod2 <- model.matrix(~1 + grp, data = pd2)
d2_res = fitFeatureModel(d2, mod2)
whole2 <- tibble(species = d2_res@taxa,
pval = d2_res@pvalues) %>%
mutate(padj = p.adjust(pval, method = 'BH')) %>%
filter(padj < 0.25)
whole2
pheno_data2 <- pheno %>%
filter(!str_detect(sampleid, 'D7_2')) %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('control','grp2')))
counts2 <- cts %>%
select(!starts_with('D7_2'))
all.equal(colnames(counts2) , rownames(pheno_data2))
# assemble the object for metagenomeSeq
phenotypeData2 <- AnnotatedDataFrame(pheno_data2)
d2 <- newMRexperiment(counts2,phenoData=phenotypeData2)
p2 = cumNormStatFast(d2)
d2 = filterData(d2, present = 1, depth = 1)
d2 <- cumNorm(d2, p = p2)
pd2 <- pData(d2)
mod2 <- model.matrix(~1 + grp, data = pd2)
d2_res = fitFeatureModel(d2, mod2)
whole2 <- tibble(species = d2_res@taxa,
pval = d2_res@pvalues) %>%
mutate(padj = p.adjust(pval, method = 'BH')) %>%
filter(padj < 0.25)
whole2
whole2
Corncob1
Corncob1
Corncob2
Corncob2
Corncob2
# the sig different species between control and lower
Corncob1 <- dv_analysis1$significant_taxa
Corncob1
Corncob2
sig2$feature
whole2$species
Corncob2
