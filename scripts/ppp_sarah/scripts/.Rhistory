View(whole1)
View(whole2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
pheno <- readxl::read_excel('../data/05_meta_with_alpha.xlsx') %>%
filter(day == 'D7')
spp <- read_csv('../data/05_all_shotgun_metaphlan_spp.csv') %>%
filter(sampleid %in% pheno$sampleid)
View(spp)
spp
spp %>% distinct(sampleid)
spp
spp2 <- spp %>%
filter(str_detect(spp, 'Lactobacillus|Enterococcus'))
spp2 <- spp %>%
filter(str_detect(spp, 'Lactobacillus|Enterococcus'))
spp
spp2 <- spp %>%
filter(str_detect(clade_name, 'Lactobacillus|Enterococcus'))
View(spp2)
spp2 <- spp %>%
filter(str_detect(clade_name, 'Lactobacillus|Enterococcus'),
!str_detect(clade_name, 'reuteri'))
View(spp2)
spp2 %>%
write_csv('../data/06_two_spp_perc.csv')
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
library(corncob)
library(tidyverse)
library(vdbR)
library("phyloseq")
connect_database()
pheno <- readxl::read_excel('../data/05_meta_with_alpha.xlsx') %>%
filter(day == 'D7')
# getting the cts from shotgun
fns <- list.files('../data/metaphlan/', pattern = 'profile', full.names = T)
metaphlan <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4) %>%
select(species  = `#clade_name`, counts = estimated_number_of_reads_from_the_clade) %>%
filter(str_detect(species, 's__'))) %>%
bind_rows(.id = 'sampleid') %>%
mutate(sampleid = str_extract(sampleid, 'C00....')) %>%
filter(sampleid %in% pheno$sampleid) %>%
# filter out virus ...
filter(!str_detect(species, 'k__Viruses'))
cts <- metaphlan %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
# I think I need to build a phyloseq object for this
all.equal(pheno$sampleid, colnames(cts))
sampledata <- pheno %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('BM','BMT')))
samples = sample_data(sampledata)
# assemble a phyloseq object
OTU = otu_table(cts, taxa_are_rows = T)
physeq = phyloseq(OTU,  samples)
# You may see NAs in the model summary because Wald testing is invalid.
#Likelihood ratio testing can be used, but valid standard errors cannot be calculated.
set.seed(1)
dv_analysis <- differentialTest(
formula = ~ grp,
phi.formula = ~ grp,
formula_null = ~ 1,
phi.formula_null = ~ grp,
test = "LRT", boot = FALSE,
data = physeq,
fdr_cutoff = 0.25)
total <- metaphlan %>%
group_by(sampleid) %>%
summarise(total = sum(counts))
relab <- metaphlan %>%
left_join(total) %>%
mutate(relab = counts/total)
library(Maaslin2)
cts_relab <- relab %>%
select(species, sampleid, relab) %>%
spread('species','relab', fill = 0) %>%
column_to_rownames('sampleid')
all.equal(rownames(sampledata), rownames(cts_relab))
fit_data <- Maaslin2(
input_data = cts_relab,
input_metadata = sampledata,
normalization = "TSS",
min_abundance = 0.0,
min_prevalence = 0.0,
max_significance = 0.25,
output = "../data/output_shotgun-Maaslin2",
fixed_effects = c("grp"),
reference = c("grp,BM"))
sig <- read_tsv('../data/output_shotgun-Maaslin2/significant_results.tsv') %>%
mutate(feature = str_replace_all(feature, '\\.','\\|'))
library(metagenomeSeq)
pheno_data <- pheno %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('BM','BMT')))
all.equal(colnames(cts) , pheno$sampleid)
# assemble the object for metagenomeSeq
phenotypeData <- AnnotatedDataFrame(pheno_data)
d7 <- newMRexperiment(cts,phenoData=phenotypeData)
p = cumNormStatFast(d7)
d7 = filterData(d7, present = 2, depth = 1)
d7 <- cumNorm(d7, p = p)
pd <- pData(d7)
mod <- model.matrix(~1 + grp, data = pd)
d7_res = fitFeatureModel(d7, mod)
whole <- tibble(species = d7_res@taxa,
pval = d7_res@pvalues) %>%
mutate(padj = p.adjust(pval, method = 'BH'))
q0.25_res <- whole %>%
filter(padj < 0.25)
library(ggvenn)
res_list <- list(metagenomeSeq = q0.25_res$species,
MaAsLin2 = sig$feature,
Corncob = dv_analysis$significant_taxa)
ggvenn(res_list, show_percentage = F)
# the sig results (FDR < 0.25) from MaAsLin2
sig$feature
# the sig results (FDR < 0.25) from metagenomeSeq
q0.25_res$species
# the sig results (FDR < 0.25) from Corncob
dv_analysis$significant_taxa
library(ggvenn)
res_list <- list(metagenomeSeq = q0.25_res$species,
MaAsLin2 = sig$feature,
Corncob = dv_analysis$significant_taxa)
ggvenn(res_list, show_percentage = F)
ggsave('../data/07_d7_DE_venn.pdf', width = 5)
ggsave('../data/07_d7_DE_venn.pdf', width = 3)
ggsave('../data/07_d7_DE_venn.pdf', width = 5)
knitr::opts_chunk$set(echo = TRUE)
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv')
View(tb)
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442'))
pheno <- read_csv('../data/phenon.csv', col_names = c('sampleid','pheno')) %>%
mutate(sampleid = str_replace(sampleid, '_IGO.+$',''),
sampleid = str_glue('{sampleid}_humann3')) %>%
separate(pheno, into = c('day','grp'), sep = '_C_') %>%
mutate(grp = str_replace(grp, '_0.+$', '')) %>%
mutate(sampleid = str_replace(sampleid, '_humann3',''))
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442')) %>%
gather('sampleid', 'cpm', names(.)[2]:names(.)[ncol(.)])  %>%
mutate(sampleid = str_replace(sampleid, '_humann3','')) %>%
left_join(pheno) %>%
filter(day == 'D7')
tb %>%
#filter(str_detect(KO, 'Lactobacillus_johnsonii')) %>%
ggboxplot(x = 'grp', y = 'cpm', facet.by = 'KO',add = 'dotplot',
xlab = '', ylab = 'Counts per million') +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=T)
library(ggpubr)
tb %>%
#filter(str_detect(KO, 'Lactobacillus_johnsonii')) %>%
ggboxplot(x = 'grp', y = 'cpm', facet.by = 'KO',add = 'dotplot',
xlab = '', ylab = 'Counts per million') +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=T)
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442')) %>%
gather('sampleid', 'cpm', names(.)[2]:names(.)[ncol(.)])  %>%
mutate(sampleid = str_replace(sampleid, '_humann3','')) %>%
left_join(pheno) %>%
filter(day == 'D7')
tb %>%
#filter(str_detect(KO, 'Lactobacillus_johnsonii')) %>%
ggboxplot(x = 'grp', y = 'cpm', facet.by = 'KO',add = 'dotplot',
xlab = '', ylab = 'Counts per million') +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=T)
tb %>%
#filter(str_detect(KO, 'Lactobacillus_johnsonii')) %>%
ggboxplot(x = 'grp', y = 'cpm',add = 'dotplot',
xlab = '', ylab = 'Counts per million') +
facet_grid(~ KO) +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=T)
tb %>%
filter(!str_detect(KO, 'Bifido')) %>%
ggboxplot(x = 'grp', y = 'cpm',add = 'dotplot',
xlab = '', ylab = 'Counts per million') +
facet_grid(~ KO) +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=T)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
meta <- read_csv('../data/phenon.csv', col_names = c('sampleid','pheno')) %>%
mutate(sampleid = str_replace(sampleid, '_IGO.+$',''),
#sampleid = str_glue('{sampleid}_humann3')
) %>%
separate(pheno, into = c('day','grp'), sep = '_C_') %>%
mutate(grp = str_replace(grp, '_0.+$', ''))
meta
dat <- read_tsv('../data/humann3_KO_cpm_joined_unstratified.tsv') %>%
rename_all(~ gsub("_humann3", "", .)) %>%
rename(KOID = names(.)[1])
KOs <- c('K01442','K15868','K15869','K15870','K15871','K15872','K15873','K15874',
'K07007','K22604','K22605','K22606','K22607')
KO_str <- paste(KOs, collapse = '|')
tb <- dat %>%
filter(str_detect(KOID, KO_str)) %>%
gather('sampleid', 'CPM', names(.)[2]:names(.)[ncol(.)]) %>%
left_join(meta)
View(tb)
tb %>%
ggboxplot(x = 'grp', y = 'CPM', add = 'jitter') +
facet_grid(day ~ KOID) +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=F)
tb
tb %>%
filter(day =='D7') %>%
ggboxplot(x = 'grp', y = 'CPM', add = 'jitter') +
facet_grid(day ~ KOID) +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=F)
d7_ba_ko <- tb %>%
filter(day =='D7')
View(d7_ba_ko)
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442'))
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442'))
tb <- dat %>%
filter(str_detect(KOID, KO_str))
d7_ba_ko <- dat %>%
filter(str_detect(KOID, KO_str))  %>%
filter(day =='D7')
View(dat)
d7_ba_ko <- dat %>%
left_join(meta) %>%
filter(str_detect(KOID, KO_str))  %>%
filter(day =='D7')
dat
meta
dat
d7_ba_ko <-dat %>%
filter(str_detect(KOID, KO_str)) %>%
gather('sampleid', 'CPM', names(.)[2]:names(.)[ncol(.)]) %>%
left_join(meta) %>%
filter(str_detect(KOID, KO_str))  %>%
filter(day =='D7')
d7_ba_ko <- dat %>%
filter(str_detect(KOID, KO_str)) %>%
gather('sampleid', 'CPM', names(.)[2]:names(.)[ncol(.)]) %>%
left_join(meta) %>%
filter(str_detect(KOID, KO_str))  %>%
filter(day =='D7')
d7_ba_ko <- dat %>%
filter(str_detect(KOID, KO_str)) %>%
gather('sampleid', 'CPM', names(.)[2]:names(.)[ncol(.)]) %>%
left_join(meta) %>%
filter(str_detect(KOID, KO_str))  %>%
filter(day =='D7')
d7_ba_ko <- dat %>%
filter(str_detect(KOID, KO_str)) %>%
gather('sampleid', 'CPM', names(.)[2]:names(.)[ncol(.)]) %>%
left_join(meta) %>%
filter(str_detect(KOID, KO_str))  %>%
filter(day =='D7')
d7_ba_ko <- dat %>%
filter(str_detect(KOID, KO_str)) %>%
gather('sampleid', 'CPM', names(.)[2]:names(.)[ncol(.)]) %>%
left_join(meta) %>%
filter(str_detect(KOID, KO_str))  %>%
filter(day =='D7')
d7_ba_ko %>%
ggboxplot(x = 'grp', y = 'CPM', add = 'jitter') +
facet_grid(day ~ KOID) +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=F)
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442')) %>%
gather('sampleid', 'cpm', names(.)[2]:names(.)[ncol(.)])  %>%
mutate(sampleid = str_replace(sampleid, '_humann3','')) %>%
left_join(pheno) %>%
filter(day == 'D7')
tb %>%
filter(!str_detect(KO, 'Bifido')) %>%
ggboxplot(x = 'grp', y = 'cpm',add = 'dotplot',
xlab = '', ylab = 'Counts per million') +
facet_grid(~ KO) +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=T)
d7_ba_ko %>%
ggboxplot(x = 'grp', y = 'CPM', add = 'dotplot') +
facet_grid(day ~ KOID) +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=F)
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442')) %>%
gather('sampleid', 'cpm', names(.)[2]:names(.)[ncol(.)])  %>%
mutate(sampleid = str_replace(sampleid, '_humann3','')) %>%
left_join(pheno) %>%
filter(day == 'D7')
tb %>%
filter(!str_detect(KO, 'Bifido')) %>%
ggboxplot(x = 'grp', y = 'cpm',add = 'dotplot',
xlab = '', ylab = 'Counts per million') +
facet_grid(~ KO) +
stat_compare_means(comparisons= list(c('BM', 'BMT')),
label= "p.value",
method= 'wilcox.test',
correct=T)
d7_ba_ko %>%
write_csv('../data/02_for_Fig2_three_KO_cpm.csv')
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442')) %>%
gather('sampleid', 'cpm', names(.)[2]:names(.)[ncol(.)])  %>%
mutate(sampleid = str_replace(sampleid, '_humann3','')) %>%
left_join(pheno) %>%
filter(day == 'D7')
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442'))
tb <- read_tsv('../data/humann3_KO_cpm_joined_stratified.tsv') %>%
rename(KO = names(.)[1]) %>%
filter(str_detect(KO, 'K01442')) %>%
gather('sampleid', 'cpm', names(.)[2]:names(.)[ncol(.)])  %>%
mutate(sampleid = str_replace(sampleid, '_humann3','')) %>%
left_join(pheno) %>%
filter(day == 'D7')
tb %>%
filter(!str_detect(KO, 'Bifido')) %>%
write_csv('../data/05_for_FigS2_contribution_to_BSH.csv')
knitr::opts_chunk$set(echo = TRUE, warning = F, message = F)
library(corncob)
library(tidyverse)
library(vdbR)
library("phyloseq")
connect_database()
pheno <- readxl::read_excel('../data/05_meta_with_alpha.xlsx') %>%
filter(day == 'D7')
# getting the cts from shotgun
fns <- list.files('../data/metaphlan/', pattern = 'profile', full.names = T)
metaphlan <- fns %>%
set_names(fns) %>%
map(~ read_tsv(., skip = 4) %>%
select(species  = `#clade_name`, counts = estimated_number_of_reads_from_the_clade) %>%
filter(str_detect(species, 's__'))) %>%
bind_rows(.id = 'sampleid') %>%
mutate(sampleid = str_extract(sampleid, 'C00....')) %>%
filter(sampleid %in% pheno$sampleid) %>%
# filter out virus ...
filter(!str_detect(species, 'k__Viruses'))
cts <- metaphlan %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
# I think I need to build a phyloseq object for this
all.equal(pheno$sampleid, colnames(cts))
sampledata <- pheno %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('BM','BMT')))
samples = sample_data(sampledata)
# assemble a phyloseq object
OTU = otu_table(cts, taxa_are_rows = T)
physeq = phyloseq(OTU,  samples)
# You may see NAs in the model summary because Wald testing is invalid.
#Likelihood ratio testing can be used, but valid standard errors cannot be calculated.
set.seed(1)
dv_analysis <- differentialTest(
formula = ~ grp,
phi.formula = ~ grp,
formula_null = ~ 1,
phi.formula_null = ~ grp,
test = "LRT", boot = FALSE,
data = physeq,
fdr_cutoff = 0.25)
total <- metaphlan %>%
group_by(sampleid) %>%
summarise(total = sum(counts))
relab <- metaphlan %>%
left_join(total) %>%
mutate(relab = counts/total)
library(Maaslin2)
cts_relab <- relab %>%
select(species, sampleid, relab) %>%
spread('species','relab', fill = 0) %>%
column_to_rownames('sampleid')
all.equal(rownames(sampledata), rownames(cts_relab))
fit_data <- Maaslin2(
input_data = cts_relab,
input_metadata = sampledata,
normalization = "TSS",
min_abundance = 0.0,
min_prevalence = 0.0,
max_significance = 0.25,
output = "../data/output_shotgun-Maaslin2",
fixed_effects = c("grp"),
reference = c("grp,BM"))
sig <- read_tsv('../data/output_shotgun-Maaslin2/significant_results.tsv') %>%
mutate(feature = str_replace_all(feature, '\\.','\\|'))
library(metagenomeSeq)
pheno_data <- pheno %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('BM','BMT')))
all.equal(colnames(cts) , pheno$sampleid)
# assemble the object for metagenomeSeq
phenotypeData <- AnnotatedDataFrame(pheno_data)
d7 <- newMRexperiment(cts,phenoData=phenotypeData)
p = cumNormStatFast(d7)
d7 = filterData(d7, present = 2, depth = 1)
d7 <- cumNorm(d7, p = p)
pd <- pData(d7)
mod <- model.matrix(~1 + grp, data = pd)
d7_res = fitFeatureModel(d7, mod)
whole <- tibble(species = d7_res@taxa,
pval = d7_res@pvalues) %>%
mutate(padj = p.adjust(pval, method = 'BH'))
q0.25_res <- whole %>%
filter(padj < 0.25)
library(ggvenn)
res_list <- list(metagenomeSeq = q0.25_res$species,
MaAsLin2 = sig$feature,
Corncob = dv_analysis$significant_taxa)
ggvenn(res_list, show_percentage = F)
ggsave('../data/07_d7_DE_venn.pdf', width = 5)
# the sig results (FDR < 0.25) from MaAsLin2
sig$feature
# the sig results (FDR < 0.25) from metagenomeSeq
q0.25_res$species
# the sig results (FDR < 0.25) from Corncob
dv_analysis$significant_taxa
# the sig results (FDR < 0.25) from MaAsLin2
sig$feature
# the sig results (FDR < 0.25) from metagenomeSeq
q0.25_res$species
# the sig results (FDR < 0.25) from Corncob
dv_analysis$significant_taxa
# what is the taxa annotation for the shared 1
all3 <- intersect(intersect(q0.25_res$species,sig$feature), dv_analysis$significant_taxa)
all3
# what is the taxa annotation for the shared 1
all3 <- intersect(intersect(q0.25_res$species,sig$feature), dv_analysis$significant_taxa)
all3
# the intersected sig results between corncob and metagenomicSeq
intersect(q0.25_res$species,dv_analysis$significant_taxa)
# the intersected sig results between corncob and maaslin2
intersect(sig$feature,dv_analysis$significant_taxa)
# the sig results (FDR < 0.25) from MaAsLin2
sig$feature
# the sig results (FDR < 0.25) from metagenomeSeq
q0.25_res$species
# the sig results (FDR < 0.25) from Corncob
dv_analysis$significant_taxa
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(cowplot)
library(ggimage)
library(lemon)
faith <- read_tsv('../data/cleaned_diet_data/FINAL_97_faith_pd/alpha-diversity.tsv') %>%
separate(...1, into = c('mrn', 'fdrt'), sep = 'd', convert = T)
View(faith)
dcoords <- read_csv('../data/016_umap_embedding_for_angel.csv')
View(dcoords)
day_calori <- dtb %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal))
dtb <- read_csv('../data/cleaned_diet_data/FINAL_97_with_code_all_foods_drt_with_EN_finalized.csv')
meta <- read_csv('../data/cleaned_stool/all_samples_meta_p2d_fg9_updated.csv')
dtb %>% distinct(Food_code)
# how many days of data among all of the patients?
dtb %>% count(mrn,  fdrt) %>%
count(mrn) %>%
summarise(total_days = sum(n))
day_calori <- dtb %>%
group_by(mrn, fdrt) %>%
summarise(daycal = sum(Calories_kcal))
View(day_calori)
# this faith pd is recently calculated in 2021-07
faith <- read_tsv('../data/cleaned_diet_data/FINAL_97_faith_pd/alpha-diversity.tsv') %>%
separate(...1, into = c('mrn', 'fdrt'), sep = 'd', convert = T)  %>%
mutate(mrn = as.numeric(str_replace(mrn, 'P','')))
m_all <- dtb %>%
select(mrn, fdrt,Protein_g:Sodium_g ) %>%
gather('grp','gram', Protein_g:Sodium_g) %>%
mutate(grp = str_replace(grp, '_g$','')) %>%
group_by(mrn, fdrt, grp) %>%
summarise(eachsum = sum(gram))
