column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('BM','BMT')))
samples = sample_data(sampledata)
# assemble a phyloseq object
OTU = otu_table(cts, taxa_are_rows = T)
physeq = phyloseq(OTU,  samples)
# You may see NAs in the model summary because Wald testing is invalid.
#Likelihood ratio testing can be used, but valid standard errors cannot be calculated.
set.seed(1)
dv_analysis <- differentialTest(
formula = ~ grp,
phi.formula = ~ grp,
formula_null = ~ 1,
phi.formula_null = ~ grp,
test = "LRT", boot = FALSE,
data = physeq,
fdr_cutoff = 0.25)
dv_analysis$significant_models
dv_analysis$significant_taxa
# calculate the relab of the counts
total <- kaiju_counts %>%
group_by(sampleid) %>%
summarise(total = sum(counts))
relab <- kaiju_counts %>%
left_join(total) %>%
mutate(relab = counts/total)
# calculate the relab of the counts
total <- kaiju_counts %>%
group_by(sampleid) %>%
summarise(total = sum(counts))
relab <- kaiju_counts %>%
left_join(total) %>%
mutate(relab = counts/total)
library(Maaslin2)
cts_relab <- relab %>%
select(species, sampleid, relab) %>%
spread('species','relab', fill = 0) %>%
column_to_rownames('sampleid')
all.equal(rownames(sampledata), rownames(cts_relab))
fit_data <- Maaslin2(
input_data = cts_relab,
input_metadata = sampledata,
normalization = "TSS",
min_abundance = 0.0,
min_prevalence = 0.0,
max_significance = 0.25,
output = "../data/output_shotgun-Maaslin2_kaiju",
fixed_effects = c("grp"),
reference = c("grp,BM"))
sig <- read_tsv('../data/output_shotgun-Maaslin2_kaiju/significant_results.tsv') %>%
mutate(feature = str_replace_all(feature, '\\.','\\|'))
library(metagenomeSeq)
# use the unfiltered data
cts <- kaiju_d7_counts %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
pheno_data <- pheno %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('BM','BMT')))
all.equal(colnames(cts) , pheno$sampleid)
# assemble the object for metagenomeSeq
phenotypeData <- AnnotatedDataFrame(pheno_data)
d7 <- newMRexperiment(cts,phenoData=phenotypeData)
p = cumNormStatFast(d7)
d7 = filterData(d7, present = 5, depth = 100)
d7 <- cumNorm(d7, p = p)
pd <- pData(d7)
mod <- model.matrix(~1 + grp, data = pd)
d7_res = fitFeatureModel(d7, mod)
View(kaiju_d7_counts)
cts <- kaiju_counts %>%
spread('sampleid','counts', fill = 0) %>%
column_to_rownames('species')
library(metagenomeSeq)
pheno_data <- pheno %>%
column_to_rownames('sampleid') %>%
mutate(grp = factor(grp, levels = c('BM','BMT')))
all.equal(colnames(cts) , pheno$sampleid)
phenotypeData <- AnnotatedDataFrame(pheno_data)
d7 <- newMRexperiment(cts,phenoData=phenotypeData)
p = cumNormStatFast(d7)
View(cts)
d7 = filterData(d7, present = 1, depth = 1)
d7 <- cumNorm(d7, p = p)
pd <- pData(d7)
mod <- model.matrix(~1 + grp, data = pd)
d7_res = fitFeatureModel(d7, mod)
d7 = filterData(d7, present = 1, depth = 1)
d7 <- cumNorm(d7, p = p)
pd <- pData(d7)
mod <- model.matrix(~1 + grp, data = pd)
d7_res = fitFeatureModel(d7, mod)
d7_res_sig25 <- MRcoefs(d7_res) %>%
filter(adjPvalues < 0.25) %>%
rownames_to_column('species') \
d7 = filterData(d7, present = 1, depth = 1)
d7 <- cumNorm(d7, p = p)
pd <- pData(d7)
mod <- model.matrix(~1 + grp, data = pd)
d7_res = fitFeatureModel(d7, mod)
d7_res_sig25 <- MRcoefs(d7_res) %>%
filter(adjPvalues < 0.25) %>%
rownames_to_column('species')
View(d7_res_sig25)
library(ggvenn)
res_list <- list(metagenomeSeq = d7_res_sig25$species,
MaAsLin2 = sig$feature,
Corncob = dv_analysis$significant_taxa)
ggvenn(res_list, show_percentage = F)
ggsave('../data/09_d7_DE_venn_kaiju.pdf', width = 5)
# the sig results (FDR < 0.25) from MaAsLin2
sig$feature
# the sig results (FDR < 0.25) from metagenomeSeq
d7_res_sig25$species
# the sig results (FDR < 0.25) from Corncob
dv_analysis$significant_taxa
# what is the taxa annotation for the shared 1
all3 <- intersect(intersect(d7_res_sig25$species,sig$feature), dv_analysis$significant_taxa)
library(ggvenn)
res_list <- list(metagenomeSeq = d7_res_sig25$species,
MaAsLin2 = sig$feature,
Corncob = dv_analysis$significant_taxa)
ggvenn(res_list, show_percentage = F)
ggsave('../data/09_d7_DE_venn_kaiju.pdf', width = 5)
# what is the taxa annotation for the shared 1
all3 <- intersect(intersect(d7_res_sig25$species,sig$feature), dv_analysis$significant_taxa)
all3
# plot the boxplot relab of those asv
cts_relab %>%
rownames_to_column('sampleid') %>%
gather('species', 'relab', names(.)[2]:names(.)[ncol(.)]) %>%
filter(species %in% union(d7_res_sig25$species,union(sig$feature, dv_analysis$significant_taxa))) %>%
left_join(pheno %>% select(sampleid, grp)) %>%
mutate(spp = str_extract(species, 's__.+$')) %>%
split(.$spp) %>%
imap(function(df_, Name_) {
ggpubr::ggboxplot(data = df_,x = 'grp', y ='relab',  add = 'jitter',
title = Name_,
add.params = list(color = 'forestgreen', alpha = 0.5, size = 3, shape = 16))
})
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
) %>%
mutate(coeff_scale = coeff/max(coeff))
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p_fdr %>%
enframe('taxa', 'FDR') %>%
inner_join(corns) %>%
select(taxa, coeff_scale, FDR)%>%
mutate(tool = 'Corncob')
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)  %>%
mutate(coeff_scale = coef/max(coef)) %>%
select(taxa, coeff_scale, FDR = qval)%>%
mutate(tool = 'MaAsLin2')
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
rownames_to_column('taxa') %>%
mutate(coeff_scale = logFC/max(logFC)) %>%
select(taxa, coeff_scale,FDR = adjPvalues) %>%
mutate(tool = 'metagenomeSeq')
mmseq
library(viridis)
library(ggpubr)
three <- bind_rows(mmseq, mas, corns_p) %>%
mutate(taxa = str_extract(taxa, 's__.+$'))
three %>%
rename(`Relative coefficient (per tool)` = coeff_scale) %>%
ggpubr::ggdotchart( x = 'tool', y = 'taxa', rotate = F,
size = 'FDR', color = 'Relative coefficient (per tool)') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45),
legend.position = 'right') +
guides(
size = guide_legend(title = "Corrected p-value")) +
theme_cleveland()
ggsave('../data/07_three_tools_coeff.pdf', width = 10)
three %>% write_csv('../data/07_thre_tools_data.csv')
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
)
View(corns)
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
) %>%
filter(taxa %in% all3)
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
) %>%
filter(taxa %in% all3) %>%
mutate(coeff_scale = coeff/max(coeff))
corns_p <- dv_analysis$p_fdr %>%
enframe('taxa', 'FDR') %>%
inner_join(corns)
View(corns_p)
corns_p <- dv_analysis$p_fdr %>%
enframe('taxa', 'FDR') %>%
inner_join(corns)
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p_fdr %>%
enframe('taxa', 'FDR') %>%
inner_join(corns) %>%
select(taxa, coeff_scale, FDR)%>%
mutate(tool = 'Corncob')
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)
View(mas)
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)   %>%
filter(taxa %in% all3)
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)   %>%
filter(taxa %in% all3) %>%
mutate(coeff_scale = coef/max(coef)) %>%
select(taxa, coeff_scale, FDR = qval)%>%
mutate(tool = 'MaAsLin2')
mmseq <- d7_res_sig25 %>%
rownames_to_column('taxa') %>%
filter(taxa %in% all3)
View(mmseq)
mmseq <- d7_res_sig25 %>%
filter(species %in% all3)
mmseq <- d7_res_sig25 %>%
filter(species %in% all3)
mmseq <- d7_res_sig25 %>%
filter(species %in% all3)
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
filter(species %in% all3) %>%
mutate(coeff_scale = logFC/max(logFC)) %>%
select(taxa, coeff_scale,FDR = adjPvalues) %>%
mutate(tool = 'metagenomeSeq')
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
filter(species %in% all3) %>%
mutate(coeff_scale = logFC/max(logFC)) %>%
select(species, coeff_scale,FDR = adjPvalues) %>%
mutate(tool = 'metagenomeSeq')
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
filter(species %in% all3) %>%
mutate(coeff_scale = logFC/max(logFC)) %>%
select(species, coeff_scale,FDR = adjPvalues) %>%
mutate(tool = 'metagenomeSeq') %>%
rename(taxa = species)
library(viridis)
library(ggpubr)
three <- bind_rows(mmseq, mas, corns_p)
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
filter(species %in% all3) %>%
mutate(coeff_scale = logFC/max(logFC)) %>%
select(species, coeff_scale,FDR = adjPvalues) %>%
mutate(tool = 'metagenomeSeq') %>%
rename(taxa = species)
mmseq
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
filter(species %in% all3) %>%
mutate(coeff_scale = logFC/max(logFC)) %>%
select(species, coeff_scale,FDR = adjPvalues) %>%
mutate(tool = 'metagenomeSeq') %>%
rename(taxa = species)
mmseq
library(viridis)
library(ggpubr)
three <- bind_rows(mmseq, mas, corns_p)
View(three)
kaiju_counts_original_species <- kaiju_d7_counts %>%
filter(species %in% filt_species)  %>%
# clean the characters here and replace all of them with underscores
mutate(newname = str_replace_all(species, ' |-|\\.|:|\\(|\\)|\\[|\\]','_'))
kaiju_counts_original_species
kaiju_counts_original_species <- kaiju_d7_counts %>%
filter(species %in% filt_species)  %>%
# clean the characters here and replace all of them with underscores
mutate(newname = str_replace_all(species, ' |-|\\.|:|\\(|\\)|\\[|\\]','_')) %>%
distinct(species, newname)
View(kaiju_counts_original_species)
kaiju_counts_original_species <- kaiju_d7_counts %>%
filter(species %in% filt_species)  %>%
# clean the characters here and replace all of them with underscores
mutate(newname = str_replace_all(species, ' |-|\\.|:|\\(|\\)|\\[|\\]','_')) %>%
distinct(species, newname) %>%
rename(taxa = newname,
original = species)
three <- bind_rows(mmseq, mas, corns_p) %>%
inner_join(kaiju_counts_original_species)
three
three %>%
rename(`Relative coefficient (per tool)` = coeff_scale) %>%
ggpubr::ggdotchart( x = 'tool', y = 'original', rotate = F,
size = 'FDR', color = 'Relative coefficient (per tool)') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45),
legend.position = 'right') +
guides(
size = guide_legend(title = "Corrected p-value")) +
theme_cleveland()
three %>%
rename(`Relative coefficient (per tool)` = coeff_scale) %>%
ggpubr::ggdotchart( x = 'tool', y = 'original', rotate = F,
size = 'FDR', color = 'Relative coefficient (per tool)') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45),
legend.position = 'right') +
guides(
size = guide_legend(title = "Corrected p-value")) +
theme_cleveland()
three %>% write_csv('../data/09_thre_tools_data_kaiju.csv')
three %>%
rename(`Relative coefficient (per tool)` = coeff_scale) %>%
ggpubr::ggdotchart( x = 'tool', y = 'original', rotate = F,
size = 'FDR', color = 'Relative coefficient (per tool)') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45),
legend.position = 'right') +
guides(
size = guide_legend(title = "Corrected p-value")) +
theme_cleveland()
ggsave('../data/09_three_tools_coeff_kaiju.pdf', width = 10)
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
)
View(corns)
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
)
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
)
View(corns)
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
)
dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
)
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
) %>%
mutate(coeff_scale = sign(coeff)*(abs(coeff)/max(abs(coeff)))) %>%
filter(taxa %in% all3)
# get the corncob coeff for the sig ones
corns <- dv_analysis$significant_models %>%
set_names(dv_analysis$significant_taxa) %>%
map_dfr(function(item){
item$coefficients[2,1]
}) %>%
gather(
'taxa','coeff'
) %>%
mutate(coeff_scale = sign(coeff)*(abs(coeff)/max(abs(coeff)))) %>%
filter(taxa %in% all3)
# also getting the corrected p value for each taxa
corns_p <- dv_analysis$p_fdr %>%
enframe('taxa', 'FDR') %>%
inner_join(corns) %>%
select(taxa, coeff_scale, FDR)%>%
mutate(tool = 'Corncob')
sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)
sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)   %>%
mutate(coeff_scale = sign(coeff)*(abs(coeff)/max(abs(coeff))))
sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)
# for Maaslin2
mas <- sig %>%
filter(qval < 0.25) %>%
select(taxa = feature,
coef, qval)   %>%
mutate(coeff_scale = sign(coef)*(abs(coef)/max(abs(coef))))  %>%
filter(taxa %in% all3) %>%
select(taxa, coeff_scale, FDR = qval)%>%
mutate(tool = 'MaAsLin2')
d7_res_sig25 %>%
filter(species %in% all3)
d7_res_sig25
# for the metagenomic seq
mmseq <- d7_res_sig25 %>%
mutate(coeff_scale = sign(logFC)*(abs(logFC)/max(abs(logFC)))) %>%
filter(species %in% all3) %>%
select(species, coeff_scale,FDR = adjPvalues) %>%
mutate(tool = 'metagenomeSeq') %>%
rename(taxa = species)
mmseq
library(viridis)
library(ggpubr)
three <- bind_rows(mmseq, mas, corns_p) %>%
inner_join(kaiju_counts_original_species)
View(three)
three %>%
rename(`Relative coefficient (per tool)` = coeff_scale) %>%
ggpubr::ggdotchart( x = 'tool', y = 'original', rotate = F,
size = 'FDR', color = 'Relative coefficient (per tool)') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45),
legend.position = 'right') +
guides(
size = guide_legend(title = "Corrected p-value")) +
theme_cleveland()
library(viridis)
library(ggpubr)
three <- bind_rows(mmseq, mas, corns_p) %>%
inner_join(kaiju_counts_original_species)
three %>%
rename(`Relative coefficient (per tool)` = coeff_scale) %>%
ggpubr::ggdotchart( x = 'tool', y = 'original', rotate = F,
size = 'FDR', color = 'Relative coefficient (per tool)') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45),
legend.position = 'right') +
guides(
size = guide_legend(title = "Corrected p-value")) +
theme_cleveland()
ggsave('../data/09_three_tools_coeff_kaiju.pdf', width = 10)
three %>% write_csv('../data/09_thre_tools_data_kaiju.csv')
three %>%
rename(`Relative coefficient (per tool)` = coeff_scale) %>%
ggpubr::ggdotchart( x = 'tool', y = 'original', rotate = F,
size = 'FDR', color = 'Relative coefficient (per tool)') +
scale_color_viridis_b() +
scale_size(trans = 'reverse') +
theme(axis.text.x = element_text(angle = 45),
legend.position = 'right') +
guides(
size = guide_legend(title = "Corrected p-value")) +
theme_cleveland()
