#Oct/22/2019
#
#Create username specific access to database in VDB lab.
#It removes the general `guest` account.
#
#
#Dropping user:
#  drop owned by test; drop role test; (https://stackoverflow.com/questions/9840955/postgresql-drop-role-fails-because-of-default-privileges)
#
#In order to set a new password, users need to run the following command:
#dbSendQuery(conn = con,"alter role YOUR_USERNAME password 'YOUR_PASSWORD'");
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# when there is request for new connection, add the new username to the list downbelow
# after the person changed the password, run this script again to unlock this user. then he should be good to go.
# (if the person doesn't change pw within 3 days), run :
#dbSendQuery(conn = con, "drop owned by <user>; drop role <user>")
#to drop the user
# (run this script and look down below to check who changed and who didn't  )
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
library(DBI)
source('create_new_postgres_user.R');
vdb_users <- c("peledj",
"burgosdm",
"docampom",
"slingerj",
"nguyenc1",
"daia1",
"markeyk",
"armijog",
"miltiado",
"andrlovh",
"lindners",
"breretod",
"giardinp",
"khann2",
"zuanellc",
"hatfielp",
"clurmana",
"smithm4",
#"test_user"
"adintorp",
"ngb",
"chens8",
"elkriefa",
"mab4025",
"harfordl",
"jesusfar",
"crossj",
'funnellt',
"watersn",
"maclachlan",
"rajs");
#               "gomesa_cluster");
collaboration_users <- c("shouvalr",
"lesokhia",
"rollingt",
"chowelld",
"krishnac");
#temporary_pw=my.name <- readline(prompt="Enter temporary password: ")
temporary_pw='test123456';
vdb_and_collaborator_users <- c(vdb_users,
collaboration_users);
#stop("Stopping before creating user");
for(i in 1:length(vdb_and_collaborator_users)){
create_new_postgres_user(vdb_and_collaborator_users[i],temporary_pw);
}
cat("\n\n")
#create_new_postgres_user(vdb_users[length(vdb_users)],temporary_pw);
if(1){
#Run this part to remove passwords!
for(i in 1:length(vdb_and_collaborator_users)){
block_user_who_did_not_change_password(vdb_and_collaborator_users[i],
temporary_pw)
}
}
#block_user_who_did_not_change_password(vdb_users[length(vdb_users)],temporary_pw);
#Oct/22/2019
#
#Create username specific access to database in VDB lab.
#It removes the general `guest` account.
#
#
#Dropping user:
#  drop owned by test; drop role test; (https://stackoverflow.com/questions/9840955/postgresql-drop-role-fails-because-of-default-privileges)
#
#In order to set a new password, users need to run the following command:
#dbSendQuery(conn = con,"alter role YOUR_USERNAME password 'YOUR_PASSWORD'");
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# when there is request for new connection, add the new username to the list downbelow
# after the person changed the password, run this script again to unlock this user. then he should be good to go.
# (if the person doesn't change pw within 3 days), run :
#dbSendQuery(conn = con, "drop owned by <user>; drop role <user>")
#to drop the user
# (run this script and look down below to check who changed and who didn't  )
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
library(DBI)
source('create_new_postgres_user.R');
vdb_users <- c("peledj",
"burgosdm",
"docampom",
"slingerj",
"nguyenc1",
"daia1",
"markeyk",
"armijog",
"miltiado",
"andrlovh",
"lindners",
"breretod",
"giardinp",
"khann2",
"zuanellc",
"hatfielp",
"clurmana",
"smithm4",
#"test_user"
"adintorp",
"ngb",
"chens8",
"elkriefa",
"mab4025",
"harfordl",
"jesusfar",
"crossj",
'funnellt',
"watersn",
"maclachlan",
"harfordl",
"rajs");
#               "gomesa_cluster");
collaboration_users <- c("shouvalr",
"lesokhia",
"rollingt",
"chowelld",
"krishnac");
#temporary_pw=my.name <- readline(prompt="Enter temporary password: ")
temporary_pw='test123456';
vdb_and_collaborator_users <- c(vdb_users,
collaboration_users);
#stop("Stopping before creating user");
for(i in 1:length(vdb_and_collaborator_users)){
create_new_postgres_user(vdb_and_collaborator_users[i],temporary_pw);
}
cat("\n\n")
#create_new_postgres_user(vdb_users[length(vdb_users)],temporary_pw);
if(1){
#Run this part to remove passwords!
for(i in 1:length(vdb_and_collaborator_users)){
block_user_who_did_not_change_password(vdb_and_collaborator_users[i],
temporary_pw)
}
}
#block_user_who_did_not_change_password(vdb_users[length(vdb_users)],temporary_pw);
#Oct/22/2019
#
#Create username specific access to database in VDB lab.
#It removes the general `guest` account.
#
#
#Dropping user:
#  drop owned by test; drop role test; (https://stackoverflow.com/questions/9840955/postgresql-drop-role-fails-because-of-default-privileges)
#
#In order to set a new password, users need to run the following command:
#dbSendQuery(conn = con,"alter role YOUR_USERNAME password 'YOUR_PASSWORD'");
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# when there is request for new connection, add the new username to the list downbelow
# after the person changed the password, run this script again to unlock this user. then he should be good to go.
# (if the person doesn't change pw within 3 days), run :
#dbSendQuery(conn = con, "drop owned by <user>; drop role <user>")
#to drop the user
# (run this script and look down below to check who changed and who didn't  )
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
library(DBI)
source('create_new_postgres_user.R');
vdb_users <- c("peledj",
"burgosdm",
"docampom",
"slingerj",
"nguyenc1",
"daia1",
"markeyk",
"armijog",
"miltiado",
"andrlovh",
"lindners",
"breretod",
"giardinp",
"khann2",
"zuanellc",
"hatfielp",
"clurmana",
"smithm4",
#"test_user"
"adintorp",
"ngb",
"chens8",
"elkriefa",
"mab4025",
"harfordl",
"jesusfar",
"crossj",
'funnellt',
"watersn",
"maclachlan",
"harfordl",
"rajs");
#               "gomesa_cluster");
collaboration_users <- c("shouvalr",
"lesokhia",
"rollingt",
"chowelld",
"krishnac");
#temporary_pw=my.name <- readline(prompt="Enter temporary password: ")
temporary_pw='test123456';
vdb_and_collaborator_users <- c(vdb_users,
collaboration_users);
#stop("Stopping before creating user");
for(i in 1:length(vdb_and_collaborator_users)){
create_new_postgres_user(vdb_and_collaborator_users[i],temporary_pw);
}
cat("\n\n")
#create_new_postgres_user(vdb_users[length(vdb_users)],temporary_pw);
if(1){
#Run this part to remove passwords!
for(i in 1:length(vdb_and_collaborator_users)){
block_user_who_did_not_change_password(vdb_and_collaborator_users[i],
temporary_pw)
}
}
#block_user_who_did_not_change_password(vdb_users[length(vdb_users)],temporary_pw);
#Oct/22/2019
#
#Create username specific access to database in VDB lab.
#It removes the general `guest` account.
#
#
#Dropping user:
#  drop owned by test; drop role test; (https://stackoverflow.com/questions/9840955/postgresql-drop-role-fails-because-of-default-privileges)
#
#In order to set a new password, users need to run the following command:
#dbSendQuery(conn = con,"alter role YOUR_USERNAME password 'YOUR_PASSWORD'");
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# when there is request for new connection, add the new username to the list downbelow
# after the person changed the password, run this script again to unlock this user. then he should be good to go.
# (if the person doesn't change pw within 3 days), run :
#dbSendQuery(conn = con, "drop owned by <user>; drop role <user>")
#to drop the user
# (run this script and look down below to check who changed and who didn't  )
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
library(DBI)
source('create_new_postgres_user.R');
vdb_users <- c("peledj",
"burgosdm",
"docampom",
"slingerj",
"nguyenc1",
"daia1",
"markeyk",
"armijog",
"miltiado",
"andrlovh",
"lindners",
"breretod",
"giardinp",
"khann2",
"zuanellc",
"hatfielp",
"clurmana",
"smithm4",
#"test_user"
"adintorp",
"ngb",
"chens8",
"elkriefa",
"mab4025",
"harfordl",
"jesusfar",
"crossj",
'funnellt',
"watersn",
"maclachlan",
"harfordl",
"rajs");
#               "gomesa_cluster");
collaboration_users <- c("shouvalr",
"lesokhia",
"rollingt",
"chowelld",
"krishnac");
#temporary_pw=my.name <- readline(prompt="Enter temporary password: ")
temporary_pw='test123456';
vdb_and_collaborator_users <- c(vdb_users,
collaboration_users);
#stop("Stopping before creating user");
for(i in 1:length(vdb_and_collaborator_users)){
create_new_postgres_user(vdb_and_collaborator_users[i],temporary_pw);
}
cat("\n\n")
#create_new_postgres_user(vdb_users[length(vdb_users)],temporary_pw);
if(1){
#Run this part to remove passwords!
for(i in 1:length(vdb_and_collaborator_users)){
block_user_who_did_not_change_password(vdb_and_collaborator_users[i],
temporary_pw)
}
}
#block_user_who_did_not_change_password(vdb_users[length(vdb_users)],temporary_pw);
#Oct/22/2019
#
#Create username specific access to database in VDB lab.
#It removes the general `guest` account.
#
#
#Dropping user:
#  drop owned by test; drop role test; (https://stackoverflow.com/questions/9840955/postgresql-drop-role-fails-because-of-default-privileges)
#
#In order to set a new password, users need to run the following command:
#dbSendQuery(conn = con,"alter role YOUR_USERNAME password 'YOUR_PASSWORD'");
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# when there is request for new connection, add the new username to the list downbelow
# after the person changed the password, run this script again to unlock this user. then he should be good to go.
# (if the person doesn't change pw within 3 days), run :
#dbSendQuery(conn = con, "drop owned by <user>; drop role <user>")
#to drop the user
# (run this script and look down below to check who changed and who didn't  )
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
library(DBI)
source('create_new_postgres_user.R');
vdb_users <- c("peledj",
"burgosdm",
"docampom",
"slingerj",
"nguyenc1",
"daia1",
"markeyk",
"armijog",
"miltiado",
"andrlovh",
"lindners",
"breretod",
"giardinp",
"khann2",
"zuanellc",
"hatfielp",
"clurmana",
"smithm4",
#"test_user"
"adintorp",
"ngb",
"chens8",
"elkriefa",
"mab4025",
"harfordl",
"jesusfar",
"crossj",
'funnellt',
"watersn",
"maclachlan",
"feit1",
"rajs");
#               "gomesa_cluster");
collaboration_users <- c("shouvalr",
"lesokhia",
"rollingt",
"chowelld",
"krishnac");
#temporary_pw=my.name <- readline(prompt="Enter temporary password: ")
temporary_pw='test123456';
vdb_and_collaborator_users <- c(vdb_users,
collaboration_users);
#stop("Stopping before creating user");
for(i in 1:length(vdb_and_collaborator_users)){
create_new_postgres_user(vdb_and_collaborator_users[i],temporary_pw);
}
cat("\n\n")
#create_new_postgres_user(vdb_users[length(vdb_users)],temporary_pw);
if(1){
#Run this part to remove passwords!
for(i in 1:length(vdb_and_collaborator_users)){
block_user_who_did_not_change_password(vdb_and_collaborator_users[i],
temporary_pw)
}
}
#block_user_who_did_not_change_password(vdb_users[length(vdb_users)],temporary_pw);
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
# all the irep values I got
fns <- list.files('../data/growth/irep/bhatirep/', full.names = T, pattern = '.tsv')
irep <- fns %>%
set_names(fns) %>%
purrr::map(~  read_tsv(file = ., n_max = 1 , col_types = 'cc',  skip = 2, col_names = c('bin','iRep')) %>%  select(iRep) ) %>%
bind_rows(.id = 'fn') %>%
mutate(fn = str_replace(fn, '_irep.tsv$',''),
fn = str_replace(fn, '../data/growth/irep/bhatirep//','')) %>%
separate(fn, into = c('sampleid','samplebin'), sep = '__concat__', remove = T) %>%
mutate(iRep = as.numeric(iRep)) %>%
mutate(samplebin = str_replace(samplebin, '_irep_dastool.tsv','')) %>%
mutate(sbid = str_glue('{sampleid}__{samplebin}'))
tb <- read_tsv('../data/growth/bhatpipeline/binning_table_all_simple.tsv') %>%
rename_all(~ gsub("\\.", "_", .)) %>%
filter(bin_quality_call %in% c('2) medium quality','3) high quality Nayfach','4) high quality Bowers'))  %>%
filter(Completeness >= 75) %>%
mutate(Sample = str_replace(Sample, '__concat',''),
sbid = str_glue('{Sample}__{Bin}')) %>%
inner_join(irep, by  = 'sbid') %>%
distinct(Sample, best_species, .keep_all = T)
# combined %>%
#   mutate(gt15 = if_else(iRep > 1.5, T, F)) %>%
#   count(gt15) %>%
#   mutate(perc = n/sum(n)*100)
View(tb)
library(vdbR)
library(DBI)
install.packages("RPostgreSQL")
