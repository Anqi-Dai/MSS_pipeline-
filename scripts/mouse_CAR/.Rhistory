bar_palette <- genera %>%
filter(genus %in% keepgenera) %>%
distinct(ge) %>%
arrange(ge) %>%
mutate(color = palette)
bar_plot_pal <- deframe(bar_palette)
# the few samples
few <- all %>%
filter(sampleid %in% c('PH18','PH19','PH20','PH21','PH22','PH23', 'PH24', 'PH25', 'PH26', 'PH131')) %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(relative_abundance)) %>%
ungroup() %>%
mutate(ge = str_extract(genus, 'g__.+$')) %>%
left_join(FMT, by = "sampleid") %>%
mutate(condition_simple = factor(condition_simple, levels = order_level)) %>%
arrange(Date_Collected, Group, Mouse_num) %>%
mutate(sid = str_glue('Condition {condition_simple}: Group {Group}: Mouse {Mouse_num}: {sampleid}'))
few %>%
filter(genus %in% keepgenera) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'ge', color = 'white' , xlab = '', ylab = 'Relative abundance') +
#facet_wrap(Day ~ fiber, scales = 'free') +
scale_fill_manual(values = bar_plot_pal) +
theme( axis.text.x = element_text(angle=90, hjust=0, size = 6.5),
legend.position = 'bottom')
ggsave('../data/03_bar_few.pdf', width = 14, height = 7)
View(taxa)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
View(asv_alpha_diversity_ag)
# all CS samples
all <- asv_alpha_diversity_ag %>%
filter(str_detect(sampleid, '^CS'))
View(all)
library(tidyverse)
pheno1 <- read_csv('../data/CS_experi1.csv')
View(pheno1)
pheno1 <- read_csv('../data/CS_experi1.csv')
pheno1 <- read_csv('../data/CS_experi1.csv')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
dat <- readxl::read_excel('../data/Diet Excel.xlsx', sheet = 1) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'Percent', names(.)[2]:names(.)[4]) %>%
rename(Macronutrient = `Calories_provided_by_(%)`) %>%
arrange(type)
dat %>%
ggbarplot(x = 'type', y = 'Percent', facet.by = 'Macronutrient', sort.by.groups = T,color = 'Macronutrient', palette = 'lancet', fill = 'Macronutrient', xlab = '' ) +
theme(axis.text.x = element_text(angle=45, hjust=1))
ggsave('../data/Pam_three_diets.pdf', width = 8, height = 5)
s2 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 2) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
rename(Item = `Composition_(Nutrients_expressed_as_percent_of_ration_on_an_As-Fed_basis)`) %>%
arrange(type)
s2 %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Item', sort.by.groups = T,color = 'Item', palette = 'jco', fill = 'Item', xlab = '' ,ylab = '') +
facet_grid(Item ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_2.pdf', width = 3, height = 8)
s3 <-  readxl::read_excel('../data/Diet Excel.xlsx', sheet = 3) %>%
rename_all(~ gsub(" ", "_", .)) %>%
gather('type', 'value', names(.)[2]:names(.)[3]) %>%
arrange(type)
s3 %>%
filter(!str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', facet.by = 'Fat_Composition', color = 'Fat_Composition', palette = 'nejm', fill = 'Fat_Composition', xlab = '' ,  ylab = 'percent') +
facet_grid(Fat_Composition ~ .) +
theme(axis.text.x = element_text(angle=45, hjust=1),
strip.text = element_text(size =8),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3.pdf', width = 3, height = 12)
s3 %>%
filter(str_detect(Fat_Composition, 'ppm')) %>%
ggbarplot(x = 'type', y = 'value', color = 'forestgreen',  fill = 'forestgreen', xlab = '' ,  ylab = 'PPM') +
theme(axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../data/Pam_three_diets_sheet_3_ppm.pdf', width = 3, height = 3)
day30 <- pheno1 %>%
filter(str_detect(Date_Collected, '30'))
View(day30)
library(ggpubr)
day30
alpha30 <- asv_alpha_diversity_ag %>%
filter(sampleid %in% day30$sampleid)
View(alpha30)
alpha1 <- day30 %>% full_join(alpha30)
View(alpha1)
alpha1
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal')
alpha1
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal')  +
stat_compare_means(comparisons= list(c('Control Diet', 'HF Diet')),
label= "p.signif",
method= 'wilcox.test',
correct=FALSE)
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal')  +
stat_compare_means(comparisons= list(c('Control Diet', 'HF Diet')),
label= "p.signif",
method= 'wilcox.test',
correct=FALSE)
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal')  +
stat_compare_means(comparisons= list(c('Control Diet', 'HF Diet')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
alpha1
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter')  +
stat_compare_means(comparisons= list(c('Control Diet', 'HF Diet')),
label= "p.format",
method= 'wilcox.test',
correct=FALSE)
alpha1
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter')
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter')  +
stat_compare_means(comparisons= list(c('Control Diet', 'HF Diet')),
label= "p.format",
method= 'wilcox.test',
correct=T)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
library(vdbR)
connect_database()
get_table_from_database('asv_alpha_diversity_ag')
# all CS samples
all <- asv_alpha_diversity_ag %>%
filter(str_detect(sampleid, '^CS'))
pheno1 <- read_csv('../data/CS_experi1.csv')
day30 <- pheno1 %>%
filter(str_detect(Date_Collected, '30'))
alpha30 <- asv_alpha_diversity_ag %>%
filter(sampleid %in% day30$sampleid)
alpha1 <- day30 %>% full_join(alpha30)
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter')  +
stat_compare_means(comparisons= list(c('Control Diet', 'HF Diet')),
label= "p.format",
method= 'wilcox.test',
correct=T)
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter')  +
stat_compare_means()
ggsave('../data/05_d30_alpha.pdf', width = 4, height = 4)
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter', color = 'Condition')  +
stat_compare_means()
ggsave('../data/05_d30_alpha.pdf', width = 4, height = 4)
# all CS samples
all <- asv_alpha_diversity_ag %>%
filter(str_detect(sampleid, '^CS'))
pheno1 <- read_csv('../data/CS_experi1.csv')
day30 <- pheno1 %>%
filter(str_detect(Date_Collected, '30'))
alpha30 <- asv_alpha_diversity_ag %>%
filter(sampleid %in% day30$sampleid)
alpha1 <- day30 %>% full_join(alpha30)
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter', color = 'Condition', add.params = list(size = 3))  +
stat_compare_means()
ggsave('../data/05_d30_alpha.pdf', width = 4, height = 4)
# all CS samples
all <- asv_alpha_diversity_ag %>%
filter(str_detect(sampleid, '^CS'))
pheno1 <- read_csv('../data/CS_experi1.csv')
day30 <- pheno1 %>%
filter(str_detect(Date_Collected, '30'))
alpha30 <- asv_alpha_diversity_ag %>%
filter(sampleid %in% day30$sampleid)
alpha1 <- day30 %>% full_join(alpha30)
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter', color = 'Condition', add.params = list(size = 3))  +
stat_compare_means()
ggsave('../data/05_d30_alpha.pdf', width = 4, height = 4)
day30 %>%
distinct(Condition)
color_key <- day30 %>%
distinct(Condition) %>%
mutate(color = c('#42B440','orange')) %>%
deframe()
# all CS samples
all <- asv_alpha_diversity_ag %>%
filter(str_detect(sampleid, '^CS'))
pheno1 <- read_csv('../data/CS_experi1.csv')
day30 <- pheno1 %>%
filter(str_detect(Date_Collected, '30'))
color_key <- day30 %>%
distinct(Condition) %>%
mutate(color = c('#42B440','orange')) %>%
deframe()
alpha30 <- asv_alpha_diversity_ag %>%
filter(sampleid %in% day30$sampleid)
alpha1 <- day30 %>% full_join(alpha30)
alpha1 %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter', color = 'Condition', add.params = list(size = 3))  +
scale_color_manual(values = color_key) +
stat_compare_means()
ggsave('../data/05_d30_alpha.pdf', width = 4, height = 4)
get_table_from_database('asv_annotation_blast_ag')
get_table_from_database('asv_annotation_blast_color_ag')
View(pheno1)
# the bar plot
counts_data <- get_counts_subset(pheno1$sampleid)
dat <- counts_data %>%
select(asv_key:count_total, count_relative) %>%
left_join(asv_annotation_blast_color_ag %>%
select(asv_key,color_label_group_distinct), by = "asv_key")
asv_color_set <- asv_annotation_blast_color_ag %>%
distinct(color,color_label_group_distinct,color_label_group,color_base) %>%
select(color_label_group_distinct, color) %>%
deframe()
dat
stacked_bar <- ggplot(dat,aes(sampleid, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
labs(title = '',
x = '',
y = 'Relative abundance') +
theme(
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
stacked_bar
dat
dat <- counts_data %>%
select(asv_key:count_total, count_relative) %>%
left_join(asv_annotation_blast_color_ag %>%
select(asv_key,color_label_group_distinct), by = "asv_key") %>%
left_join(pheno1)
dat <- counts_data %>%
select(asv_key:count_total, count_relative) %>%
left_join(asv_annotation_blast_color_ag %>%
select(asv_key,color_label_group_distinct), by = "asv_key") %>%
left_join(pheno1, by = "sampleid")
dat
stacked_bar <- ggplot(dat,aes(sampleid, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
labs(title = '',
x = '',
y = 'Relative abundance') +
facet_grid(Condition ~ Date_Collected) +
theme(
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
stacked_bar
stacked_bar <- ggplot(dat,aes(sampleid, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
labs(title = '',
x = '',
y = 'Relative abundance') +
facet_grid(Condition ~ Date_Collected, scales = 'free') +
theme(
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
stacked_bar
stacked_bar <- ggplot(dat,aes(sampleid, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
labs(title = '',
x = '',
y = 'Relative abundance') +
facet_grid(Condition ~ Date_Collected, scales = 'free') +
theme(
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
stacked_bar
stacked_bar <- ggplot(dat,aes(sampleid, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
labs(title = '',
x = '',
y = 'Relative abundance') +
facet_grid(Condition ~ Date_Collected, scales = 'free') +
theme(
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
stacked_bar
ggsave('../data/05_stacked_bar_pheno1.pdf', width = 8, height = 6)
stacked_bar <- ggplot(dat,aes(sampleid, count_relative, fill = color_label_group_distinct) ) +
geom_bar(stat = "identity", position="fill", width = 1) +
theme_classic() +
labs(title = '',
x = '',
y = 'Relative abundance') +
facet_grid(Condition ~ Date_Collected, scales = 'free') +
theme(axis.text.x = element_text(angle=90, hjust=1),
legend.position = "none") +
scale_fill_manual(values = asv_color_set)
ggsave('../data/05_stacked_bar_pheno1.pdf', width = 8, height = 6)
pheno2 <- read_csv('../data/CS_pheno2.csv')
View(psql_con)
View(pheno2)
pheno2
pheno2 <- read_csv('../data/CS_pheno2.csv') %>%
mutate(grp = if_else(str_detect(Condition, 'C$'), 'Control', 'High fat'))
pheno2
cts <- get_counts_subset(pheno2$sampleid)
View(cts)
pheno2 <- read_csv('../data/CS_pheno2.csv') %>%
mutate(grp = if_else(str_detect(Condition, 'C$'), 'Control', 'High fat'))
keepa <- cts %>%
filter(count_relative > 0.0001) %>%
count(asv_key) %>%
filter(n > floor(nrow(pheno2) * 0.25)) %>%
pull(asv_key)
cts_fil <- cts %>%
filter(asv_key %in% keepa) %>%
select(sampleid, asv_key,count_relative ) %>%
spread(key = 'asv_key', value = 'count_relative', fill = 0) %>%
column_to_rownames('sampleid')
View(cts_fil)
View(cts_fil)
library(vegan)
dist_ <- vegdist(cts_fil, method = 'bray')
eigen <- pcoa(dist_)$values$Eigenvalues
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
bc %>%
as.data.frame() %>%
rownames_to_column('sampleid') %>%
ungroup()
bc %>%
as.data.frame() %>%
rownames_to_column('sampleid') %>%
ungroup() %>%
inner_join(pheno2) %>%
distinct()
cts_fil <- cts %>%
filter(asv_key %in% keepa) %>%
select(sampleid, asv_key,count_relative ) %>%
spread(key = 'asv_key', value = 'count_relative', fill = 0) %>%
column_to_rownames('sampleid')
library(vegan)
dist_ <- vegdist(cts_fil, method = 'bray')
eigen <- pcoa(dist_)$values$Eigenvalues
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
bc %>%
as.data.frame() %>%
rownames_to_column('sampleid') %>%
ungroup() %>%
inner_join(pheno2) %>%
distinct() %>%
ggscatter(x = 'V1', y = 'V2', color =  'grp') +
labs(title = 'PCOA of ') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
#theme_void() +
#  ggsave('../figs/PCOA(bray-curtis) of healthy and CART patients.pdf')
pheno2 <- read_csv('../data/CS_pheno2.csv') %>%
mutate(grp = if_else(str_detect(Condition, 'C$'), 'Control', 'High fat'),
donor = case_when(
str_detect(Condition, '1') ~ 'Donor1',
str_detect(Condition, '2') ~ 'Donor2',
str_detect(Condition, '3') ~ 'Donor3'
))
cts <- get_counts_subset(pheno2$sampleid)
keepa <- cts %>%
filter(count_relative > 0.0001) %>%
count(asv_key) %>%
filter(n > floor(nrow(pheno2) * 0.25)) %>%
pull(asv_key)
cts_fil <- cts %>%
filter(asv_key %in% keepa) %>%
select(sampleid, asv_key,count_relative ) %>%
spread(key = 'asv_key', value = 'count_relative', fill = 0) %>%
column_to_rownames('sampleid')
library(vegan)
dist_ <- vegdist(cts_fil, method = 'bray')
eigen <- pcoa(dist_)$values$Eigenvalues
percent_var <- signif(eigen/sum(eigen), 3)*100
bc <- cmdscale(dist_, k = 2)
bc %>%
as.data.frame() %>%
rownames_to_column('sampleid') %>%
ungroup() %>%
inner_join(pheno2) %>%
distinct() %>%
ggscatter(x = 'V1', y = 'V2', color =  'grp') +
labs(title = 'PCOA of ') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
#theme_void() +
#  ggsave('../figs/PCOA(bray-curtis) of healthy and CART patients.pdf')
bc %>%
as.data.frame() %>%
rownames_to_column('sampleid') %>%
ungroup() %>%
inner_join(pheno2) %>%
distinct() %>%
ggscatter(x = 'V1', y = 'V2', color =  'donor', shape = 'grp') +
labs(title = 'PCOA of ') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
View(all)
batch2 <- asv_alpha_diversity_ag %>%
filter(sampleid %in% pheno2$sampleid)
View(batch2)
pheno2 <- read_csv('../data/CS_pheno2.csv') %>%
mutate(grp = if_else(str_detect(Condition, 'C$'), 'Control', 'High fat'),
donor = case_when(
str_detect(Condition, '1') ~ 'Donor1',
str_detect(Condition, '2') ~ 'Donor2',
str_detect(Condition, '3') ~ 'Donor3'
)) %>%
left_join(asv_alpha_diversity_ag %>% select(sampleid, oligos_id))
pheno2 <- read_csv('../data/CS_pheno2.csv')
pheno2 <- read_csv('../data/CS_pheno2.csv') %>%
mutate(grp = if_else(str_detect(Condition, 'C$'), 'Control', 'High fat'),
donor = case_when(
str_detect(Condition, '1') ~ 'Donor1',
str_detect(Condition, '2') ~ 'Donor2',
str_detect(Condition, '3') ~ 'Donor3'
)) %>%
left_join(asv_alpha_diversity_ag %>% select(sampleid, oligos_id))
bc %>%
as.data.frame() %>%
rownames_to_column('sampleid') %>%
ungroup() %>%
inner_join(pheno2) %>%
distinct() %>%
ggscatter(x = 'V1', y = 'V2', color =  'donor', shape = 'grp') +
labs(title = 'PCOA of 1 Week After Diet + Gavage from three donors') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))
bc %>%
as.data.frame() %>%
rownames_to_column('sampleid') %>%
ungroup() %>%
inner_join(pheno2) %>%
distinct() %>%
ggscatter(x = 'V1', y = 'V2', color =  'donor', shape = 'grp') +
labs(title = 'PCOA of 1 Week After Diet + Gavage from three donors') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))  +
theme(aspect.ratio = 1)
bc %>%
as.data.frame() %>%
rownames_to_column('sampleid') %>%
ungroup() %>%
inner_join(pheno2) %>%
distinct() %>%
ggscatter(x = 'V1', y = 'V2', color =  'donor', shape = 'grp') +
labs(title = 'PCOA of 1 Week After Diet + Gavage\nfrom three donors') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))  +
theme(aspect.ratio = 1)
bc %>%
as.data.frame() %>%
rownames_to_column('sampleid') %>%
ungroup() %>%
inner_join(pheno2) %>%
distinct() %>%
ggscatter(x = 'V1', y = 'V2', color =  'donor', shape = 'grp') +
labs(title = 'PCOA of 1 Week After Diet + Gavage\nfrom three donors') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]"))  +
theme(aspect.ratio = 1,
legend.position = 'right')
#theme_void() +
ggsave('../data/05_PCOA(bray-curtis) of three donors.pdf')
#theme_void() +
ggsave('../data/05_PCOA(bray-curtis) of three donors.pdf', width = 4, height = 4)
# all of the days alpha plot
alpha <- asv_alpha_diversity_ag %>%
filter(sampleid %in% pheno1$sampleid)
View(alpha)
pheno1_all <- pheno1 %>%
full_join(alpha )
View(pheno1_all)
pheno1_all <- pheno1 %>%
full_join(alpha ) %>%
select(Mouse_num:count_total)
pheno1_all %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter', color = 'Condition', add.params = list(size = 3))  +
scale_color_manual(values = color_key) +
stat_compare_means()
# all of the days alpha plot
alpha <- asv_alpha_diversity_ag %>%
filter(sampleid %in% pheno1$sampleid)
pheno1_all <- pheno1 %>%
full_join(alpha ) %>%
select(Mouse_num:count_total)
pheno1_all %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter', facet.by = 'Date_collected',
color = 'Condition', add.params = list(size = 3))  +
scale_color_manual(values = color_key) +
stat_compare_means()
pheno1_all
pheno1_all %>%
ggboxplot(x = 'Condition', y = 'simpson_reciprocal', add = 'jitter', facet.by = 'Date_Collected',
color = 'Condition', add.params = list(size = 3))  +
scale_color_manual(values = color_key) +
stat_compare_means()
ggsave('../data/05_all_pheno1.pdf', width = 6, height = 4)
connect_database()
get_table_from_database('shotgun_lookup_ad')
View(shotgun_lookup_ad)
