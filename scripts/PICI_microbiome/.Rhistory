guides(shape='none')
cts_meta <- spp %>%
filter(clade_name %in% keepspp) %>%
select(sampleid, clade_name,perc ) %>%
spread(key = 'clade_name', value = 'perc', fill = 0) %>%
full_join(meta_amadeus)
cts_meta_cts <- cts_meta %>%
select(starts_with('k__'))
# the conversion and ORR is both not significant
anosim(cts_meta_cts, cts_meta$CD8_Conversion_Hot_to_Cold, permutations = 999, distance = "bray", strata = NULL,
parallel = 16)
colnames(meta_amadeus)
pcoa_ORR_Responder
pcoa_ORR_Responder
# the conversion and ORR is both not significant
anosim(cts_meta_cts, cts_meta$CD8_Conversion_Hot_to_Cold, permutations = 999, distance = "bray", strata = NULL,
parallel = 16)
#may be must look at the bl samples between convert of not convert
bl_convert <- cts_meta %>%
filter(Visit == 'BL' & CD8_Conversion_Hot_to_Cold %in% c('N','Y'))
# conclusion: not really a difference between converter and non-converter in BL
anosim(bl_convert %>% select(starts_with('k__')), bl_convert$CD8_Conversion_Hot_to_Cold, permutations = 999, distance = "bray", strata = NULL, parallel = 16)
# look at the Rx samples between convert or not convert
Rx_convert <- cts_meta %>%
filter(Visit == 'Rx' & CD8_Conversion_Hot_to_Cold %in% c('N','Y'))
# conclusion: not really a difference between converter and non-converter in BL
anosim(Rx_convert %>% select(starts_with('k__')), Rx_convert$CD8_Conversion_Hot_to_Cold, permutations = 999, distance = "bray", strata = NULL, parallel = 16)
# look at the bl samples between responder and nonresponder
bl_res <- cts_meta %>%
filter(Visit == 'BL')
bl_res_anosim <- anosim(bl_res %>% select(starts_with('k__')), bl_res$ORR_Responder, permutations = 999, distance = "bray", strata = NULL, parallel = 16)
bl_res_cts <- bl_res %>% select(sampleid, starts_with('k__')) %>%
column_to_rownames('sampleid')
dist_bl <- vegdist(bl_res_cts, method = 'bray')
eigen <- ape::pcoa(dist_bl)$values$Eigenvalues
percent_var <- signif(eigen/sum(eigen), 3)*100
bc_bl <- cmdscale(dist_bl, k = 2)
beta_meta_amadeus_bl <- bc_bl %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
inner_join(meta_amadeus)
beta_meta_amadeus_bl %>%
ggscatter(x = 'V1', y = 'V2', color =  'ORR_Responder', palette = 'lancet',
title = str_glue('Bl samples only PCoA\npval:{bl_res_anosim$signif} statistic:{round(bl_res_anosim$statistic, 4)}')) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
ggsave('../figs/03_bl_pcoa_res.pdf', width = 5, height = 4)
# look at the Rx samples between responder and nonresponder
Rx_res <- cts_meta %>%
filter(Visit == 'Rx')
anosim(Rx_res %>% select(starts_with('k__')), Rx_res$ORR_Responder, permutations = 999, distance = "bray", strata = NULL, parallel = 16)
# reaches borderline sig p value
Rx_res_cts <- Rx_res %>% select(sampleid, starts_with('k__')) %>%
column_to_rownames('sampleid')
dist_Rx <- vegdist(Rx_res_cts, method = 'bray')
eigen <- ape::pcoa(dist_Rx)$values$Eigenvalues
percent_var <- signif(eigen/sum(eigen), 3)*100
bc_Rx <- cmdscale(dist_Rx, k = 2)
beta_meta_amadeus_Rx <- bc_Rx %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
inner_join(meta_amadeus)
beta_meta_amadeus_Rx %>%
ggscatter(x = 'V1', y = 'V2', color =  'ORR_Responder', palette = 'lancet') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# but there is only one sample in one group!!!!!!!!!
# look at the Rx samples between convert or not convert
Rx_convert <- cts_meta %>%
filter(Visit == 'Rx' & CD8_Conversion_Hot_to_Cold %in% c('N','Y'))
# conclusion: not really a difference between converter and non-converter in BL
anosim(Rx_convert %>% select(starts_with('k__')), Rx_convert$CD8_Conversion_Hot_to_Cold, permutations = 999, distance = "bray", strata = NULL, parallel = 16)
# look at the bl samples between responder and nonresponder
bl_res <- cts_meta %>%
filter(Visit == 'BL')
bl_res_anosim <- anosim(bl_res %>% select(starts_with('k__')), bl_res$ORR_Responder, permutations = 999, distance = "bray", strata = NULL, parallel = 16)
bl_res_cts <- bl_res %>% select(sampleid, starts_with('k__')) %>%
column_to_rownames('sampleid')
dist_bl <- vegdist(bl_res_cts, method = 'bray')
eigen <- ape::pcoa(dist_bl)$values$Eigenvalues
percent_var <- signif(eigen/sum(eigen), 3)*100
bc_bl <- cmdscale(dist_bl, k = 2)
beta_meta_amadeus_bl <- bc_bl %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
inner_join(meta_amadeus)
beta_meta_amadeus_bl %>%
ggscatter(x = 'V1', y = 'V2', color =  'ORR_Responder', palette = 'lancet',
title = str_glue('Bl samples only PCoA\npval:{bl_res_anosim$signif} statistic:{round(bl_res_anosim$statistic, 4)}')) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
ggsave('../figs/03_bl_pcoa_res.pdf', width = 5, height = 4)
# look at the Rx samples between convert or not convert
Rx_convert <- cts_meta %>%
filter(Visit == 'Rx' & CD8_Conversion_Hot_to_Cold %in% c('N','Y'))
# conclusion: not really a difference between converter and non-converter in BL
anosim(Rx_convert %>% select(starts_with('k__')), Rx_convert$CD8_Conversion_Hot_to_Cold, permutations = 999, distance = "bray", strata = NULL, parallel = 16)
# look at the bl samples between responder and nonresponder
bl_res <- cts_meta %>%
filter(Visit == 'BL')
bl_res_anosim <- anosim(bl_res %>% select(starts_with('k__')), bl_res$ORR_Responder, permutations = 999, distance = "bray", strata = NULL, parallel = 16)
bl_res_cts <- bl_res %>% select(sampleid, starts_with('k__')) %>%
column_to_rownames('sampleid')
dist_bl <- vegdist(bl_res_cts, method = 'bray')
eigen <- ape::pcoa(dist_bl)$values$Eigenvalues
percent_var <- signif(eigen/sum(eigen), 3)*100
bc_bl <- cmdscale(dist_bl, k = 2)
beta_meta_amadeus_bl <- bc_bl %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
inner_join(meta_amadeus)
beta_meta_amadeus_bl %>%
ggscatter(x = 'V1', y = 'V2', color =  'ORR_Responder', palette = 'lancet',
title = str_glue('Bl samples only PCoA\npval:{bl_res_anosim$signif} statistic:{round(bl_res_anosim$statistic, 4)}')) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
ggsave('../figs/03_bl_pcoa_res.pdf', width = 5, height = 4)
# look at the bl samples between responder and nonresponder
bl_res <- cts_meta %>%
filter(Visit == 'BL')
bl_res_anosim <- anosim(bl_res %>% select(starts_with('k__')), bl_res$ORR_Responder, permutations = 999, distance = "bray", strata = NULL, parallel = 16)
bl_res_cts <- bl_res %>% select(sampleid, starts_with('k__')) %>%
column_to_rownames('sampleid')
dist_bl <- vegdist(bl_res_cts, method = 'bray')
eigen <- ape::pcoa(dist_bl)$values$Eigenvalues
percent_var <- signif(eigen/sum(eigen), 3)*100
bc_bl <- cmdscale(dist_bl, k = 2)
beta_meta_amadeus_bl <- bc_bl %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
inner_join(meta_amadeus)
beta_meta_amadeus_bl %>%
ggscatter(x = 'V1', y = 'V2', color =  'ORR_Responder', palette = 'lancet',
title = str_glue('Bl samples only PCoA\npval:{bl_res_anosim$signif} statistic:{round(bl_res_anosim$statistic, 4)}')) +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
ggsave('../figs/03_bl_pcoa_res.pdf', width = 5, height = 4)
# look at the Rx samples between responder and nonresponder
Rx_res <- cts_meta %>%
filter(Visit == 'Rx')
anosim(Rx_res %>% select(starts_with('k__')), Rx_res$ORR_Responder, permutations = 999, distance = "bray", strata = NULL, parallel = 16)
# reaches borderline sig p value
Rx_res_cts <- Rx_res %>% select(sampleid, starts_with('k__')) %>%
column_to_rownames('sampleid')
dist_Rx <- vegdist(Rx_res_cts, method = 'bray')
eigen <- ape::pcoa(dist_Rx)$values$Eigenvalues
percent_var <- signif(eigen/sum(eigen), 3)*100
bc_Rx <- cmdscale(dist_Rx, k = 2)
beta_meta_amadeus_Rx <- bc_Rx %>%
as.data.frame() %>%
rownames_to_column('sampleid')  %>%
inner_join(meta_amadeus)
beta_meta_amadeus_Rx %>%
ggscatter(x = 'V1', y = 'V2', color =  'ORR_Responder', palette = 'lancet') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# but there is only one sample in one group!!!!!!!!!
# color by visit
pcoa_visit <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Visit', shape = 'CD8_Conversion_Hot_to_Cold', palette = 'jama') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
guides(shape='none')
# color by study day
pcoa_day <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Study_Day', shape = 'CD8_Conversion_Hot_to_Cold') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
viridis::scale_color_viridis() +
guides(shape='none')
# color by pt
library(randomcoloR)
single_pt <- meta_amadeus %>%
count(pid, sort = T) %>%
filter(n == 1) %>%
pull(pid)
paired_pt <- meta_amadeus %>%
count(pid, sort = T) %>%
filter(n == 2) %>%
pull(pid)
paired_palette <- distinctColorPalette(length(paired_pt))
pal <- c(paired_palette, rep('black', length(single_pt)))
names(pal) <- c(paired_pt, single_pt)
pcoa_pid <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'pid', shape = 'CD8_Conversion_Hot_to_Cold') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
scale_color_manual(values = pal)   +
guides(shape='none')
# color by alpha diversity
pcoa_alpha <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'inv', shape = 'CD8_Conversion_Hot_to_Cold') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
viridis::scale_color_viridis() +
guides(shape='none')
# color by tumor type
pcoa_Tumor <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Manual_Tumor_Buckets', shape = 'CD8_Conversion_Hot_to_Cold') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
guides(shape='none')
# color by Best_Overall_Response
pcoa_Best_Overall_Response <-beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Best_Overall_Response', palette = 'jco', shape = 'CD8_Conversion_Hot_to_Cold') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')  +
guides(shape='none')
# arrange the above into a facet-wrap
library(gridExtra)
pcoa_list <- list(pcoa_alpha, pcoa_ORR_Responder, pcoa_Best_Overall_Response,pcoa_visit ,  pcoa_pid, pcoa_day, pcoa_Tumor )
n <- length(pcoa_list)
nCol <- 3
all <- do.call("grid.arrange", c(pcoa_list, ncol=nCol))
ggsave('../figs/03_pcoa_all.pdf',
width = 16,
height = 11, plot = all)
# color by visit
pcoa_visit <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Visit', shape = 'CD8_Conversion_Hot_to_Cold', palette = 'jama') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# color by study day
pcoa_day <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Study_Day', shape = 'CD8_Conversion_Hot_to_Cold') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
viridis::scale_color_viridis()
# color by pt
library(randomcoloR)
single_pt <- meta_amadeus %>%
count(pid, sort = T) %>%
filter(n == 1) %>%
pull(pid)
paired_pt <- meta_amadeus %>%
count(pid, sort = T) %>%
filter(n == 2) %>%
pull(pid)
paired_palette <- distinctColorPalette(length(paired_pt))
pal <- c(paired_palette, rep('black', length(single_pt)))
names(pal) <- c(paired_pt, single_pt)
pcoa_pid <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'pid', shape = 'CD8_Conversion_Hot_to_Cold') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
scale_color_manual(values = pal)
# color by alpha diversity
pcoa_alpha <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'inv', shape = 'CD8_Conversion_Hot_to_Cold') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
viridis::scale_color_viridis()
# color by tumor type
pcoa_Tumor <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Manual_Tumor_Buckets', shape = 'CD8_Conversion_Hot_to_Cold') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# color by Best_Overall_Response
pcoa_Best_Overall_Response <-beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Best_Overall_Response', palette = 'jco', shape = 'CD8_Conversion_Hot_to_Cold') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# color by visit
pcoa_visit <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Visit',  palette = 'jama') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# color by study day
pcoa_day <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Study_Day') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
viridis::scale_color_viridis()
# color by pt
library(randomcoloR)
single_pt <- meta_amadeus %>%
count(pid, sort = T) %>%
filter(n == 1) %>%
pull(pid)
paired_pt <- meta_amadeus %>%
count(pid, sort = T) %>%
filter(n == 2) %>%
pull(pid)
paired_palette <- distinctColorPalette(length(paired_pt))
pal <- c(paired_palette, rep('black', length(single_pt)))
names(pal) <- c(paired_pt, single_pt)
pcoa_pid <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'pid') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
scale_color_manual(values = pal)
# color by alpha diversity
pcoa_alpha <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'inv') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right') +
viridis::scale_color_viridis()
# color by tumor type
pcoa_Tumor <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Manual_Tumor_Buckets') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# color by Best_Overall_Response
pcoa_Best_Overall_Response <-beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'Best_Overall_Response', palette = 'jco') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# arrange the above into a facet-wrap
library(gridExtra)
pcoa_list <- list(pcoa_alpha, pcoa_ORR_Responder, pcoa_Best_Overall_Response,pcoa_visit ,  pcoa_pid, pcoa_day, pcoa_Tumor )
n <- length(pcoa_list)
nCol <- 3
all <- do.call("grid.arrange", c(pcoa_list, ncol=nCol))
ggsave('../figs/03_pcoa_all.pdf',
width = 16,
height = 11, plot = all)
spp %>%
write_csv('../data/03_amadeus_species_perc.csv')
# plotting at the genus level
genera <- spp %>%
mutate(genus = str_replace(clade_name, '\\|s__.+$','')) %>%
group_by(sampleid, genus) %>%
summarise(relab = sum(perc))
genera %>%
write_csv('../data/03_amadeus_genus_perc.csv')
genera %>%
ungroup() %>%
distinct(genus)
family <- spp %>%
mutate(family = str_replace(clade_name, '\\|g__.+$','')) %>%
group_by(sampleid, family) %>%
summarise(relab = sum(perc)) %>%
mutate(fam = str_extract(family, 'f__.+$'))
family %>%
write_csv('../data/03_amadeus_family_perc.csv')
# the dat with family relab and also meta data
dat <- family %>%
left_join(meta_amadeus, by = "sampleid") %>%
arrange(sid) %>%
mutate(pid_res = str_glue('{pid}: {ORR_Responder}'))
# assign colors to the families
library(randomcoloR)
n <- family %>%
ungroup() %>%
distinct(family) %>%
nrow
palette <- distinctColorPalette(n)
#pie(rep(1, n), col=palette)
# compute hierarchical cluster
hc <- hclust(dist_, method = 'complete')
dend <- as.dendrogram(hc)
sample_dendogram_order <- labels(dend)
family %>%
mutate(fam = str_extract(family, 'f__.+$')) %>%
mutate(fam = fct_reorder(fam, family,  .desc = F)) %>%
left_join(meta_amadeus, by = "sampleid") %>%
arrange(sid) %>%
mutate(pid_res = str_glue('{pid}: {ORR_Responder}')) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'fam', color = 'white' , xlab = '', ylab = 'Relative abundance') +
facet_wrap(pid_res ~ CD8_Conversion_Hot_to_Cold, scales = 'free', nrow = 2) +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../figs/03_family_bar_CD8_Conversion_Hot_to_Cold_with_pidres.pdf', width = 15, height = 8)
# split by Best_Overall_Response
family %>%
mutate(fam = str_extract(family, 'f__.+$')) %>%
mutate(fam = fct_reorder(fam, family,  .desc = F)) %>%
left_join(meta_amadeus, by = "sampleid") %>%
mutate(sampleid = factor(sampleid, levels = sample_dendogram_order)) %>%
arrange(sid) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'fam', color = 'white',
xlab = '', ylab = 'Relative abundance') +
facet_wrap(~ Best_Overall_Response, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../figs/03_family_bar_Best_Overall_Response.pdf', width = 10, height = 5)
# split by visit
family %>%
mutate(fam = str_extract(family, 'f__.+$')) %>%
mutate(fam = fct_reorder(fam, family,  .desc = F)) %>%
left_join(meta_amadeus, by = "sampleid") %>%
mutate(sampleid = factor(sampleid, levels = sample_dendogram_order)) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'fam', color = 'white' ,
xlab = '', ylab = 'Relative abundance') +
facet_wrap(~ Visit, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../figs/03_family_bar_visit.pdf', width = 10, height = 5)
# split by visit
family %>%
mutate(fam = str_extract(family, 'f__.+$')) %>%
mutate(fam = fct_reorder(fam, family,  .desc = F)) %>%
left_join(meta_amadeus, by = "sampleid") %>%
mutate(sampleid = factor(sampleid, levels = sample_dendogram_order)) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'fam', color = 'white' ,
xlab = '', ylab = 'Relative abundance') +
facet_wrap(~ Visit, scales = 'free') +
scale_fill_manual(values = palette) +
theme( axis.text.x = element_text(angle=45, hjust=1),
legend.position = 'none')
ggsave('../figs/03_family_bar_visit.pdf', width = 10, height = 5)
# create a small legend with only the major fams
major_fam <- dat %>%
ungroup() %>%
filter(relab > 4) %>%
distinct(fam) %>%
pull(fam)
dat_order_fam <- dat %>%
mutate(fam = fct_reorder(fam, family,  .desc = F))
full_pal <- palette
names(full_pal) <- levels(dat_order_fam$fam)
fam22 <- full_pal[names(full_pal) %in% major_fam]
family %>%
mutate(fam = str_extract(family, 'f__.+$')) %>%
mutate(fam = fct_reorder(fam, family,  .desc = F)) %>%
left_join(meta_amadeus, by = "sampleid") %>%
mutate(sampleid = factor(sampleid, levels = sample_dendogram_order)) %>%
filter(fam %in% major_fam) %>%
ggbarplot(x = 'sid', y = 'relab', fill = 'fam', color = 'white' ) +
scale_fill_manual(values = fam22) +
theme( axis.text.x = element_text(angle=45, hjust=1), legend.position = 'right')  +
guides(fill = guide_legend(ncol = 1))
ggsave('../figs/03_family_legend22.pdf', width = 10, height = 8)
fam_joined <- family %>%
select(sampleid, fam, relab) %>%
spread('fam', 'relab') %>%
full_join(meta_amadeus, by = "sampleid")
fam_df <- fam_joined %>%
ungroup() %>%
select(f__Acidaminococcaceae: f__Victivallaceae)
pmv_test <- adonis(fam_df ~ ORR_Responder + Manual_Tumor_Buckets + Visit + pid, data=fam_joined, permutations=999, method = 'bray')
pmv_test
# ORR_Responder CD8_Conversion_Hot_to_Cold
# color by response status
pcoa_ORR_Responder <- beta_meta_amadeus %>%
ggscatter(x = 'V1', y = 'V2', color =  'ORR_Responder', palette = 'lancet') +
labs(title = '') +
xlab(paste0("PC 1 [",percent_var[1],"%]")) +
ylab(paste0("PC 2 [",percent_var[2],"%]")) +
theme(aspect.ratio=1, legend.position = 'right')
# arrange the above into a facet-wrap
library(gridExtra)
pcoa_list <- list(pcoa_alpha, pcoa_ORR_Responder, pcoa_Best_Overall_Response,pcoa_visit ,  pcoa_pid, pcoa_day, pcoa_Tumor )
n <- length(pcoa_list)
nCol <- 3
all <- do.call("grid.arrange", c(pcoa_list, ncol=nCol))
ggsave('../figs/03_pcoa_all.pdf',
width = 16,
height = 11, plot = all)
ptb <- read_csv('../data/input/PICI0025_clinical_2021-10-07/AMADEUS_ClinicalData_20211007.csv')
# the meta table that has both ptb and stb info
meta_amadeus <- stb %>%
inner_join(ptbs, by = "pid")
meta_amadeus %>%
write_csv('../data/01_meta_amadeus.csv')
cohortA <- read_csv('../data/input/PICI0033_CohortA_clinical_2021-02-16/PorterA_ClinicalData_20210216.csv')
library(ggvenn)
two_list <- list(amadeus_pt = ptbs$pid, allsamps_pt = stb$pid, porterA_pt = cohortA$Subject)
ggvenn(two_list, show_percentage = F)
ggsave('../figs/01_samples_venn.png', width = 4, height = 4)
# do we have all the patients
# the meta table that has both ptb and stb info
meta_amadeus <- stb %>%
inner_join(ptbs, by = "pid")
View(meta_amadeus)
