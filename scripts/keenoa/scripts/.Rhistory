daily_count %>%
ggboxplot(x = 'participant_code', y = 'n')
daily_count
daily_count %>%
mutate(participant_code = fct_reorder(participant_code, n, .fun=median, .desc = F)) %>%
ggboxplot(x = 'participant_code', y = 'n')
daily_count
daily_count %>%
mutate(participant_code = fct_reorder(participant_code, n, .fun=median, .desc = F))
daily_count %>%
#mutate(participant_code = fct_reorder(participant_code, n, .fun=median, .desc = F)) %>%
ggboxplot(x = 'participant_code', y = 'n')
daily_count
daily_count %>%
mutate(participant_code = fct_reorder(as.character(participant_code), n, .fun=median, .desc = F)) %>%
ggboxplot(x = 'participant_code', y = 'n')
daily_count %>%
mutate(participant_code = fct_reorder(as.character(participant_code), n, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'n')
daily_count %>%
mutate(participant_code = fct_reorder(as.character(participant_code), n, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'n', add = 'jitter')
daily_count %>%
mutate(participant_code = fct_reorder(as.character(participant_code), n, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'n', add = 'jitter', add.params = list(color = 'green', size = 2, alpha = 0.5))
daily_count %>%
mutate(participant_code = fct_reorder(as.character(participant_code), n, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'n', add = 'jitter', add.params = list(color = 'forestgreen', size = 2, alpha = 0.5))
daily_count %>%
mutate(participant_code = fct_reorder(as.character(participant_code), n, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'n', add = 'jitter', add.params = list(color = 'forestgreen', size = 2, alpha = 0.5))
daily_count %>%
mutate(participant_code = fct_reorder(as.character(participant_code), n, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'n', add = 'jitter', add.params = list(color = 'forestgreen', size = 2, alpha = 0.5), title = 'Daily total records for each participant')
# curious what is a day's eating like for a total entries of ave 5
item5 <- item %>%
filter(participant_code == 76684)
View(item5)
# curious what is a day's eating like for a total entries of ave 5
item5 <- item %>%
filter(participant_code == 76684) %>%
select(diary_date, meal_consume_time, entry_description)
# curious what is a day's eating like for a total entries of ave 5
item5 <- item %>%
filter(participant_code == 76684) %>%
select(diary_date, meal_consume_time, entry_description) %>%
arrange(diary_date,meal_consume_time )
# curious what is a day's eating like for a total entries of ave 5
item5 <- item %>%
filter(participant_code == 76684) %>%
select(diary_date, meal_consume_time, entry_description) %>%
arrange(diary_date,meal_consume_time ) %>%
split(.$diary_date)
item5
# to look at the WWEIA code
codeterm <- read_csv('../data/items_with_code.csv')
View(codeterm)
codeterm %>%
count(participant_code, diary_date, meal_consume_time, entry_description)
codeterm %>%
count(participant_code, diary_date, meal_consume_time, entry_description, sort = T)
codeterm %>%
count(participant_code, diary_date, meal_consume_time, entry_description, sort = T)
# the unique items
cleaned <- codeterm %>%
distinct(participant_code, diary_date, meal_consume_time, entry_description,.keep_all = T)
76/37
# the unique items
cleaned <- codeterm %>%
distinct(participant_code, diary_date, meal_consume_time, entry_description,.keep_all = T)
View(cleaned)
item
# to look at the total daily calories
daily_cal <- item %>%
group_by(participant_code,diary_date ) %>%
summarise(daily_cal = sum(energy_kilocalories_kcal))
View(daily_cal)
daily_cal
daily_cal %>%
mutate(participant_code = fct_reorder(as.character(participant_code), daily_cal, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'daily_cal', add = 'jitter', add.params = list(color = 'blue', size = 2, alpha = 0.5), title = 'Daily total calories for each participant')
daily_cal
daily_cal %>%
mutate(participant_code = fct_reorder(as.character(participant_code), daily_cal, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'daily_cal', add = 'jitter', add.params = list(color = 'blue', size = 2, alpha = 0.5), title = 'Daily total calories for each participant')
daily_cal <- item %>%
group_by(participant_code,diary_date ) %>%
summarise(daily_cal = sum(energy_kilocalories_kcal))
daily_cal %>%
mutate(participant_code = fct_reorder(as.character(participant_code), daily_cal, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'daily_cal', add = 'jitter', add.params = list(color = 'blue', size = 2, alpha = 0.5), title = 'Daily total calories for each participant')
daily_cal
daily_cal %>%
mutate(participant_code = fct_reorder(as.character(participant_code), daily_calories, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'daily_calories', add = 'jitter', add.params = list(color = 'blue', size = 2, alpha = 0.5), title = 'Daily total calories for each participant')
# to look at the total daily calories
daily_cal <- item %>%
group_by(participant_code,diary_date ) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal))
daily_cal %>%
mutate(participant_code = fct_reorder(as.character(participant_code), daily_calories, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'daily_calories', add = 'jitter', add.params = list(color = 'blue', size = 2, alpha = 0.5), title = 'Daily total calories for each participant')
# to look at the total daily calories
daily_cal <- item %>%
group_by(participant_code,diary_date ) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal))
daily_cal %>%
mutate(participant_code = fct_reorder(as.character(participant_code), daily_calories, .fun=median, .desc = T)) %>%
ggboxplot(x = 'participant_code', y = 'daily_calories', add = 'jitter', add.params = list(color = 'blue', size = 2, alpha = 0.5), title = 'Daily total calories for each participant')
# to look at the total daily calories
daily_cal <- item %>%
group_by(participant_code,diary_date ) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal)) %>%
mutate(participant_code = fct_reorder(as.character(participant_code), daily_calories, .fun=median, .desc = T))
daily_cal %>%
ggboxplot(x = 'participant_code', y = 'daily_calories', add = 'jitter', add.params = list(color = 'blue', size = 2, alpha = 0.5), title = 'Daily total calories for each participant')
# to look at the total daily calories
daily_cal <- item %>%
group_by(participant_code,diary_date ) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal)) %>%
ungroup( ) %>%
mutate(participant_code = fct_reorder(as.character(participant_code), daily_calories, .fun=median, .desc = T))
# to look at the total daily calories
daily_cal <- item %>%
group_by(participant_code,diary_date ) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal)) %>%
ungroup( ) %>%
mutate(participant_code = fct_reorder(as.character(participant_code), daily_calories, .fun=median, .desc = T))
daily_cal %>%
ggboxplot(x = 'participant_code', y = 'daily_calories', add = 'jitter', add.params = list(color = 'blue', size = 2, alpha = 0.5), title = 'Daily total calories for each participant')
# to look at the total daily calories
daily_cal <- item %>%
group_by(participant_code,diary_date ) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal)) %>%
ungroup( ) %>%
mutate(participant_code = fct_reorder(as.character(participant_code), daily_calories, .fun=median, .desc = T))
daily_cal %>%
ggboxplot(x = 'participant_code', y = 'daily_calories', add = 'jitter', add.params = list(color = 'blue', size = 2, alpha = 0.5), title = 'Daily total calories for each participant')
knitr::opts_chunk$set(echo = TRUE, message = F)
View(codeterm)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggpubr)
patient <- read_csv('../data/items_with_code.csv')
# to look at the WWEIA code of a patient data of 4 days verified by peter
patient <- read_csv('../data/items_with_code.csv')
patient %>%
count(participant_code, diary_date, meal_consume_time, entry_description, sort = T)
patient %>%
count(participant_code, diary_date, meal_consume_time, entry_description, sort = T)
View(patient)
library(tidyverse)
library(ggpubr)
# to look at the WWEIA code of a patient data of 4 days verified by peter
# a dish is broken down into the components
patient <- read_csv('../data/items_with_code.csv')
patient
# look at the time of the data logging
time <- patient %>%
distinct(diary_date, meal_consume_time)
View(time)
# look at the time of the data logging
time <- patient %>%
distinct(diary_date, meal_consume_time) %>%
mutate(time = str_glue('{diary_date} {meal_consume_time}')) %>%
mutate(time = ymd_hms(time))
library(lubridate)
# look at the time of the data logging
time <- patient %>%
distinct(diary_date, meal_consume_time) %>%
mutate(time = str_glue('{diary_date} {meal_consume_time}')) %>%
mutate(time = ymd_hms(time))
time %>%
gghistogram(x = 'time')
time
# to look at the WWEIA code of a patient data of 4 days verified by peter
# a dish is broken down into the components
patient <- read_csv('../data/items_with_code.csv') %>% mutate(diary_date = dmy(diary_date))
# look at the time of the data logging
time <- patient %>%
distinct(diary_date, meal_consume_time) %>%
mutate(time = str_glue('{diary_date} {meal_consume_time}')) %>%
mutate(time = ymd_hms(time))
time %>%
gghistogram(x = 'time')
time %>%
gghistogram(x = 'time', bins = 100)
?date_breaks
time %>%
gghistogram(x = 'time', bins = 100) +
scale_x_datetime(breaks = breaks_width("2 hours"), labels = date_format("%M:%S"))
library(scales)
time %>%
gghistogram(x = 'time', bins = 100) +
scale_x_datetime(breaks = breaks_width("2 hours"), labels = date_format("%M:%S"))
time %>%
gghistogram(x = 'time', bins = 100) +
scale_x_datetime(breaks = breaks_width("2 hours"), labels = date_format("%H:%M"))
time %>%
gghistogram(x = 'time', bins = 100) +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%D %H:%M"))
time %>%
gghistogram(x = 'time', bins = 100) +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%D %H:%M")) +
theme(axis.text = element_text(angle = 90))
ggsave('../data/02_time_log.pdf', width = 15)
# look at the time of the data logging
time <- patient %>%
distinct(diary_date, meal_consume_time) %>%
mutate(time = str_glue('{diary_date} {meal_consume_time}')) %>%
mutate(time = ymd_hms(time))
time %>%
gghistogram(x = 'time', bins = 100, fill = 'blue') +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%D %H:%M")) +
theme(axis.text = element_text(angle = 90))
ggsave('../data/02_time_log.pdf', width = 15)
time %>%
gghistogram(x = 'time', bins = 100, fill = 'blue') +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%D %H:%M")) +
facet_grid(~ diary_date)
time %>%
gghistogram(x = 'time', bins = 100, fill = 'blue') +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%D %H:%M")) +
facet_grid(diary_date~ .)
time %>%
gghistogram(x = 'time', bins = 100, fill = 'blue') +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%D %H:%M")) +
facet_grid(diary_date~ ., scales = 'free_x')
time %>%
gghistogram(x = 'time', bins = 100, fill = 'blue') +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%H:%M")) +
facet_grid(diary_date~ ., scales = 'free_x')
time %>%
gghistogram(x = 'meal_consume_time', bins = 100, fill = 'blue') +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%H:%M")) +
facet_grid(diary_date~ ., scales = 'free_x')
time
time %>%
gghistogram(x = 'meal_consume_time', bins = 100, fill = 'blue')
time %>%
gghistogram(x = 'meal_consume_time', bins = 100, fill = 'blue') +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%H:%M"))
time
time %>%
gghistogram(x = 'meal_consume_time', bins = 100, fill = 'blue') +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%H:%M"))
time
# look at the time of the data logging
time <- patient %>%
distinct(diary_date, meal_consume_time) %>%
mutate(time = str_glue('{diary_date} {meal_consume_time}')) %>%
mutate(time = ymd_hms(time),
meal_consume_time = hms(meal_consume_time))
time
patient
time
# to look at the WWEIA code of a patient data of 4 days verified by peter
# a dish is broken down into the components
patient <- read_csv('../data/items_with_code.csv') %>% mutate(diary_date = dmy(diary_date),meal_consume_time = hms(meal_consume_time))
patient
# to look at the WWEIA code of a patient data of 4 days verified by peter
# a dish is broken down into the components
patient <- read_csv('../data/items_with_code.csv') %>% mutate(diary_date = dmy(diary_date),meal_consume_time = as.hms(meal_consume_time))
# to look at the WWEIA code of a patient data of 4 days verified by peter
# a dish is broken down into the components
patient <- read_csv('../data/items_with_code.csv') %>% mutate(diary_date = dmy(diary_date),meal_consume_time = hms::as.hms(meal_consume_time))
patient
time %>%
gghistogram(x = 'meal_consume_time', bins = 100, fill = 'blue') +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%H:%M")) +
facet_grid(diary_date~ ., scales = 'free_x')
time
# to look at the WWEIA code of a patient data of 4 days verified by peter
# a dish is broken down into the components
patient <- read_csv('../data/items_with_code.csv') %>% mutate(diary_date = dmy(diary_date),meal_consume_time = as.POSIXct(meal_consume_time))
patient
# to look at the WWEIA code of a patient data of 4 days verified by peter
# a dish is broken down into the components
patient <- read_csv('../data/items_with_code.csv') %>% mutate(diary_date = dmy(diary_date))
# look at the time of the data logging
time <- patient %>%
distinct(diary_date, meal_consume_time) %>%
mutate(time = str_glue('{diary_date} {meal_consume_time}')) %>%
mutate(time = ymd_hms(time))
time %>%
gghistogram(x = 'meal_consume_time', bins = 100, fill = 'blue') +
scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%H:%M"))
time %>%
gghistogram(x = 'meal_consume_time', bins = 100, fill = 'blue') +
#scale_x_datetime(breaks = breaks_width("1 hour"), labels = date_format("%H:%M")) +
facet_grid(diary_date~ ., scales = 'free_x')
time %>%
gghistogram(x = 'meal_consume_time', bins = 100, fill = 'blue', color = 'white') +
facet_grid(diary_date~ ., scales = 'free_x')
ggsave('../data/02_time_log.pdf', width = 15)
ggsave('../data/02_time_log.pdf', width = 8)
time %>%
gghistogram(x = 'meal_consume_time', bins = 100, fill = 'blue', color = 'white') +
facet_grid(diary_date~ ., scales = 'free_x') +
scale_x_datetime(breaks = breaks_width("1 hour"))
time %>%
gghistogram(x = 'meal_consume_time', bins = 100, fill = 'blue', color = 'white') +
facet_grid(diary_date~ ., scales = 'free_x')
ggsave('../data/02_time_log.pdf', width = 8)
patient
# the total entries of logging for each day
daily_log <- patient %>%
distinct(diary_date, entry_description)
View(daily_log)
# the total entries of logging for each day
daily_log <- patient %>%
distinct(diary_date, entry_description)
# the total entries of logging for each day
daily_log <- patient %>%
distinct(diary_date, entry_description, meal_consume_time)
daily_log <- patient %>%
distinct(diary_date, entry_description, meal_consume_time)
# the total entries of logging for each day
daily_log <- patient %>%
distinct(diary_date, entry_description)
# the total entries of logging for each day
daily_log <- patient %>%
distinct(diary_date, meal_consume_time)
# the total entries of logging for each day
daily_log <- patient %>%
distinct(diary_date, meal_consume_time, entry_description)
# the total entries of logging for each day
daily_log <- patient %>%
distinct(diary_date, meal_consume_time, entry_description) %>%
count(diary_date)
View(daily_log)
daily_log
daily_log %>%
ggbarplot(x = 'diary_date', y = 'n')
daily_log %>%
ggbarplot(x = 'diary_date', y = 'n', label = 'n')
daily_log %>%
ggbarplot(x = 'diary_date', y = 'n', label = 'n')
daily_log %>%
ggbarplot(x = 'diary_date', y = 'n', label = T)
daily_log %>%
ggbarplot(x = 'diary_date', y = 'n', label = T, fill = 'green', color = 'white')
daily_log %>%
ggbarplot(x = 'diary_date', y = 'n', label = T, fill = 'forestgreen', color = 'white')
daily_log %>%
ggbarplot(x = 'diary_date', y = 'n', label = T, fill = 'forestgreen', color = 'white',
title = 'Total number of foods consumed for each day')
# the total calories for each day
day_cal <- patient %>%
group_by(diary_date) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal)) %>%
ungroup( )
View(day_cal)
colnames(patient)
colnames(patient)[1:30]
colnames(patient)[1:35]
colnames(patient)[1:55]
# the total calories for each day
day_cal <- patient %>%
group_by(diary_date) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal),
daily_carb = sum(carbohydrate_total_by_difference_g),
daily_protein = sum(protein_g),
daily_fat = sum(fat_total_lipids_g),
daily_sugar = sum(sugars_total_g),
daily_fiber = sum(fibre_total_dietary_g)) %>%
ungroup()
# the total calories for each day
day_csum <- patient %>%
group_by(diary_date) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal),
daily_carb = sum(carbohydrate_total_by_difference_g),
daily_protein = sum(protein_g),
daily_fat = sum(fat_total_lipids_g),
daily_sugar = sum(sugars_total_g),
daily_fiber = sum(fibre_total_dietary_g)) %>%
ungroup()
# the total calories for each day
day_sum <- patient %>%
group_by(diary_date) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal),
daily_carb = sum(carbohydrate_total_by_difference_g),
daily_protein = sum(protein_g),
daily_fat = sum(fat_total_lipids_g),
daily_sugar = sum(sugars_total_g),
daily_fiber = sum(fibre_total_dietary_g)) %>%
ungroup()
View(day_sum)
View(patient)
# wondering about the sugar
sugar_NA <- patient %>%
filter(is.na(sugars_total_g))
View(sugar_NA)
# wondering about the sugar
sugar_NA <- patient %>%
filter(is.na(sugars_total_g)) %>%
select(diary_date, entry_description, entry_quantity, energy_kilocalories_kcal, carbohydrate_total_by_difference_g, protein_g, sugars_total_g, ends_with('ose'))
# wondering about the sugar
sugar_NA <- patient %>%
filter(is.na(sugars_total_g)) %>%
select(diary_date, entry_description, entry_quantity, energy_kilocalories_kcal, carbohydrate_total_by_difference_g, protein_g, sugars_total_g, ends_with('ose_g'))
sugar_NA %>%
write_csv('../data/02_question_about_the_sugar.csv')
View(day_sum)
# the total calories for each day
day_sum <- patient %>%
group_by(diary_date) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal),
daily_carb = sum(carbohydrate_total_by_difference_g),
daily_protein = sum(protein_g),
daily_fat = sum(fat_total_lipids_g),
daily_sugar = sum(sugars_total_g, na.rm = T),
daily_fiber = sum(fibre_total_dietary_g)) %>%
ungroup()
# the total calories for each day
day_sum <- patient %>%
group_by(diary_date) %>%
summarise(daily_calories = sum(energy_kilocalories_kcal),
daily_carb = sum(carbohydrate_total_by_difference_g),
daily_protein = sum(protein_g),
daily_fat = sum(fat_total_lipids_g),
daily_sugar = sum(sugars_total_g, na.rm = T),
daily_fiber = sum(fibre_total_dietary_g)) %>%
ungroup() %>%
full_join(daily_log)
day_sum
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)])
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
facet_grid(. ~ item)
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
facet_grid(item ~ .)
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
facet_grid(item ~ ., scales = 'free')
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
facet_grid(item ~ ., scales = 'free') +
theme_classic()
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
facet_grid(item ~ ., scales = 'free') +
theme_light()
ggsave(
'../data/02_daily_summaries.pdf'
)
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
facet_grid(item ~ ., scales = 'free') +
xlim(0)
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
facet_grid(item ~ ., scales = 'free') +
theme_light()
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
geom_line(aes(group = value), color = "grey", alpha = 0.5)
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
geom_line(aes(group = value), color = "grey", alpha = 0.5) +
facet_grid(item ~ ., scales = 'free') +
theme_light()
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
geom_line(aes(group = item), color = "grey", alpha = 0.5) +
facet_grid(item ~ ., scales = 'free') +
theme_light()
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
geom_line(aes(group = item), color = "grey", alpha = 0.5) +
facet_grid(item ~ ., scales = 'free') +
theme_light()
ggsave(
'../data/02_daily_summaries.pdf'
)
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
geom_line(aes(group = item), color = "black", alpha = 0.5) +
facet_grid(item ~ ., scales = 'free') +
theme_light()
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
geom_line(aes(group = item), color = "black", alpha = 0.5) +
facet_grid(item ~ ., scales = 'free') +
theme_light()
ggsave(
'../data/02_daily_summaries.pdf'
)
day_sum %>%
gather('item', 'value', names(.)[2]: names(.)[ncol(.)]) %>%
ggscatter(x = 'diary_date', y = 'value') +
geom_line(aes(group = item), color = "black", alpha = 0.5) +
facet_grid(item ~ ., scales = 'free') +
theme_light()
ggsave(
'../data/02_daily_summaries.pdf'
)
